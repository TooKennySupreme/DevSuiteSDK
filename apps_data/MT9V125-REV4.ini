; WIP Last Changed Rev: 2174
;**************************************************************************************       
; Copyright 2009 Aptina Imaging Corporation. All rights reserved.                             
;                                                                                             
;                                                                                             
; No permission to use, copy, modify, or distribute this software and/or                      
; its documentation for any purpose has been granted by Aptina Imaging Corporation.           
; If any such permission has been granted ( by separate agreement ), it                       
; is required that the above copyright notice appear in all copies and                        
; that both that copyright notice and this permission notice appear in                        
; supporting documentation, and that the name of Aptina Imaging Corporation or any            
; of its trademarks may not be used in advertising or publicity pertaining                    
; to distribution of the software without specific, written prior permission.                 
;                                                                                             
;                                                                                             
;      This software and any associated documentation are provided "AS IS" and                
;      without warranty of any kind.   APTINA IMAGING CORPORATION EXPRESSLY DISCLAIMS         
;      ALL WARRANTIES EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, NONINFRINGEMENT       
;      OF THIRD PARTY RIGHTS, AND ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS        
;      FOR A PARTICULAR PURPOSE.  APTINA DOES NOT WARRANT THAT THE FUNCTIONS CONTAINED        
;      IN THIS SOFTWARE WILL MEET YOUR REQUIREMENTS, OR THAT THE OPERATION OF THIS SOFTWARE   
;      WILL BE UNINTERRUPTED OR ERROR-FREE.  FURTHERMORE, APTINA DOES NOT WARRANT OR          
;      MAKE ANY REPRESENTATIONS REGARDING THE USE OR THE RESULTS OF THE USE OF ANY            
;      ACCOMPANYING DOCUMENTATION IN TERMS OF ITS CORRECTNESS, ACCURACY, RELIABILITY,         
;      OR OTHERWISE.                                                                          
;*************************************************************************************/       
; Default INI file for the A-0354SOC-REV4
;
; $Revision: 28075 $
; $Date: 2011-05-24 15:18:03 -0700 (Tue, 24 May 2011) $ 
;
; This file holds groups of register presets (sections) specific for this sensor. The 
; presets allow you to overwrite the power-on default settings with optimized register 
; settings. 
; The [Demo Initialization] section contains all optimized register settings for running
; the sensor in the demo environment. Other sections include settings optimized for a
; variety of situations like: Running at different master clock speeds, running under
; different lighting situations, running with different lenses, etc.
; Most of the demonstration software (DevWare, SensorDemo, ...) make use of this file
; to load and store the user presets.
;
; Keyname description:
; REG      = assign a new register value
; BITFIELD = do a READ-MODIFY-WRITE to part of a register. The part is defined as a mask.
; FIELD_WR = Write any register, variable or bitfield, specified by its symbol name
; LOAD     = load an alternate section from this section
; STATE    = set non-register state
; DELAY    = delay a certain amount of milliseconds before continuing 
; POLL_REG = Read a register a specified number of times, or until the register
;            value no longer meets a specified condition. You specify the
;            register by its address, and it only works with simple registers.
;            You also specify a delay between each iteration of the loop.
; POLL_FIELD = Like POLL_REG except you specify the register by its symbol name
;            as defined in the sensor data file. POLL_FIELD works with any kind
;            of register or variable.
;
; Keyname format:
; REG      = [<page>,] <address>, <value>             //<comment>
; BITFIELD = [<page>,] <address>, <mask>, <value>
;            Some examples: 
;            BITFIELD=2, 0x05, 0x0020, 1 //for register 5 on page 2, set the 6th bit to 1
;            BITFIELD=0x06, 0x000F, 0    //for register 6, clear the first 4 bits
; FIELD_WR = <registername>, [<bitfieldname>,] <value>
; LOAD     = <section>
; STATE    = <state>, <value>
; DELAY    = <milliseconds>
; POLL_REG = [<page>,]<address>,<mask>,<condition>,DELAY=<milliseconds>,TIMEOUT=<count> //<comment>
;            Example:  Poll every 50ms, stop when value <= 8 or after 5 times (250ms).
;            POLL_REG= 2, 0x3F, 0xFFFF, >8, DELAY=50, TIMEOUT=5
; POLL_FIELD = <registername>, [<bitfieldname>,] <condition>, DELAY=<milliseconds>, TIMEOUT=<count> //<comment>
;            Example:  Poll every 10 ms, stop when the value = 0, or after 500ms.
;            POLL_FIELD= SEQ_CMD, !=0, DELAY=10, TIMEOUT=50
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developer's guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <registername> Name of a register or variable as defined the sensor data (.sdat) file
; <bitfieldname> Optional name of a bitfield
; <condition>    <  <=  ==  !=  >  or  >=  followed by a numerical value
; <count>        Number of iterations of the polling loop
; <section>      the name of another section to load
; <state>        non-register program state names [do not modify]
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .ini file
;
;*************************************************************************************/

[Reset]
BITFIELD=0, 0x0D, 0x0001, 1 //RESET_REG - reset sensor
BITFIELD=0, 0x0D, 0x0020, 1 //RESET_REG - reset soc
BITFIELD=0, 0x0D, 0x0021, 0 //RESET_REG - resume both


[Demo Initialization]
REG=0x01, 0x13, 0x0780 	//CHIP_CR
LOAD = Rev4-3NoRowNC
LOAD = CCM_Improved_Facial_Color
IF_FIELD= LATCHED_PIN_STATUS, NTSC_PAL_SEL, ==0, LOAD= SW4=NTSC NTSC, ELSELOAD= SW4=PAL PAL

// Resync FPS reporting
DELAY= 20
STATE= Detect Master Clock, 1

[Toggle_Manual_WB]
BITFIELD=0x01, 0x06, 0x8000, 0x1 	//Flipping the Manual WB to get the defaults right
DELAY=500				// wait 500 ms
BITFIELD=0x01, 0x06, 0x8000, 0x0 	//Flipping back the Manual WB to get the defaults right

[NTSC]
IF_FIELD= LATCHED_PIN_STATUS, NTSC_PAL_SEL, ==0, LOAD= SW4=NTSC NTSC, ELSELOAD= SW4=PAL NTSC

[PAL]
IF_FIELD= LATCHED_PIN_STATUS, NTSC_PAL_SEL, ==0, LOAD= SW4=NTSC PAL, ELSELOAD= SW4=PAL PAL

[SW4=NTSC NTSC]
REG=1, 0x15, 0x0000	//(1) INV_LAT_PINS
REG=0, 0x05, 0x00E6	//(1) HORZ_BLANK

[SW4=NTSC PAL]
REG=1, 0x15, 0x0001	//(2) INV_LAT_PINS
REG=0, 0x05, 0x00EC	//(1) HORZ_BLANK

[SW4=PAL NTSC]
REG=1, 0x15, 0x0001	//(1) INV_LAT_PINS
REG=0, 0x05, 0x00E6	//(1) HORZ_BLANK

[SW4=PAL PAL]
REG=1, 0x15, 0x0000	//(2) INV_LAT_PINS
REG=0, 0x05, 0x00EC	//(1) HORZ_BLANK

[Rev4-3NoRowNC]
REG=0x00, 0x05, 0x00E6	//(1) HORZ_BLANK
REG=0x00, 0x22, 0x000D	//(1) DARK_ROWS_COLS_REG
REG=0x00, 0x42, 0x0797 	//VCM_VCL_REG
REG=0x00, 0x70, 0x9C57 	//RESERVED
REG=0x00, 0x71, 0x9C57 	//RESERVED
REG=0x00, 0x72, 0x6159 	//RESERVED
REG=0x00, 0x73, 0x9959 	//RESERVED
REG=0x00, 0x74, 0x7F77 	//RESERVED
REG=0x00, 0x75, 0x7E78 	//RESERVED
REG=0x00, 0x76, 0x9879 	//RESERVED
REG=0x00, 0x77, 0x755D 	//RESERVED
REG=0x00, 0x78, 0x9B53 	//RESERVED
REG=0x00, 0x79, 0x9955 	//RESERVED
REG=0x00, 0x7A, 0x9A57 	//RESERVED
REG=0x00, 0x7B, 0x9B56 	//RESERVED
REG=0x00, 0x7C, 0x9D55 	//RESERVED
REG=0x00, 0x7D, 0x755C 	//RESERVED
REG=0x00, 0x7E, 0x009D 	//RESERVED
REG=0x00, 0x7F, 0x9C52 	//RESERVED
REG=0x02, 0x3B, 0x04EC 	//AE_LIMIT_SHUTTER_DELAY_60HZ_NTSC
REG=0x00, 0x12, 0x04EC 	//RESERVED
REG=0x00, 0x35, 0x2024 	//RESERVED
REG=0x00, 0x38, 0x2002 	//ECLIPSE_THRESH
REG=0x01, 0x05, 0x0004 	//APETURE CORRECTION
REG=0x01, 0x11, 0x0003 	//RESERVED
REG=1, 0xDC, 0x1708	//(8) GAMMA_B_Y1_Y2
REG=1, 0xDD, 0x4B2E	//(8) GAMMA_B_Y3_Y4
REG=1, 0xDE, 0x9475	//(8) GAMMA_B_Y5_Y6
REG=1, 0xDF, 0xC0AC	//(8) GAMMA_B_Y7_Y8
REG=1, 0xE0, 0xE0D1	//(8) GAMMA_B_Y9_Y10
REG=1, 0xE1, 0x0000	//(4) GAMMA_B_Y0
REG=0x00, 0x30, 0x082A 	//ROW_NOISE_CONTROL_REG
REG=0x01, 0x3B, 0x041E 	//IFP_BLACK_LEVEL_SUBTRACTION
REG=0x02, 0x36, 0xA010 	//GAIN_LIM_AE
REG=0x02, 0x2E, 0x0000 	//AE_PRECISION_TARGET
DELAY=250
REG=0x02, 0x2E, 0x083C 	//AE_PRECISION_TARGET
REG=0x02, 0x24, 0x542B 	//MATRIX_ADJ_LIMITS
REG=0x02, 0x29, 0x9C64 	//AWB_WIDE_GATES
REG=0x02, 0x5E, 0x773E 	//RATIO_BASE_REG
REG=0x02, 0x5F, 0xFF84 	//RATIO_DELTA_REG
REG=0x02, 0x28, 0xEF09 	//AWB_ADVANCED_CONTROL_REG
REG=0x02, 0x1F, 0x00A6 	//AWB_CR_CB_LIMITS

REG=0x02, 0x2A, 0x0000 	//STD_LIM_MONO_ZONE
BITFIELD=1, 6, 0x8000, 1
DELAY=500
BITFIELD=1, 6, 0x8000, 0

[CCM_Improved_Facial_Color]
REG=0x02, 0x02, 0x00AE 	//BASE_MATRIX_SIGNS
REG=0x02, 0x03, 0x3923 	//BASE_MATRIX_SCALE_K1_K5
REG=0x02, 0x04, 0x0724 	//BASE_MATRIX_SCALE_K6_K9
REG=0x02, 0x09, 0x008D 	//BASE_MATRIX_COEF_K1
REG=0x02, 0x0A, 0x001A 	//BASE_MATRIX_COEF_K2
REG=0x02, 0x0B, 0x0000 	//BASE_MATRIX_COEF_K3
REG=0x02, 0x0C, 0x0066 	//BASE_MATRIX_COEF_K4
REG=0x02, 0x0D, 0x00D6 	//BASE_MATRIX_COEF_K5
REG=0x02, 0x0E, 0x0046 	//BASE_MATRIX_COEF_K6
REG=0x02, 0x0F, 0x0014 	//BASE_MATRIX_COEF_K7
REG=0x02, 0x10, 0x00A4 	//BASE_MATRIX_COEF_K8
REG=0x02, 0x11, 0x00DC 	//BASE_MATRIX_COEF_K9
//yellow fix
REG=2, 0x0F, 0x0003	//(4) BASE_MATRIX_COEF_K7
REG=2, 0x10, 0x001B	//(5) BASE_MATRIX_COEF_K8
REG=2, 0x11, 0x008F	//(5) BASE_MATRIX_COEF_K9

BITFIELD=1, 6, 0x8000, 1
DELAY=500
BITFIELD=1, 6, 0x8000, 0

[Lens-Shading Calibration Setup]
REG=   1,   37, 0       // Turn off saturation attenuation
REG=   1,    5, 0       // Disable aperture correction
REG=   1,    6, 0x941C  // Lens, MWB, Bypass Col. Proc.: ON. Defect, flicker, AWB, AE: OFF.
REG=   1,  220, 0x0804  // Linear Gamma Knee Points Y1 and Y2
REG=   1,  221, 0x2010  // Linear Gamma Knee Points Y3 and Y4
REG=   1,  222, 0x6040  // Linear Gamma Knee Points Y5 and Y6
REG=   1,  223, 0xA080  // Linear Gamma Knee Points Y7 and Y8 
REG=   1,  224, 0xE0C0  // Linear Gamma Knee Points Y9 and Y10
REG=   1,  225, 0x0000  // Linear Gamma Knee Point  Y0
REG=   0,   47, 0x0020  // Global analog gain 1.0
LOAD=Toggle_Manual_WB

[Reference Camera - NTSC pedestal enable]
// To enable the NTSC black level pedestal on the reference camaera,
// the following write is required (this is not needed with the demo kit)
REG=0x01, 0x15, 0x0004 	//INV_LAT_PINS


[Readout Direction - Mirrored]
BITFIELD=0x01, 0x15, 0x0002, 0x0001 	//INV_LAT_PINS: 1: XORed with the latched HORIZ_FLIP


[Readout Direction - Default]
BITFIELD=0x01, 0x15, 0x0002, 0x0000 	//INV_LAT_PINS: 1: XORed with the latched HORIZ_FLIP



[Manual 50Hz Flicker - NTSC]
REG=0x02, 0x5B, 0x0001 	//Flicker in manual mode
DELAY=500 //500ms delay
REG=0x02, 0x5B, 0x0000 	//50Hz flicker detect
REG=0x02, 0x37, 0x0060 	//AE GAIN ZONE LIMIT
BITFIELD=0x02, 0x2E, 0x00FF, 0x0000 	//AE_PRECISION_TARGET: 0-7: Luminance Value
DELAY=250				// wait 250 ms
BITFIELD=0x02, 0x2E, 0x00FF, 0x003A 	//AE_PRECISION_TARGET: 0-7: Luminance Value

[Manual 60Hz Flicker - NTSC]
REG=0x02, 0x37, 0x0080 	//AE GAIN ZONE LIMIT
REG=0x02, 0x5B, 0x0001 	//Flicker in manual mode
DELAY=500 //500ms delay
REG=0x02, 0x5B, 0x0003 	//60Hz flicker detect
BITFIELD=0x02, 0x2E, 0x00FF, 0x0000 	//AE_PRECISION_TARGET: 0-7: Luminance Value
DELAY=250				// wait 250 ms
BITFIELD=0x02, 0x2E, 0x00FF, 0x003A 	//AE_PRECISION_TARGET: 0-7: Luminance Value


[Manual 50Hz Flicker - PAL]
REG=0x02, 0x5B, 0x0001 	//Flicker in manual mode
DELAY=500 //500ms delay
REG=0x02, 0x5B, 0x0000 	//50Hz flicker detect

[Manual 60Hz Flicker - PAL]
REG=0x02, 0x5B, 0x0001 	//Flicker in manual mode
DELAY=500 //500ms delay
REG=0x02, 0x5B, 0x0003 	//60Hz flicker detect



