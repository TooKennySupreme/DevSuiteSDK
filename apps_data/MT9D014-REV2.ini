;**************************************************************************************       
; Copyright 2009 Aptina Imaging Corporation. All rights reserved.                             
;                                                                                             
;                                                                                             
; No permission to use, copy, modify, or distribute this software and/or                      
; its documentation for any purpose has been granted by Aptina Imaging Corporation.           
; If any such permission has been granted ( by separate agreement ), it                       
; is required that the above copyright notice appear in all copies and                        
; that both that copyright notice and this permission notice appear in                        
; supporting documentation, and that the name of Aptina Imaging Corporation or any            
; of its trademarks may not be used in advertising or publicity pertaining                    
; to distribution of the software without specific, written prior permission.                 
;                                                                                             
;                                                                                             
;      This software and any associated documentation are provided "AS IS" and                
;      without warranty of any kind.   APTINA IMAGING CORPORATION EXPRESSLY DISCLAIMS         
;      ALL WARRANTIES EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, NONINFRINGEMENT       
;      OF THIRD PARTY RIGHTS, AND ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS        
;      FOR A PARTICULAR PURPOSE.  APTINA DOES NOT WARRANT THAT THE FUNCTIONS CONTAINED        
;      IN THIS SOFTWARE WILL MEET YOUR REQUIREMENTS, OR THAT THE OPERATION OF THIS SOFTWARE   
;      WILL BE UNINTERRUPTED OR ERROR-FREE.  FURTHERMORE, APTINA DOES NOT WARRANT OR          
;      MAKE ANY REPRESENTATIONS REGARDING THE USE OR THE RESULTS OF THE USE OF ANY            
;      ACCOMPANYING DOCUMENTATION IN TERMS OF ITS CORRECTNESS, ACCURACY, RELIABILITY,         
;      OR OTHERWISE.                                                                          
;*************************************************************************************/       
; Default INI file for the A-2025-REV2 (Chip ID 0x1501)
;
; $Revision: 16925 $
; $Date: 2007-12-13 10:45:08 -0800 (Thu, 13 Dec 2007) $ 
;
; This file holds groups of register presets (sections) specific for this sensor. The 
; presets allow you to overwrite the power-on default settings with optimized register 
; settings. 
; The [Demo Initialization] section contains all optimized register settings for running
; the sensor in the demo environment. Other sections include settings optimized for a
; variety of situations like: Running at different master clock speeds, running under
; different lighting situations, running with different lenses, etc.
; Most of the demonstration software (DevWare, SensorDemo, ...) make use of this file
; to load and store the user presets.
;
; Keyname description:
; REG      = assign a new register value
; BITFIELD = do a READ-MODIFY-WRITE to part of a register. The part is defined as a mask.
; FIELD_WR = Write any register, variable or bitfield, specified by its symbol name
; LOAD     = load an alternate section from this section
; STATE    = set non-register state
; DELAY    = delay a certain amount of milliseconds before continuing 
; POLL_REG = Read a register a specified number of times, or until the register
;            value no longer meets a specified condition. You specify the
;            register by its address, and it only works with simple registers.
;            You also specify a delay between each iteration of the loop.
; POLL_FIELD = Like POLL_REG except you specify the register by its symbol name
;            as defined in the sensor data file. POLL_FIELD works with any kind
;            of register or variable.
;
; Keyname format:
; REG      = [<page>,] <address>, <value>             	//<comment>
; BITFIELD = [<page>,] <address>, <mask>, <value>
;            Some examples: 
;            BITFIELD=2, 0x05, 0x0020, 1 	//for register 5 on page 2, set the 6th bit to 1
;            BITFIELD=0x06, 0x000F, 0    	//for register 6, clear the first 4 bits
; FIELD_WR = <registername>, [<bitfieldname>,] <value>
; LOAD     = <section>
; STATE    = <state>, <value>
; DELAY    = <milliseconds>
; POLL_REG = [<page>,]<address>,<mask>,<condition>,DELAY=<milliseconds>,TIMEOUT=<count> //<comment>
;            Example:  Poll every 50ms, stop when value <= 8 or after 5 times (250ms).
;            POLL_REG= 2, 0x3F, 0xFFFF, >8, DELAY=50, TIMEOUT=5
; POLL_FIELD = <registername>, [<bitfieldname>,] <condition>, DELAY=<milliseconds>, TIMEOUT=<count> //<comment>
;            Example:  Poll every 10 ms, stop when the value = 0, or after 500ms.
;            POLL_FIELD= SEQ_CMD, !=0, DELAY=10, TIMEOUT=50
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developer's guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <registername> Name of a register or variable as defined the sensor data (.sdat) file
; <bitfieldname> Optional name of a bitfield
; <condition>    <  <=  ==  !=  >  or  >=  followed by a numerical value
; <count>        Number of iterations of the polling loop
; <section>      the name of another section to load
; <state>        non-register program state names [do not modify]
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .ini file
;
;*************************************************************************************/
[Reset]
REG=0x103, 0x01	//SOFTWARE_RESET (clears itself)
DELAY=300 	//Initialization Time

[Demo Initialization]
REG=0x301A, 0x00CC	// RESET_REGISTER, enable parallel interface and disable serialiser
REG=0x3064, 0x0805 
REG=0x0100, 0x00 	//MODE_SELECT
REG=0x0300, 10		//vt_pix_clk_div
REG=0x0302, 1		//vt_sys_clk_div
REG=0x0304, 2		//pre_pll_clk_div
REG=0x0306, 60		//pll_multiplier
REG=0x0308, 10		//op_pix_clk_div
REG=0x030A, 1		//op_sys_clk_div
DELAY=1
REG=0x0100, 0x01 	//MODE_SELECT
LOAD=Black CCM Kill ON
LOAD=Defect Enable
LOAD=Noise Removal
LOAD=CCMs for White Balance
REG=0x0104, 0x00	//GROUPED_PARAMETER_HOLD
STATE=Detect Master Clock, 1

[Black CCM Kill ON]
STATE=Black CCM Kill Enable, 1
STATE=Black CCM Kill A, 240 
STATE=Black CCM Kill B, 160 
STATE=Black CCM Kill C, 80 

[Green Balance]
STATE=Green Balance Enable, 1

[Noise Removal]
STATE= Noise Removal, 5

[Defect Enable]
STATE= Defect Enable, 1
STATE= Defect Auto Defect Correction, 1

[Color Processing ON]
REG=0x206, 0x0010      // ANALOGUE_GAIN_CODE_GREENR
REG=0x208, 0x0010      // ANALOGUE_GAIN_CODE_RED
REG=0x20A, 0x0010      // ANALOGUE_GAIN_CODE_BLUE
REG=0x20C, 0x0010      // ANALOGUE_GAIN_CODE_GREENB
REG=0x20E, 0x0100      // DIGITAL_GAIN_GREENR
REG=0x210, 0x0100      // DIGITAL_GAIN_RED
REG=0x212, 0x0100      // DIGITAL_GAIN_BLUE
REG=0x214, 0x0100      // DIGITAL_GAIN_GREENB
STATE=Auto Exposure,                    1
STATE=True Black Enable,                1
STATE=Aperture Enable,                  1
STATE=Color Correction,                 1
STATE=White Balance,                    1

[Color Processing OFF]
STATE=Auto Exposure,                    0
STATE=True Black Enable,                0
STATE=Aperture Enable,                  0
STATE=Color Correction,                 0
STATE=White Balance,                    0

[Viewfinder ON]                                                  
LOAD=800x600 resolution

[Viewfinder OFF]                                                 
LOAD=full_resolution

[800x600 resolution]
REG=0x0104 ,0x01 	//GROUPED_PARAMETER_HOLD
REG=0x3016, 0x0111	//row_speed
REG=0x3004, 4		//x_addr_start
REG=0x3008, 0x641	//x_addr_end
REG=0x3002, 4		//y_addr_start
REG=0x3006, 0x4B1	//y_addr_end
REG=0x3040, 0x00C3	//read_mode
REG=0x0404, 16		//scale_m
REG=0x034C, 800		//x_output_size
REG=0x034E, 600		//y_output_size
REG=0x300C, 1388	//line_length_pck
REG=0x300A, 620		//frame_length_lines
REG=0x3014, 0x1C9	//fine_integration_time
REG=0x0104 ,0x00 	//GROUPED_PARAMETER_HOLD

[full_resolution]
REG=0x0104, 0x01 	//GROUPED_PARAMETER_HOLD
REG=0x3016, 0x0111	//row_speed
REG=0x3004, 4		//x_addr_start
REG=0x3008, 0x643	//x_addr_end
REG=0x3002, 4		//y_addr_start
REG=0x3006, 0x4B3	//y_addr_end
REG=0x3040, 0x0041	//read_mode
REG=0x0404, 16		//scale_m
REG=0x034C, 1600	//x_output_size
REG=0x034E, 1200	//y_output_size
REG=0x300C, 0x888	//line_length_pck
REG=0x300A, 0x4C3	//frame_length_lines
REG=0x3014, 0x1C9	//fine_integration_time
REG=0x0104, 0x00 	//GROUPED_PARAMETER_HOLD

[D65 CCM]
STATE=WB Custom m00, 222
STATE=WB Custom m01, -143
STATE=WB Custom m02,  16
STATE=WB Custom m10, -39
STATE=WB Custom m11, 206
STATE=WB Custom m12, -68
STATE=WB Custom m20, -19
STATE=WB Custom m21, -52
STATE=WB Custom m22, 169
STATE=Relative Red Gain, 1500
STATE=Relative Blue Gain, 1125

[A28 CCM]
STATE=WB Custom m00, 240
STATE=WB Custom m01, -166
STATE=WB Custom m02,  19
STATE=WB Custom m10, -61
STATE=WB Custom m11, 195
STATE=WB Custom m12, -37
STATE=WB Custom m20, -56
STATE=WB Custom m21, -139
STATE=WB Custom m22, 293
STATE=Relative Red Gain, 1000
STATE=Relative Blue Gain, 1500

[CCMs for White Balance]
STATE=AWB Sun, 2.22 -1.43 0.16 -0.39 2.06 -0.68 -0.19 -0.52 1.69
STATE=AWB Incandescent, 2.40 -1.66 0.19 -0.61 1.95 -0.37 -0.56 -1.39 2.93

[Test Pattern - normal]
REG=0x3070, 0x0000	// TEST_PATTERN_MODE

[Test Pattern - solid ]
REG=0x3070, 0x0001

[Test Pattern - clor bars]
REG=0x3070, 0x0002

[Test Pattern - fade to grey]
REG=0x3070, 0x0003

[Test Pattern - PN9]
REG=0x3070, 0x0004

[Test Pattern - matching 1 10bit]
REG=0x3070, 256

[Test Pattern - matching 1 8bit]
REG=0x3070, 257

