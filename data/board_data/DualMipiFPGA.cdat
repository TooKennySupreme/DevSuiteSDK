// Auto Generated by RegisterDefinitions.pl script.
// REGDEF =                    {ADDR,  TYPE,   MASK,   RW, DEFAULT, DESC, DETAIL}
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}
//  ...
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}

[CHIP_DESCRIPTOR]
CHIPNAME = "DualMipiFPGA"
SERIAL_BASE_ADDRESS = 0xCA
SERIAL_DATA_SIZE = 16
[END]

[Registers]
ControlReg1            =   {0x00,     FPGA,  0xFFF3, RW, 0x0000, "Control Reg 1", ""}
   {MODE_SEL,                                0x0003, RW,         "1-0: Board operating mode", "0: DIPSwitch controlled, 1: Sensor Parallel Mode, 2: MIPI, 3: CCP"}
   {MAX_MIPI_LANES,                          0x000C, RO,         "3-2: Number of instantiated MIPI lanes", "0: 1 lane, 1: 2 lanes, 2: illegal, 3: 4 lanes"}
   {LANES,                                   0x0030, RW,         "5-4: Number of active MIPI lanes", "0: 1 lane, 1: 2 lanes, 2: illegal, 3: 4 lanes"}
   {VIRTUAL_CHANNEL,                         0x00C0, RW,         "7:6: Virtual MIPI channel", ""}
   {DATA_SIZE,                               0x0700, RW,         "10-8: CCP data width", "0: 8 bit, 1: 10 bit, 2: 12 bit 7-3: reserved"}
   {EMBEDDED_DATA_EN,                        0x0800, RW,         "11: Disable Mipi embedded data", "1: disable"}
   {CCP_CLASS,                               0x1000, RW,         "12: CCP class select", "0: Class 0, 1:Class 1/2"}
   {OUTPUT_EN,                               0x8000, RW,         "15: Disable FPGA outputs", "1: disable"}
ControlReg2            =   {0x01,     FPGA,  0xFFFF, RO, 0x0000, "Control Reg 2", ""}
   {DIPSW,                                   0x00FF, RO,         "DIPSwitch", ""}
   {ACTIVE_MODE,                             0x0300, RO,         "Current board operating mode", "0: Disabled, 1: Sensor Parallel Mode, 2: MIPI, 3: CCP"}
   {ACTIVE_DATA_SIZE,                        0x1C00, RO,         "Current CCP data width", "0: 8 bit, 1: 10 bit, 2: 12 bit 7-3: reserved"}
   {ACTIVE_CCP_CLASS,                        0x2000, RO,         "Current CCP class", "0: Class 0, 1:Class 1/2"}
   {ACTIVE_MIPI_LANES,                       0xC000, RO,         "Current active Mipi lanes", "0: 1 lane, 1: 2 lanes, 2: illegal, 3: 4 lanes"}
Checksum               =   {0x02,     FPGA,  0xFFFF, RO, 0x0000, "Video Checksum readback", "Video checksum for last ccp or mipi frame"}
ErrorStatus            =   {0x03,     FPGA,  0xFFFF, RW, 0x0000, "Error Status", ""}
   {CRC_ERROR,                               0x0001, RO,         "0: CRC Error", "1: error"}
   {CRC_ERROR_CLR,                           0x0002, RW,         "1: Clear CRC error", "1: clear CRC_ERROR bit"}
   {LINE_FIFO_OVFL,                          0x0010, RO,         "4: Line FIFO Overflow", "1: overflow"}
   {LINE_FIFO_OVFL_CLR,                      0x0020, RW,         "5: Clear Line FIFO Overflow", "1: clear LINE_FIFO_OVFL bit"}
CHIP_VERSION_REG       =   {0x08,     FPGA,  0xFFFF, RO, 0x0010, "Chip Version", "Chip Version "}
VERSION                =   {0x12,     FPGA,  0xFFFF, RO, 0x0010, "FPGA Version", "FPGA Version "}
   {VER_MINOR,                               0x000F, RO,         "3-0: Firmware Minor Version #", ""}
   {VER_MAJOR,                               0x00F0, RO,         "7-4: Firmware Major Version #", ""}
   {SUPER_MAJOR,                             0xFF00, RO,         "15-8: Firmware Super Major Version ", ""}
DATESTAMPREG           =   {0x14,     FPGA,  0xFFFF, RO, 0x0000, "Firmware Build DateStamp", "m/d/y"}
TIMESTAMPREG           =   {0x15,     FPGA,  0xFFFF, RO, 0x0000, "Firmware Build TimeStamp", "h/m/s"}
[END]