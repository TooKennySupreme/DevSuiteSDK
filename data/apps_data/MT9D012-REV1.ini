; WIP Last Changed Rev: 2209
;**************************************************************************************       
; Copyright 2009 Aptina Imaging Corporation. All rights reserved.                             
;                                                                                             
;                                                                                             
; No permission to use, copy, modify, or distribute this software and/or                      
; its documentation for any purpose has been granted by Aptina Imaging Corporation.           
; If any such permission has been granted ( by separate agreement ), it                       
; is required that the above copyright notice appear in all copies and                        
; that both that copyright notice and this permission notice appear in                        
; supporting documentation, and that the name of Aptina Imaging Corporation or any            
; of its trademarks may not be used in advertising or publicity pertaining                    
; to distribution of the software without specific, written prior permission.                 
;                                                                                             
;                                                                                             
;      This software and any associated documentation are provided "AS IS" and                
;      without warranty of any kind.   APTINA IMAGING CORPORATION EXPRESSLY DISCLAIMS         
;      ALL WARRANTIES EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, NONINFRINGEMENT       
;      OF THIRD PARTY RIGHTS, AND ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS        
;      FOR A PARTICULAR PURPOSE.  APTINA DOES NOT WARRANT THAT THE FUNCTIONS CONTAINED        
;      IN THIS SOFTWARE WILL MEET YOUR REQUIREMENTS, OR THAT THE OPERATION OF THIS SOFTWARE   
;      WILL BE UNINTERRUPTED OR ERROR-FREE.  FURTHERMORE, APTINA DOES NOT WARRANT OR          
;      MAKE ANY REPRESENTATIONS REGARDING THE USE OR THE RESULTS OF THE USE OF ANY            
;      ACCOMPANYING DOCUMENTATION IN TERMS OF ITS CORRECTNESS, ACCURACY, RELIABILITY,         
;      OR OTHERWISE.                                                                          
;*************************************************************************************/       
; Default INI file for the A-2020-REV1 (Chip ID 0x1500)
;
; $Revision: 28138 $
; $Date: 2011-05-31 15:31:48 -0700 (Tue, 31 May 2011) $ 
;
; This file holds groups of register presets (sections) specific for this sensor. The 
; presets allow you to overwrite the power-on default settings with optimized register 
; settings. 
; The [Demo Initialization] section contains all optimized register settings for running
; the sensor in the demo environment. Other sections include settings optimized for a
; variety of situations like: Running at different master clock speeds, running under
; different lighting situations, running with different lenses, etc.
; Most of the demonstration software (DevWare, SensorDemo, ...) make use of this file
; to load and store the user presets.
;
; Keyname description:
; REG      = assign a new register value
; BITFIELD = do a READ-MODIFY-WRITE to part of a register. The part is defined as a mask.
; FIELD_WR = Write any register, variable or bitfield, specified by its symbol name
; LOAD     = load an alternate section from this section
; STATE    = set non-register state
; DELAY    = delay a certain amount of milliseconds before continuing 
; POLL_REG = Read a register a specified number of times, or until the register
;            value no longer meets a specified condition. You specify the
;            register by its address, and it only works with simple registers.
;            You also specify a delay between each iteration of the loop.
; POLL_FIELD = Like POLL_REG except you specify the register by its symbol name
;            as defined in the sensor data file. POLL_FIELD works with any kind
;            of register or variable.
;
; Keyname format:
; REG      = [<page>,] <address>, <value>             //<comment>
; BITFIELD = [<page>,] <address>, <mask>, <value>
;            Some examples: 
;            BITFIELD=2, 0x05, 0x0020, 1 //for register 5 on page 2, set the 6th bit to 1
;            BITFIELD=0x06, 0x000F, 0    //for register 6, clear the first 4 bits
; FIELD_WR = <registername>, [<bitfieldname>,] <value>
; LOAD     = <section>
; STATE    = <state>, <value>
; DELAY    = <milliseconds>
; POLL_REG = [<page>,]<address>,<mask>,<condition>,DELAY=<milliseconds>,TIMEOUT=<count> //<comment>
;            Example:  Poll every 50ms, stop when value <= 8 or after 5 times (250ms).
;            POLL_REG= 2, 0x3F, 0xFFFF, >8, DELAY=50, TIMEOUT=5
; POLL_FIELD = <registername>, [<bitfieldname>,] <condition>, DELAY=<milliseconds>, TIMEOUT=<count> //<comment>
;            Example:  Poll every 10 ms, stop when the value = 0, or after 500ms.
;            POLL_FIELD= SEQ_CMD, !=0, DELAY=10, TIMEOUT=50
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developer's guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <registername> Name of a register or variable as defined the sensor data (.sdat) file
; <bitfieldname> Optional name of a bitfield
; <condition>    <  <=  ==  !=  >  or  >=  followed by a numerical value
; <count>        Number of iterations of the polling loop
; <section>      the name of another section to load
; <state>        non-register program state names [do not modify]
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .ini file
;
;*************************************************************************************/

[Reset]
REG=0x103, 1         //SOFTWARE_RESET (clears itself)
DELAY=300

[Demo Initialization]
// 9/22/06 updated by Eric
REG=0x301A, 0x1ACC     // Puts part in parallel output mode (PLL not powered down) and enables streaming. Also transitions to soft standby will be synchronized to the end of the current row instead of the end of the frame. SMIA data path will disabled in this setting. 
REG=0X3044, 0X0542
REG=0x0104, 1	       // GROUPED_PARAMETER_HOLD
REG=0x202, 0x01B8      // COARSE_INTEGRATION_TIME
REG=0x206, 0x0010      // ANALOGUE_GAIN_CODE_GREENR
REG=0x208, 0x0010      // ANALOGUE_GAIN_CODE_RED
REG=0x20A, 0x0010      // ANALOGUE_GAIN_CODE_BLUE
REG=0x20C, 0x0010      // ANALOGUE_GAIN_CODE_GREENB
REG=0x20E, 0x0100      // DIGITAL_GAIN_GREENR
REG=0x210, 0x0100      // DIGITAL_GAIN_RED
REG=0x212, 0x0100      // DIGITAL_GAIN_BLUE
REG=0x214, 0x0100      // DIGITAL_GAIN_GREENB
REG=0x300C, 0x0AF0     // LINE LENGTH PCK
REG=0x0104, 0          // GROUPED_PARAMETER_HOLD
STATE=Gamma,                            9
STATE=Black Correct,                    5
STATE=Contrast,                         25
IMAGE=0,0,BAYER-8

// Resync FPS reporting
DELAY= 20
STATE= Detect Master Clock, 1

[SMIA Test Pattern]
REG=0x3070, 3


[Scooby Settings - requires Scooby device]
REG=0x103 , 1
DELAY=300
REG=0x301A, 0x0010
REG=0x202 , 0x0447
REG=0x302 , 0x0002
REG=0x304 , 0x0002
REG=0x306 , 0x0050
REG=0x308 , 0x0008
REG=0x30A , 0x0001
REG=0x3070, 0x0000
REG=0x306E, 0x0080
REG=0x300 , 0x0004
REG=0x34C , 0x0640
REG=0x34E , 0x04B0
REG=0x112  , 0x0808     // Mode88
REG=0x301A , 0x0014




[Color Processing ON]
REG=0x206, 0x0010      // ANALOGUE_GAIN_CODE_GREENR
REG=0x208, 0x0010      // ANALOGUE_GAIN_CODE_RED
REG=0x20A, 0x0010      // ANALOGUE_GAIN_CODE_BLUE
REG=0x20C, 0x0010      // ANALOGUE_GAIN_CODE_GREENB
REG=0x20E, 0x0100      // DIGITAL_GAIN_GREENR
REG=0x210, 0x0100      // DIGITAL_GAIN_RED
REG=0x212, 0x0100      // DIGITAL_GAIN_BLUE
REG=0x214, 0x0100      // DIGITAL_GAIN_GREENB
STATE=Auto Exposure,                    1
STATE=True Black Enable,                1
STATE=Defect Enable,                    1
STATE=Aperture Enable,                  1
STATE=Color Correction,                 1
STATE=White Balance,                    1
STATE=Saturation,                       11

[Color Processing OFF]
STATE=Auto Exposure,                    0
STATE=True Black Enable,                0
STATE=Defect Enable,                    0
STATE=Defect Auto Defect Correction,    0
STATE=Aperture Enable,                  0
STATE=Color Correction,                 0
STATE=White Balance,                    0
STATE=Saturation,                       10

[Viewfinder ON]
REG=0x100, 0x0000       // MODE_SELECT
DELAY=300
REG=0x104, 0x0001       // GROUPED_PARAMETER_HOLD
// window size
REG=0x3002, 0x0004      // Y_ADDR_START
REG=0x3004, 0x0004      // X_ADDR_START
REG=0x3006, 0x04B9      // Y_ADDR_END
REG=0x3008, 0x0649      // X_ADDR_END
REG=0x34C, 0x0320 	// X_OUTPUT_SIZE
REG=0x34E, 0x0258 	// Y_OUTPUT_SIZE
// read mode
REG=0x3040, 0x006C      // READ_MODE
// integration
REG=0x3014, 0x03E5      // FINE INTEGRATION
REG=0x3010, 0x0215      // FINE CORRECTION
REG=0x300E, 0x03CD      // SAMPLE_TIME_PCK
// frame size
REG=0x300A, 0x0291      // FRAME_LENGTH_LINES
REG=0x300C, 0x08F0      // LINE LENGTH PCK

REG=0x104, 0x0000       // GROUPED_PARAMETER_HOLD
REG=0x100, 0x0001       // MODE_SELECT

[Viewfinder OFF]
REG=0x100, 0x0000 	// MODE_SELECT
DELAY=300
//BITFIELD=0x306E,7, 2 	// DATAPATH_SELECT
REG=0x104, 0x0001 	// GROUPED_PARAMETER_HOLD
REG=0x3040, 0x0024 	// READ_MODE
REG=0x382, 0x0001 	// X_ODD_INC
REG=0x386, 0x0001 	// Y_ODD_INC
REG=0x344, 0x0008 	// X_ADDR_START
REG=0x346, 0x0008 	// Y_ADDR_START
REG=0x348, 0x0647 	// X_ADDR_END
REG=0x34A, 0x04B7 	// Y_ADDR_END
REG=0x34C, 0x0640 	// X_OUTPUT_SIZE
REG=0x34E, 0x04B0 	// Y_OUTPUT_SIZE
REG=0x400, 0x0000 	// SCALING_MODE
REG=0x404, 0x0010 	// SCALE_M
REG=0x300C, 0x0AF0      // LINE LENGTH PCK
REG=0x104, 0x0000 	// GROUPED_PARAMETER_HOLD
REG=0x100, 0x0001 	// MODE_SELECT

[Lens Correction for Mini Lens]
REG=0x3600, 0x2920 //LENS_CORRECTION_CONTROL
REG=0x3602, 0x1824 //ZONE_BOUNDS_X1_X2
REG=0x3604, 0x3E0C //ZONE_BOUNDS_X0_X3
REG=0x3606, 0x584A //ZONE_BOUNDS_X4_X5
REG=0x3608, 0x121A //ZONE_BOUNDS_Y1_Y2
REG=0x360A, 0x2E08 //ZONE_BOUNDS_Y0_Y3
REG=0x360C, 0x4238 //ZONE_BOUNDS_Y4_Y5
REG=0x360E, 0x2432 //CENTER_OFFSET
REG=0x3610, 0x01AE //FX_RED
REG=0x3618, 0x01B8 //FY_RED
REG=0x3620, 0x0DA0 //DF_DX_RED
REG=0x3628, 0x0C03 //DF_DY_RED
REG=0x3632, 0x03D9 //SECOND_DERIV_ZONE_0_RED
REG=0x363A, 0x0600 //SECOND_DERIV_ZONE_1_RED
REG=0x3642, 0x4055 //SECOND_DERIV_ZONE_2_RED
REG=0x364A, 0x2E44 //SECOND_DERIV_ZONE_3_RED
REG=0x3652, 0x3057 //SECOND_DERIV_ZONE_4_RED
REG=0x365A, 0x4248 //SECOND_DERIV_ZONE_5_RED
REG=0x3662, 0x2614 //SECOND_DERIV_ZONE_6_RED
REG=0x366A, 0x34B6 //SECOND_DERIV_ZONE_7_RED
REG=0x3686, 0x0550 //K_FACTOR_IN_K_FX_FY_R_TL
REG=0x368E, 0x04A0 //K_FACTOR_IN_K_FX_FY_R_TR
REG=0x3676, 0x05A0 //K_FACTOR_IN_K_FX_FY_R_BL
REG=0x367E, 0x0518 //K_FACTOR_IN_K_FX_FY_R_BR
REG=0x3612, 0x0261 //FX_GREEN
REG=0x361A, 0x0177 //FY_GREEN
REG=0x3622, 0x0EF2 //DF_DX_GREEN
REG=0x362A, 0x0C5C //DF_DY_GREEN
REG=0x3634, 0x0F8A //SECOND_DERIV_ZONE_0_GREEN
REG=0x363C, 0xF8CA //SECOND_DERIV_ZONE_1_GREEN
REG=0x3644, 0x3D6D //SECOND_DERIV_ZONE_2_GREEN
REG=0x364C, 0x1E46 //SECOND_DERIV_ZONE_3_GREEN
REG=0x3654, 0x3441 //SECOND_DERIV_ZONE_4_GREEN
REG=0x365C, 0x3D25 //SECOND_DERIV_ZONE_5_GREEN
REG=0x3664, 0x1E0E //SECOND_DERIV_ZONE_6_GREEN
REG=0x366C, 0x3FE6 //SECOND_DERIV_ZONE_7_GREEN
REG=0x3688, 0x0518 //K_FACTOR_IN_K_FX_FY_G1_TL
REG=0x3690, 0x0560 //K_FACTOR_IN_K_FX_FY_G1_TR
REG=0x3678, 0x0568 //K_FACTOR_IN_K_FX_FY_G1_BL
REG=0x3680, 0x0588 //K_FACTOR_IN_K_FX_FY_G1_BR
REG=0x3616, 0x0195 //FX_BLUE
REG=0x361E, 0x00AE //FY_BLUE
REG=0x3626, 0x0E6E //DF_DX_BLUE
REG=0x362E, 0x0BFF //DF_DY_BLUE
REG=0x3638, 0x51E7 //SECOND_DERIV_ZONE_0_BLUE
REG=0x3640, 0xF6CF //SECOND_DERIV_ZONE_1_BLUE
REG=0x3648, 0x4142 //SECOND_DERIV_ZONE_2_BLUE
REG=0x3650, 0x0633 //SECOND_DERIV_ZONE_3_BLUE
REG=0x3658, 0x2F35 //SECOND_DERIV_ZONE_4_BLUE
REG=0x3660, 0x261A //SECOND_DERIV_ZONE_5_BLUE
REG=0x3668, 0xFF13 //SECOND_DERIV_ZONE_6_BLUE
REG=0x3670, 0xE5EE //SECOND_DERIV_ZONE_7_BLUE
REG=0x368C, 0x06B0 //K_FACTOR_IN_K_FX_FY_B_TL
REG=0x3694, 0x06D0 //K_FACTOR_IN_K_FX_FY_B_TR
REG=0x367C, 0x04D8 //K_FACTOR_IN_K_FX_FY_B_BL
REG=0x3684, 0x0540 //K_FACTOR_IN_K_FX_FY_B_BR
REG=0x3614, 0x0164 //FX_GREEN2
REG=0x361C, 0x00ED //FY_GREEN2
REG=0x3624, 0x0E80 //DF_DX_GREEN2
REG=0x362C, 0x0C15 //DF_DY_GREEN2
REG=0x3636, 0x2DD3 //SECOND_DERIV_ZONE_0_GREEN2
REG=0x363E, 0x03EA //SECOND_DERIV_ZONE_1_GREEN2
REG=0x3646, 0x5D51 //SECOND_DERIV_ZONE_2_GREEN2
REG=0x364E, 0x0344 //SECOND_DERIV_ZONE_3_GREEN2
REG=0x3656, 0x464F //SECOND_DERIV_ZONE_4_GREEN2
REG=0x365E, 0x343C //SECOND_DERIV_ZONE_5_GREEN2
REG=0x3666, 0x03FF //SECOND_DERIV_ZONE_6_GREEN2
REG=0x366E, 0x23CE //SECOND_DERIV_ZONE_7_GREEN2
REG=0x368A, 0x0678 //K_FACTOR_IN_K_FX_FY_G2_TL
REG=0x3692, 0x05E8 //K_FACTOR_IN_K_FX_FY_G2_TR
REG=0x367A, 0x0558 //K_FACTOR_IN_K_FX_FY_G2_BL
REG=0x3682, 0x0480 //K_FACTOR_IN_K_FX_FY_G2_BR
REG=0x3672, 0x25A0 //X2_FACTORS
REG=0x3674, 0x0020 //GLOBAL_OFFSET_FXY_FUNCTION
REG=0x3696, 0x0018 //CORNER_FACTOR_CONTROL
STATE=Lens Correction Falloff, 100
STATE=Lens Correction Center X, 792
STATE=Lens Correction Center Y, 568
BITFIELD=0x318A, 0x8000, 1 //ENABLE LENS CORRECTION

[D65 Daylight White Balance]
STATE=White Balance, 3
REG=0x0206, 0x0008 // ANALOGUE_GAIN_CODE_GREENR
REG=0x0208, 0x0010 // ANALOGUE_GAIN_CODE_RED
REG=0x020A, 0x000B // ANALOGUE_GAIN_CODE_BLUE
REG=0x020C, 0x0008 // ANALOGUE_GAIN_CODE_GREENB
STATE=WB Custom, 3.22 -1.87 -0.10 -0.49 2.69 -0.81 -0.18 -0.92 2.27
STATE=Relative Red Gain, 2000
STATE=Relative Blue Gain, 1375

[A28 Incandescent White Balance]
STATE=White Balance, 3
REG=0x0206, 0x0008 // ANALOGUE_GAIN_CODE_GREENR
REG=0x0208, 0x0009 // ANALOGUE_GAIN_CODE_RED
REG=0x020A, 0x0010 // ANALOGUE_GAIN_CODE_BLUE
REG=0x020C, 0x0008 // ANALOGUE_GAIN_CODE_GREENB
STATE=WB Custom, 2.83 -1.42 -0.24 -0.53 2.42 -0.68 -0.42 -1.55 3.20
STATE=Relative Red Gain, 1125
STATE=Relative Blue Gain, 2000

[Lens Shading Correction - 100 percent]
REG=0x3602, 0x1A26 // ZONE_BOUNDS_X1_X2
REG=0x3602, 0x1A26 // ZONE_BOUNDS_X1_X2
REG=0x3604, 0x400C // ZONE_BOUNDS_X0_X3
REG=0x3604, 0x400C // ZONE_BOUNDS_X0_X3
REG=0x3606, 0x584C // ZONE_BOUNDS_X4_X5
REG=0x3606, 0x584C // ZONE_BOUNDS_X4_X5
REG=0x3608, 0x121A // ZONE_BOUNDS_Y1_Y2
REG=0x3608, 0x121A // ZONE_BOUNDS_Y1_Y2
REG=0x360A, 0x2E08 // ZONE_BOUNDS_Y0_Y3
REG=0x360A, 0x2E08 // ZONE_BOUNDS_Y0_Y3
REG=0x360C, 0x4238 // ZONE_BOUNDS_Y4_Y5
REG=0x360C, 0x4238 // ZONE_BOUNDS_Y4_Y5
REG=0x360E, 0x2434 // CENTER_OFFSET
REG=0x360E, 0x2434 // CENTER_OFFSET
REG=0x3600, 0xA921 // LENS_CORRECTION_CONTROL
REG=0x3600, 0xA921 // LENS_CORRECTION_CONTROL
REG=0x3600, 0xA921 // LENS_CORRECTION_CONTROL
REG=0x3600, 0xA921 // LENS_CORRECTION_CONTROL
REG=0x3600, 0xA921 // LENS_CORRECTION_CONTROL
REG=0x3600, 0xA921 // LENS_CORRECTION_CONTROL
REG=0x3610, 0x0174 // FX_RED
REG=0x3612, 0x0176 // FX_GREEN
REG=0x3616, 0x011D // FX_BLUE
REG=0x3618, 0x0114 // FY_RED
REG=0x361A, 0x00C1 // FY_GREEN
REG=0x361E, 0x0070 // FY_BLUE
REG=0x3620, 0x0D9E // DF_DX_RED
REG=0x3622, 0x0D89 // DF_DX_GREEN
REG=0x3626, 0x0D8F // DF_DX_BLUE
REG=0x3628, 0x0D4C // DF_DY_RED
REG=0x362A, 0x0E40 // DF_DY_GREEN
REG=0x362E, 0x0E54 // DF_DY_BLUE
REG=0x3632, 0x05F8 // SECOND_DERIV_ZONE_0_RED
REG=0x3632, 0x05F8 // SECOND_DERIV_ZONE_0_RED
REG=0x3634, 0xFD17 // SECOND_DERIV_ZONE_0_GREEN
REG=0x3634, 0xFD17 // SECOND_DERIV_ZONE_0_GREEN
REG=0x3638, 0x182D // SECOND_DERIV_ZONE_0_BLUE
REG=0x3638, 0x182D // SECOND_DERIV_ZONE_0_BLUE
REG=0x363A, 0x1E07 // SECOND_DERIV_ZONE_1_RED
REG=0x363A, 0x1E07 // SECOND_DERIV_ZONE_1_RED
REG=0x363C, 0x11E9 // SECOND_DERIV_ZONE_1_GREEN
REG=0x363C, 0x11E9 // SECOND_DERIV_ZONE_1_GREEN
REG=0x3640, 0x17F1 // SECOND_DERIV_ZONE_1_BLUE
REG=0x3640, 0x17F1 // SECOND_DERIV_ZONE_1_BLUE
REG=0x3642, 0x2631 // SECOND_DERIV_ZONE_2_RED
REG=0x3642, 0x2631 // SECOND_DERIV_ZONE_2_RED
REG=0x3644, 0x1B30 // SECOND_DERIV_ZONE_2_GREEN
REG=0x3644, 0x1B30 // SECOND_DERIV_ZONE_2_GREEN
REG=0x3648, 0x2420 // SECOND_DERIV_ZONE_2_BLUE
REG=0x3648, 0x2420 // SECOND_DERIV_ZONE_2_BLUE
REG=0x364A, 0x343A // SECOND_DERIV_ZONE_3_RED
REG=0x364A, 0x343A // SECOND_DERIV_ZONE_3_RED
REG=0x364C, 0x252D // SECOND_DERIV_ZONE_3_GREEN
REG=0x364C, 0x252D // SECOND_DERIV_ZONE_3_GREEN
REG=0x3650, 0x2321 // SECOND_DERIV_ZONE_3_BLUE
REG=0x3650, 0x2321 // SECOND_DERIV_ZONE_3_BLUE
REG=0x3652, 0x393C // SECOND_DERIV_ZONE_4_RED
REG=0x3652, 0x393C // SECOND_DERIV_ZONE_4_RED
REG=0x3654, 0x2D2D // SECOND_DERIV_ZONE_4_GREEN
REG=0x3654, 0x2D2D // SECOND_DERIV_ZONE_4_GREEN
REG=0x3658, 0x2A20 // SECOND_DERIV_ZONE_4_BLUE
REG=0x3658, 0x2A20 // SECOND_DERIV_ZONE_4_BLUE
REG=0x365A, 0x4445 // SECOND_DERIV_ZONE_5_RED
REG=0x365A, 0x4445 // SECOND_DERIV_ZONE_5_RED
REG=0x365C, 0x2D24 // SECOND_DERIV_ZONE_5_GREEN
REG=0x365C, 0x2D24 // SECOND_DERIV_ZONE_5_GREEN
REG=0x3660, 0x1121 // SECOND_DERIV_ZONE_5_BLUE
REG=0x3660, 0x1121 // SECOND_DERIV_ZONE_5_BLUE
REG=0x3662, 0x10F1 // SECOND_DERIV_ZONE_6_RED
REG=0x3662, 0x10F1 // SECOND_DERIV_ZONE_6_RED
REG=0x3664, 0x0800 // SECOND_DERIV_ZONE_6_GREEN
REG=0x3664, 0x0800 // SECOND_DERIV_ZONE_6_GREEN
REG=0x3668, 0xFD03 // SECOND_DERIV_ZONE_6_BLUE
REG=0x3668, 0xFD03 // SECOND_DERIV_ZONE_6_BLUE
REG=0x366A, 0xFFD4 // SECOND_DERIV_ZONE_7_RED
REG=0x366A, 0xFFD4 // SECOND_DERIV_ZONE_7_RED
REG=0x366C, 0x0809 // SECOND_DERIV_ZONE_7_GREEN
REG=0x366C, 0x0809 // SECOND_DERIV_ZONE_7_GREEN
REG=0x3670, 0x0217 // SECOND_DERIV_ZONE_7_BLUE
REG=0x3670, 0x0217 // SECOND_DERIV_ZONE_7_BLUE
REG=0x3672, 0x0000 // X2_FACTORS
REG=0x3672, 0x0000 // X2_FACTORS
REG=0x3674, 0x0020 // GLOBAL_OFFSET_FXY_FUNCTION
REG=0x3614, 0x010D // FX_GREEN2
REG=0x361C, 0x008A // FY_GREEN2
REG=0x3624, 0x0DC7 // DF_DX_GREEN2
REG=0x362C, 0x0E9E // DF_DY_GREEN2
REG=0x3636, 0xE817 // SECOND_DERIV_ZONE_0_GREEN2
REG=0x3636, 0xE817 // SECOND_DERIV_ZONE_0_GREEN2
REG=0x363E, 0x22FC // SECOND_DERIV_ZONE_1_GREEN2
REG=0x363E, 0x22FC // SECOND_DERIV_ZONE_1_GREEN2
REG=0x3646, 0x292A // SECOND_DERIV_ZONE_2_GREEN2
REG=0x3646, 0x292A // SECOND_DERIV_ZONE_2_GREEN2
REG=0x364E, 0x2C30 // SECOND_DERIV_ZONE_3_GREEN2
REG=0x364E, 0x2C30 // SECOND_DERIV_ZONE_3_GREEN2
REG=0x3656, 0x342E // SECOND_DERIV_ZONE_4_GREEN2
REG=0x3656, 0x342E // SECOND_DERIV_ZONE_4_GREEN2
REG=0x365E, 0x292C // SECOND_DERIV_ZONE_5_GREEN2
REG=0x365E, 0x292C // SECOND_DERIV_ZONE_5_GREEN2
REG=0x3666, 0xECDD // SECOND_DERIV_ZONE_6_GREEN2
REG=0x3666, 0xECDD // SECOND_DERIV_ZONE_6_GREEN2
REG=0x366E, 0x0C09 // SECOND_DERIV_ZONE_7_GREEN2
REG=0x366E, 0x0C09 // SECOND_DERIV_ZONE_7_GREEN2
REG=0x3686, 0x04E8 // K_FACTOR_IN_K_FX_FY_R_TL
REG=0x368E, 0x04C8 // K_FACTOR_IN_K_FX_FY_R_TR
REG=0x3676, 0x04B0 // K_FACTOR_IN_K_FX_FY_R_BL
REG=0x367E, 0x04C8 // K_FACTOR_IN_K_FX_FY_R_BR
REG=0x3688, 0x0518 // K_FACTOR_IN_K_FX_FY_G1_TL
REG=0x3690, 0x0520 // K_FACTOR_IN_K_FX_FY_G1_TR
REG=0x3678, 0x04D0 // K_FACTOR_IN_K_FX_FY_G1_BL
REG=0x3680, 0x0468 // K_FACTOR_IN_K_FX_FY_G1_BR
REG=0x368C, 0x0568 // K_FACTOR_IN_K_FX_FY_B_TL
REG=0x3694, 0x0428 // K_FACTOR_IN_K_FX_FY_B_TR
REG=0x367C, 0x04B8 // K_FACTOR_IN_K_FX_FY_B_BL
REG=0x3684, 0x0518 // K_FACTOR_IN_K_FX_FY_B_BR
REG=0x368A, 0x0488 // K_FACTOR_IN_K_FX_FY_G2_TL
REG=0x3692, 0x0598 // K_FACTOR_IN_K_FX_FY_G2_TR
REG=0x367A, 0x04F0 // K_FACTOR_IN_K_FX_FY_G2_BL
REG=0x3682, 0x04E0 // K_FACTOR_IN_K_FX_FY_G2_BR
REG=0x3600, 0xA921 // LENS_CORRECTION_CONTROL
REG=0x3600, 0xA921 // LENS_CORRECTION_CONTROL
REG=0x3696, 0x0018 // CORNER_FACTOR_CONTROL
REG=0x3696, 0x0018 // CORNER_FACTOR_CONTROL
REG=0x3600, 0xA921 // LENS_CORRECTION_CONTROL
REG=0x318A, 0x8000 // LENS_CORRECTION

[Lens Calibration Setup]
REG=0x0202, 0x0400	//(2) COARSE_INTEGRATION_TIME
REG=0x0206, 0x001B	//(3) ANALOGUE_GAIN_CODE_GREENR
REG=0x0208, 0x001E	//(3) ANALOGUE_GAIN_CODE_RED
REG=0x020A, 0x0039	//(3) ANALOGUE_GAIN_CODE_BLUE
REG=0x020C, 0x001B	//(3) ANALOGUE_GAIN_CODE_GREENB
REG=0x3600, 0x2921	//(11) LENS_CORRECTION_CONTROL
REG=0x3602, 0x1824	//(1) ZONE_BOUNDS_X1_X2
REG=0x3604, 0x400C	//(1) ZONE_BOUNDS_X0_X3
REG=0x3606, 0x584C	//(1) ZONE_BOUNDS_X4_X5
REG=0x3608, 0x121C	//(1) ZONE_BOUNDS_Y1_Y2
REG=0x360A, 0x3008	//(1) ZONE_BOUNDS_Y0_Y3
REG=0x360C, 0x443A	//(1) ZONE_BOUNDS_Y4_Y5
REG=0x360E, 0x2632	//(1) CENTER_OFFSET
REG=0x3610, 0x0000	//(1) FX_RED
REG=0x3612, 0x0000	//(1) FX_GREEN
REG=0x3614, 0x0000	//(1) FX_GREEN2
REG=0x3616, 0x0000	//(1) FX_BLUE
REG=0x3618, 0x0000	//(1) FY_RED
REG=0x361A, 0x0000	//(1) FY_GREEN
REG=0x361C, 0x0000	//(1) FY_GREEN2
REG=0x361E, 0x0000	//(1) FY_BLUE
REG=0x3620, 0x0000	//(1) DF_DX_RED
REG=0x3622, 0x0000	//(1) DF_DX_GREEN
REG=0x3624, 0x0000	//(1) DF_DX_GREEN2
REG=0x3626, 0x0000	//(1) DF_DX_BLUE
REG=0x3628, 0x0000	//(1) DF_DY_RED
REG=0x362A, 0x0000	//(1) DF_DY_GREEN
REG=0x362C, 0x0000	//(1) DF_DY_GREEN2
REG=0x362E, 0x0000	//(1) DF_DY_BLUE
REG=0x3632, 0x0000	//(3) SECOND_DERIV_ZONE_0_RED
REG=0x3634, 0x0000	//(3) SECOND_DERIV_ZONE_0_GREEN
REG=0x3636, 0x0000	//(2) SECOND_DERIV_ZONE_0_GREEN2
REG=0x3638, 0x0000	//(3) SECOND_DERIV_ZONE_0_BLUE
REG=0x363A, 0x0000	//(3) SECOND_DERIV_ZONE_1_RED
REG=0x363C, 0x0000	//(3) SECOND_DERIV_ZONE_1_GREEN
REG=0x363E, 0x0000	//(3) SECOND_DERIV_ZONE_1_GREEN2
REG=0x3640, 0x0000	//(2) SECOND_DERIV_ZONE_1_BLUE
REG=0x3642, 0x0000	//(2) SECOND_DERIV_ZONE_2_RED
REG=0x3644, 0x0000	//(3) SECOND_DERIV_ZONE_2_GREEN
REG=0x3646, 0x0000	//(3) SECOND_DERIV_ZONE_2_GREEN2
REG=0x3648, 0x0000	//(3) SECOND_DERIV_ZONE_2_BLUE
REG=0x364A, 0x0000	//(2) SECOND_DERIV_ZONE_3_RED
REG=0x364C, 0x0000	//(3) SECOND_DERIV_ZONE_3_GREEN
REG=0x364E, 0x0000	//(3) SECOND_DERIV_ZONE_3_GREEN2
REG=0x3650, 0x0000	//(3) SECOND_DERIV_ZONE_3_BLUE
REG=0x3652, 0x0000	//(2) SECOND_DERIV_ZONE_4_RED
REG=0x3654, 0x0000	//(2) SECOND_DERIV_ZONE_4_GREEN
REG=0x3656, 0x0000	//(2) SECOND_DERIV_ZONE_4_GREEN2
REG=0x3658, 0x0000	//(2) SECOND_DERIV_ZONE_4_BLUE
REG=0x365A, 0x0000	//(2) SECOND_DERIV_ZONE_5_RED
REG=0x365C, 0x0000	//(2) SECOND_DERIV_ZONE_5_GREEN
REG=0x365E, 0x0000	//(2) SECOND_DERIV_ZONE_5_GREEN2
REG=0x3660, 0x0000	//(2) SECOND_DERIV_ZONE_5_BLUE
REG=0x3662, 0x0000	//(3) SECOND_DERIV_ZONE_6_RED
REG=0x3664, 0x0000	//(3) SECOND_DERIV_ZONE_6_GREEN
REG=0x3666, 0x0000	//(2) SECOND_DERIV_ZONE_6_GREEN2
REG=0x3668, 0x0000	//(3) SECOND_DERIV_ZONE_6_BLUE
REG=0x366A, 0x0000	//(2) SECOND_DERIV_ZONE_7_RED
REG=0x366C, 0x0000	//(3) SECOND_DERIV_ZONE_7_GREEN
REG=0x366E, 0x0000	//(3) SECOND_DERIV_ZONE_7_GREEN2
REG=0x3670, 0x0000	//(3) SECOND_DERIV_ZONE_7_BLUE
REG=0x3672, 0x0000	//(6) X2_FACTORS
REG=0x3674, 0x0020	//(1) GLOBAL_OFFSET_FXY_FUNCTION
REG=0x3676, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_R_BL
REG=0x3678, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_G1_BL
REG=0x367A, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_G2_BL
REG=0x367C, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_B_BL
REG=0x367E, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_R_BR
REG=0x3680, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_G1_BR
REG=0x3682, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_G2_BR
REG=0x3684, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_B_BR
REG=0x3686, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_R_TL
REG=0x3688, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_G1_TL
REG=0x368A, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_G2_TL
REG=0x368C, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_B_TL
REG=0x368E, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_R_TR
REG=0x3690, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_G1_TR
REG=0x3692, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_G2_TR
REG=0x3694, 0x0000	//(1) K_FACTOR_IN_K_FX_FY_B_TR
REG=0x3696, 0x0018	//(4) CORNER_FACTOR_CONTROL
LOAD=Color Processing OFF

