; WIP Last Changed Rev: 2198
;**************************************************************************************       
; Copyright 2009 Aptina Imaging Corporation. All rights reserved.                             
;                                                                                             
;                                                                                             
; No permission to use, copy, modify, or distribute this software and/or                      
; its documentation for any purpose has been granted by Aptina Imaging Corporation.           
; If any such permission has been granted ( by separate agreement ), it                       
; is required that the above copyright notice appear in all copies and                        
; that both that copyright notice and this permission notice appear in                        
; supporting documentation, and that the name of Aptina Imaging Corporation or any            
; of its trademarks may not be used in advertising or publicity pertaining                    
; to distribution of the software without specific, written prior permission.                 
;                                                                                             
;                                                                                             
;      This software and any associated documentation are provided "AS IS" and                
;      without warranty of any kind.   APTINA IMAGING CORPORATION EXPRESSLY DISCLAIMS         
;      ALL WARRANTIES EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, NONINFRINGEMENT       
;      OF THIRD PARTY RIGHTS, AND ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS        
;      FOR A PARTICULAR PURPOSE.  APTINA DOES NOT WARRANT THAT THE FUNCTIONS CONTAINED        
;      IN THIS SOFTWARE WILL MEET YOUR REQUIREMENTS, OR THAT THE OPERATION OF THIS SOFTWARE   
;      WILL BE UNINTERRUPTED OR ERROR-FREE.  FURTHERMORE, APTINA DOES NOT WARRANT OR          
;      MAKE ANY REPRESENTATIONS REGARDING THE USE OR THE RESULTS OF THE USE OF ANY            
;      ACCOMPANYING DOCUMENTATION IN TERMS OF ITS CORRECTNESS, ACCURACY, RELIABILITY,         
;      OR OTHERWISE.                                                                          
;*************************************************************************************/       
; Default INI file for the A-0350-REV3 (Chip ID 0x1311) C13B Rev3 Mono
;
; $Revision: 28136 $
; $Date: 2011-05-31 14:48:52 -0700 (Tue, 31 May 2011) $ 
;
; This file holds groups of register presets (sections) specific for this sensor. The 
; presets allow you to overwrite the power-on default settings with optimized register 
; settings. 
; The [Demo Initialization] section contains all optimized register settings for running
; the sensor in the demo environment. Other sections include settings optimized for a
; variety of situations like: Running at different master clock speeds, running under
; different lighting situations, running with different lenses, etc.
; Most of the demonstration software (DevWare, SensorDemo, ...) make use of this file
; to load and store the user presets.
;
; Keyname description:
; REG      = assign a new register value
; BITFIELD = do a READ-MODIFY-WRITE to part of a register. The part is defined as a mask.
; FIELD_WR = Write any register, variable or bitfield, specified by its symbol name
; LOAD     = load an alternate section from this section
; STATE    = set non-register state
; DELAY    = delay a certain amount of milliseconds before continuing 
; POLL_REG = Read a register a specified number of times, or until the register
;            value no longer meets a specified condition. You specify the
;            register by its address, and it only works with simple registers.
;            You also specify a delay between each iteration of the loop.
; POLL_FIELD = Like POLL_REG except you specify the register by its symbol name
;            as defined in the sensor data file. POLL_FIELD works with any kind
;            of register or variable.
;
; Keyname format:
; REG      = [<page>,] <address>, <value>             //<comment>
; BITFIELD = [<page>,] <address>, <mask>, <value>
;            Some examples: 
;            BITFIELD=2, 0x05, 0x0020, 1 //for register 5 on page 2, set the 6th bit to 1
;            BITFIELD=0x06, 0x000F, 0    //for register 6, clear the first 4 bits
; FIELD_WR = <registername>, [<bitfieldname>,] <value>
; LOAD     = <section>
; STATE    = <state>, <value>
; DELAY    = <milliseconds>
; POLL_REG = [<page>,]<address>,<mask>,<condition>,DELAY=<milliseconds>,TIMEOUT=<count> //<comment>
;            Example:  Poll every 50ms, stop when value <= 8 or after 5 times (250ms).
;            POLL_REG= 2, 0x3F, 0xFFFF, >8, DELAY=50, TIMEOUT=5
; POLL_FIELD = <registername>, [<bitfieldname>,] <condition>, DELAY=<milliseconds>, TIMEOUT=<count> //<comment>
;            Example:  Poll every 10 ms, stop when the value = 0, or after 500ms.
;            POLL_FIELD= SEQ_CMD, !=0, DELAY=10, TIMEOUT=50
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developer's guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <registername> Name of a register or variable as defined the sensor data (.sdat) file
; <bitfieldname> Optional name of a bitfield
; <condition>    <  <=  ==  !=  >  or  >=  followed by a numerical value
; <count>        Number of iterations of the polling loop
; <section>      the name of another section to load
; <state>        non-register program state names [do not modify]
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .ini file
;
;*************************************************************************************/
 
[Reset]
REG=0x0C, 1         //RESET_REG 
REG=0x0C, 0         //RESET_REG 
LOAD=Reset Registers

[Demo Initialization]
LOAD = Rev3 Monochrome

// Resync FPS reporting
DELAY= 20
STATE= Detect Master Clock, 1

[Rev3 Monochrome]
//REG=0x1C,   0x0003	//DATA_COMPRESSION
REG=0x31,   0x001F	//V1_CONTROL
REG=0x32,   0x001A 	//V2_CONTROL
REG=0x33,   0x0012	//V3_CONTROL
REG=0xAF,   0x0000	//AUTO_BLOCK_CONTROL
REG=0x2B,   0x0003 	
REG=0x10,   0x0040 

;Default software settings
STATE=Filter, 3
STATE=Relative Red Gain, 1000
STATE=Relative Blue Gain, 1000
STATE=True Black Enable, 0

[High Dynamic Settings]
LOAD=Rev3 Monochrome
REG=0x0F,    0x0051 	//PIXEL_OPERATION_MODE
REG=0x10,    0x0040 
REG=0x15,    0x7F32
REG=0x1C,    0x0003	    //DATA_COMPRESSION
REG=0x20,    0x01D5
REG=0x2B,    0x0000 	
REG=0x48,    0x0000     //TARGET_CALIB_VALUE
REG=0x70,    0x0004 	//ROW_NOISE_CONTROL
REG=0x73,    0x02F7 	//DARK_COL_START
REG=0xAB,    0x0000     //GAIN_LPF_H
REG=0xBF,    0x0014 	//INTERLACE_VBLANK
REG=0xC2,    0x0940

[Linear Settings]
LOAD=High Dynamic Settings
REG=0x0F,    0x0011 	//PIXEL_OPERATION_MODE
REG=0x15,    0x7F32 	
REG=0x1C,    0x0002	    //DATA_COMPRESSION
REG=0x20,    0x01D1
REG=0xC2,    0x0840

[Reset Registers]
REG=1,     1 	//COL_WINDOW_START_REG
REG=2,     4 	//ROW_WINDOW_START_REG
REG=3,   480 	//ROW_WINDOW_SIZE_REG
REG=4,   752 	//COL_WINDOW_SIZE_REG
REG=5,    94 	//HORZ_BLANK_REG 
REG=6,    45 	//VERT_BLANK_REG
REG=7,   904 	//CONTROL_MODE_REG
REG=8,   443 	//SHUTTER_WIDTH_REG_1
REG=9,   473 	//SHUTTER_WIDTH_REG_2
REG=10,   356 	//SHUTTER_WIDTH_CONTROL
REG=11,   480 	//INTEG_TIME_REG
REG=12,     0 	//RESET_REG
REG=13,   768 	//READ_MODE_REG
REG=14,     0 	//MONITOR_MODE_CONTROL
REG=15,    17 	//PIXEL_OPERATION_MODE
REG=16,  0x40 	
REG=17, 32834 	
REG=18,    34 	
REG=19, 0x2D32 	
REG=20,  3586 	
REG=21, 0x7F32 	
REG=22, 10242 	
REG=23, 15928 	
REG=24, 15928 	
REG=25, 10242 	
REG=26,  1064 	
REG=27,     0 	//LED_OUT_CONTROL
REG=28,     2 	//DATA_COMPRESSION
REG=29,     0 	
REG=30,     0 	
REG=31,     0 	
REG=32,  0x1D1 	
REG=33,    32 	
REG=34,    32 	
REG=35,    16 	
REG=36,    16 	
REG=37,    32 	
REG=38,    16 	
REG=39,    16 	
REG=40,    16 	
REG=41,    16 	
REG=42,    32 	
REG=43,     4 	
REG=44,     4 	
REG=45,     4 	
REG=46,     7 	
REG=47,     4 	
REG=48,     3 	
REG=49,    29 	//V1_CONTROL
REG=50,    24 	//V2_CONTROL
REG=51,    21 	//V3_CONTROL
REG=52,     4 	//V4_CONTROL
REG=53,    16 	//GLOBAL_GAIN_REG
REG=54,    64 	//MAXIMUM_GAIN_REG
REG=55,     0 	
REG=56,     0 	
REG=70,  8989 	//DARK_AVG_THRESHOLDS
REG=71, 32896 	//CALIB_CONTROL_REG
REG=76,     2 	//STEP_SIZE_AVG_MODE
REG=96,     0 	
REG=97,     0 	
REG=98,     0 	
REG=99,     0 	
REG=100,     0 	
REG=101,     0 	
REG=102,     0 	
REG=103,     0 	
REG=108,     0 	
REG=112,    52 	//ROW_NOISE_CONTROL
REG=113,     0 	
REG=114,    42 	//NOISE_CONSTANT
REG=115,   759 	//DARK_COL_START
REG=116,     0 	//PIXCLK_CONTROL
REG=127,     0 	//TEST_DATA
REG=128,   244 	//TILE_X0_Y0
REG=129,   244 	//TILE_X1_Y0
REG=130,   244 	//TILE_X2_Y0
REG=131,   244 	//TILE_X3_Y0
REG=132,   244 	//TILE_X4_Y0
REG=133,   244 	//TILE_X0_Y1
REG=134,   244 	//TILE_X1_Y1
REG=135,   244 	//TILE_X2_Y1
REG=136,   244 	//TILE_X3_Y1
REG=137,   244 	//TILE_X4_Y1
REG=138,   244 	//TILE_X0_Y2
REG=139,   244 	//TILE_X1_Y2
REG=140,   244 	//TILE_X2_Y2
REG=141,   244 	//TILE_X3_Y2
REG=142,   244 	//TILE_X4_Y2
REG=143,   244 	//TILE_X0_Y3
REG=144,   244 	//TILE_X1_Y3
REG=145,   244 	//TILE_X2_Y3
REG=146,   244 	//TILE_X3_Y3
REG=147,   244 	//TILE_X4_Y3
REG=148,   244 	//TILE_X0_Y4
REG=149,   244 	//TILE_X1_Y4
REG=150,   244 	//TILE_X2_Y4
REG=151,   244 	//TILE_X3_Y4
REG=152,   244 	//TILE_X4_Y4
REG=153,     0 	//X0_SLASH5
REG=154,   150 	//X1_SLASH5
REG=155,   300 	//X2_SLASH5
REG=156,   450 	//X3_SLASH5
REG=157,   600 	//X4_SLASH5
REG=158,   752 	//X5_SLASH5
REG=159,     0 	//Y0_SLASH5
REG=160,    96 	//Y1_SLASH5
REG=161,   192 	//Y2_SLASH5
REG=162,   288 	//Y3_SLASH5
REG=163,   384 	//Y4_SLASH5
REG=164,   480 	//Y5_SLASH5
REG=165,    58 	//DESIRED_BIN
REG=166,     2 	//EXP_SKIP_FRM
REG=167,     0 	
REG=168,     0 	//EXP_LPF
REG=169,     2 	//GAIN_SKIP_FRM_H
REG=170,     0 	
REG=171,     2 	//GAIN_LPF_H
REG=175,     3 	//AUTO_BLOCK_CONTROL
REG=176, 44000 	//PIXEL_COUNT
REG=177,     2 	//LVDS_MASTER_CONTROL
REG=178,    16 	//SHFT_CLK_CONTROL
REG=179,    16 	//LVDS_DATA_CONTROL
REG=180,     0 	//STREAM_LATENCY_SELECT
REG=181,     0 	//LVDS_INTERNAL_SYNC
REG=182,     0 	//USE_10BIT_PIXELS
REG=183,     0 	//STEREO_ERROR_CONTROL
REG=189,   480 	//MAX_EXPOSURE
REG=190,    20 	
REG=191,    22 	//INTERLACE_VBLANK
REG=192,    10 	//IMAGE_CAPTURE_NUM
REG=194,  0x840
REG=195,     0 	//NTSC_FV_CONTROL
REG=196, 17430 	//NTSC_HBLANK
REG=197, 17441 	//NTSC_VBLANK
REG=241,     0 	//BYTEWISE_ADDR_REG
REG=254, 48879  //REGISTER_LOCK_REG

[NTSC Mode ON]
SERIAL_REG= 0xB2, 0x00, 0x0001, 8:16
DELAY=100
BITFIELD=0x07, 0x3,  2  //Turn on two field interlace mode
REG=0x01, 0x19          //Set Window to 752x480
REG=0x02, 0x04         
REG=0x03, 0x01E0    
REG=0x04, 0x02BE
//REG=0x06, 0x2D          //Total vertical blank
REG=0x06, 0x28
//REG=0xBF, 0x17          //Vertical blank between even and odd fields
REG=0xBF, 0x14
REG=0x05, 0x91          //Set Horizontal blanking
REG=0x74, 0x08          //PixClk, FV/LF
REG=0x1C, 0x03          //ADC Resolution

[NTSC Mode OFF]
BITFIELD=0x07, 0x3,  0  //Restore registers to their defaults
REG=0x01, 0x01
REG=0x04, 0x02F0
REG=0x06, 0x2D
REG=0xBF, 0x14
REG=0x05, 0x5E
REG=0x74, 0x00
REG=0x1C, 0x02

[CRT Mode ON]
SERIAL_REG= 0xB2, 0x00, 0x0000, 8:16
DELAY=100
REG=0x06, 0x1F
REG=0x74, 0x8

[CRT Mode OFF]
REG=0x06, 0x4
REG=0x74, 0x0

[Serial(LVDS) 8-bit Mode ON]
SERIAL_REG= 0xB2, 0x00, 0x0002, 8:16
DELAY=100
BITFIELD=0xB3, 0x10,  0  //Pwr-on LVDS data
BITFIELD=0xB1, 0x02,  0   //Pwr-on LVDS master (PLL + LVDS drivers)
REG=0x0C, 1         //Issue soft reset
REG=0x0C, 0         //Issue soft reset
BITFIELD=0xB5, 0x01,  1  //Issue sync
BITFIELD=0xB5, 0x01,  0  //Stop issuing sync

[Serial(LVDS) Mode OFF]
BITFIELD=0xB3, 0x10,  1  //Pwr-off LVDS data
BITFIELD=0xB1, 0x02,  1  //Pwr-off LVDS master (PLL + LVDS drivers)
REG=0x0C, 1         //Issue soft reset
REG=0x0C, 0         //Issue soft reset
BITFIELD=0xB5, 0x01,  1  //Issue sync
BITFIELD=0xB5, 0x01,  0  //Stop issuing sync

[Serial(LVDS) 10-bit Mode ON]
SERIAL_REG= 0xB2, 0x00, 0x0003, 8:16
DELAY=100
REG=0xB6, 1         //10-bit data
BITFIELD=0xB3, 0x10,  0  //Pwr-on LVDS data
BITFIELD=0xB1, 0x02,  0   //Pwr-on LVDS master (PLL + LVDS drivers)
REG=0x0C, 1         //Issue soft reset
REG=0x0C, 0         //Issue soft reset
BITFIELD=0xB5, 0x01,  1  //Issue sync
BITFIELD=0xB5, 0x01,  0  //Stop issuing sync

[Serial(LVDS) 8-bit Mode ON]
REG= 0xB3, 0x00
DELAY=100
REG=0xB6, 0         //8-bit data
BITFIELD=0xB3, 0x10,  0  //Pwr-on LVDS data  
BITFIELD=0xB1, 0x02,  0   //Pwr-on LVDS master (PLL + LVDS drivers)
REG=0x0C, 1         //Issue soft reset
REG=0x0C, 0         //Issue soft reset
BITFIELD=0xB5, 0x01,  1  //Issue sync
BITFIELD=0xB5, 0x01,  0  //Stop issuing sync
DELAY=500