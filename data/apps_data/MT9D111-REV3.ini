;**************************************************************************************       
; Copyright 2009 Aptina Imaging Corporation. All rights reserved.                             
;                                                                                             
;                                                                                             
; No permission to use, copy, modify, or distribute this software and/or                      
; its documentation for any purpose has been granted by Aptina Imaging Corporation.           
; If any such permission has been granted ( by separate agreement ), it                       
; is required that the above copyright notice appear in all copies and                        
; that both that copyright notice and this permission notice appear in                        
; supporting documentation, and that the name of Aptina Imaging Corporation or any            
; of its trademarks may not be used in advertising or publicity pertaining                    
; to distribution of the software without specific, written prior permission.                 
;                                                                                             
;                                                                                             
;      This software and any associated documentation are provided "AS IS" and                
;      without warranty of any kind.   APTINA IMAGING CORPORATION EXPRESSLY DISCLAIMS         
;      ALL WARRANTIES EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, NONINFRINGEMENT       
;      OF THIRD PARTY RIGHTS, AND ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS        
;      FOR A PARTICULAR PURPOSE.  APTINA DOES NOT WARRANT THAT THE FUNCTIONS CONTAINED        
;      IN THIS SOFTWARE WILL MEET YOUR REQUIREMENTS, OR THAT THE OPERATION OF THIS SOFTWARE   
;      WILL BE UNINTERRUPTED OR ERROR-FREE.  FURTHERMORE, APTINA DOES NOT WARRANT OR          
;      MAKE ANY REPRESENTATIONS REGARDING THE USE OR THE RESULTS OF THE USE OF ANY            
;      ACCOMPANYING DOCUMENTATION IN TERMS OF ITS CORRECTNESS, ACCURACY, RELIABILITY,         
;      OR OTHERWISE.                                                                          
;*************************************************************************************/       
; Default INI file for the A-2010SOCJ-REV3 (Chip ID 0x1519)
;
; $Revision: 23722 $
; $Date: 2010-03-09 18:06:03 -0800 (Tue, 09 Mar 2010) $ 
;
; This file holds groups of register presets (sections) specific for this sensor. The 
; presets allow you to overwrite the power-on default settings with optimized register 
; settings. 
; The [Demo Initialization] section contains all optimized register settings for running
; the sensor in the demo environment. Other sections include settings optimized for a
; variety of situations like: Running at different master clock speeds, running under
; different lighting situations, running with different lenses, etc.
; Most of the demonstration software (DevWare, SensorDemo, ...) make use of this file
; to load and store the user presets.
;
; Keyname description:
; REG      = assign a new register value
; BITFIELD = do a READ-MODIFY-WRITE to part of a register. The part is defined as a mask.
; FIELD_WR = Write any register, variable or bitfield, specified by its symbol name
; LOAD     = load an alternate section from this section
; STATE    = set non-register state
; DELAY    = delay a certain amount of milliseconds before continuing 
; POLL_REG = Read a register a specified number of times, or until the register
;            value no longer meets a specified condition. You specify the
;            register by its address, and it only works with simple registers.
;            You also specify a delay between each iteration of the loop.
; POLL_FIELD = Like POLL_REG except you specify the register by its symbol name
;            as defined in the sensor data file. POLL_FIELD works with any kind
;            of register or variable.
;
; Keyname format:
; REG      = [<page>,] <address>, <value>             //<comment>
; BITFIELD = [<page>,] <address>, <mask>, <value>
;            Some examples: 
;            BITFIELD=2, 0x05, 0x0020, 1 //for register 5 on page 2, set the 6th bit to 1
;            BITFIELD=0x06, 0x000F, 0    //for register 6, clear the first 4 bits
; FIELD_WR = <registername>, [<bitfieldname>,] <value>
; LOAD     = <section>
; STATE    = <state>, <value>
; DELAY    = <milliseconds>
; POLL_REG = [<page>,]<address>,<mask>,<condition>,DELAY=<milliseconds>,TIMEOUT=<count> //<comment>
;            Example:  Poll every 50ms, stop when value <= 8 or after 5 times (250ms).
;            POLL_REG= 2, 0x3F, 0xFFFF, >8, DELAY=50, TIMEOUT=5
; POLL_FIELD = <registername>, [<bitfieldname>,] <condition>, DELAY=<milliseconds>, TIMEOUT=<count> //<comment>
;            Example:  Poll every 10 ms, stop when the value = 0, or after 500ms.
;            POLL_FIELD= SEQ_CMD, !=0, DELAY=10, TIMEOUT=50
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developer's guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <registername> Name of a register or variable as defined the sensor data (.sdat) file
; <bitfieldname> Optional name of a bitfield
; <condition>    <  <=  ==  !=  >  or  >=  followed by a numerical value
; <count>        Number of iterations of the polling loop
; <section>      the name of another section to load
; <state>        non-register program state names [do not modify]
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .ini file
;
;*************************************************************************************/

[Reset]
REG=0, 0x65, 0xA000     // bypassed PLL (prepare for soft reset)
REG=1, 0xC3, 0x0501     // MCU_BOOT_MODE (MCU reset)
REG=0, 0x0D, 0x0021     // RESET_REG (enable soft reset)
DELAY=1
REG=0, 0x0D, 0x0000     // RESET_REG (disable soft reset)
DELAY=100
STATE=Detect Master Clock,1

[Demo Initialization]
REG=0, 0x2B, 0x20 //Doesn't do anything, used as a placeholder

[Firmware Patches]
// Software Patch for SOC2010 REV3 sensors only
//

// Please note:  Patch should be loaded after power-up while the PLL is off.
// Patch stays in memory in-and-out of standby; therefore, there is no need to reload the patch unless
// power is disconnected or a hard/soft reset is performed.
//
//
REG=1, 0xC6, 0x104C 	// MCU_ADDRESS
REG=1, 0xC8, 0x0000 	// MCU_DATA_0
REG=1, 0xC6, 0x0310 	// MCU_ADDRESS
REG=1, 0xC8, 0x3C3C 	// MCU_DATA_0
REG=1, 0xC9, 0xCC01 	// MCU_DATA_1
REG=1, 0xCA, 0x33BD 	// MCU_DATA_2
REG=1, 0xCB, 0xD43F 	// MCU_DATA_3
REG=1, 0xCC, 0x30ED 	// MCU_DATA_4
REG=1, 0xCD, 0x02DC 	// MCU_DATA_5
REG=1, 0xCE, 0xB7A3 	// MCU_DATA_6
REG=1, 0xCF, 0x0223 	// MCU_DATA_7
REG=1, 0xC6, 0x0320 	// MCU_ADDRESS
REG=1, 0xC8, 0x0DF6 	// MCU_DATA_0
REG=1, 0xC9, 0x02BD 	// MCU_DATA_1
REG=1, 0xCA, 0xF102 	// MCU_DATA_2
REG=1, 0xCB, 0xBE23 	// MCU_DATA_3
REG=1, 0xCC, 0x107A 	// MCU_DATA_4
REG=1, 0xCD, 0x02BD 	// MCU_DATA_5
REG=1, 0xCE, 0x200B 	// MCU_DATA_6
REG=1, 0xCF, 0xF602 	// MCU_DATA_7
REG=1, 0xC6, 0x0330 	// MCU_ADDRESS
REG=1, 0xC8, 0xBDF1 	// MCU_DATA_0
REG=1, 0xC9, 0x02BF 	// MCU_DATA_1
REG=1, 0xCA, 0x2403 	// MCU_DATA_2
REG=1, 0xCB, 0x7C02 	// MCU_DATA_3
REG=1, 0xCC, 0xBDCC 	// MCU_DATA_4
REG=1, 0xCD, 0x011F 	// MCU_DATA_5
REG=1, 0xCE, 0xED00 	// MCU_DATA_6
REG=1, 0xCF, 0xF602 	// MCU_DATA_7
REG=1, 0xC6, 0x0340 	// MCU_ADDRESS
REG=1, 0xC8, 0xBD4F 	// MCU_DATA_0
REG=1, 0xC9, 0xBDD4 	// MCU_DATA_1
REG=1, 0xCA, 0x2BCC 	// MCU_DATA_2
REG=1, 0xCB, 0x0130 	// MCU_DATA_3
REG=1, 0xCC, 0xBDD4 	// MCU_DATA_4
REG=1, 0xCD, 0x3FD7 	// MCU_DATA_5
REG=1, 0xCE, 0xB026 	// MCU_DATA_6
REG=1, 0xCF, 0x04C6 	// MCU_DATA_7
REG=1, 0xC6, 0x0350 	// MCU_ADDRESS
REG=1, 0xC8, 0x01D7 	// MCU_DATA_0
REG=1, 0xC9, 0xB0CC 	// MCU_DATA_1
REG=1, 0xCA, 0x0131 	// MCU_DATA_2
REG=1, 0xCB, 0xBDD4 	// MCU_DATA_3
REG=1, 0xCC, 0x3FD7 	// MCU_DATA_4
REG=1, 0xCD, 0xB126 	// MCU_DATA_5
REG=1, 0xCE, 0x04C6 	// MCU_DATA_6
REG=1, 0xCF, 0x01D7 	// MCU_DATA_7
REG=1, 0xC6, 0x0360 	// MCU_ADDRESS
REG=1, 0xC8, 0xB1CC 	// MCU_DATA_0
REG=1, 0xC9, 0x0132 	// MCU_DATA_1
REG=1, 0xCA, 0xBDD4 	// MCU_DATA_2
REG=1, 0xCB, 0x3FD7 	// MCU_DATA_3
REG=1, 0xCC, 0xB25D 	// MCU_DATA_4
REG=1, 0xCD, 0x2604 	// MCU_DATA_5
REG=1, 0xCE, 0xC601 	// MCU_DATA_6
REG=1, 0xCF, 0xD7B2 	// MCU_DATA_7
REG=1, 0xC6, 0x0370 	// MCU_ADDRESS
REG=1, 0xC8, 0x5F38 	// MCU_DATA_0
REG=1, 0xC9, 0x3839 	// MCU_DATA_1
REG=1, 0xC6, 0x0400 	// MCU_ADDRESS
REG=1, 0xC8, 0x308F 	// MCU_DATA_0
REG=1, 0xC9, 0xC3FF 	// MCU_DATA_1
REG=1, 0xCA, 0xEF8F 	// MCU_DATA_2
REG=1, 0xCB, 0x35F6 	// MCU_DATA_3
REG=1, 0xCC, 0x01D0 	// MCU_DATA_4
REG=1, 0xCD, 0x860C 	// MCU_DATA_5
REG=1, 0xCE, 0x3DC3 	// MCU_DATA_6
REG=1, 0xCF, 0x01DD 	// MCU_DATA_7
REG=1, 0xC6, 0x0410 	// MCU_ADDRESS
REG=1, 0xC8, 0x8FEC 	// MCU_DATA_0
REG=1, 0xC9, 0x0630 	// MCU_DATA_1
REG=1, 0xCA, 0xED07 	// MCU_DATA_2
REG=1, 0xCB, 0xF601 	// MCU_DATA_3
REG=1, 0xCC, 0xD086 	// MCU_DATA_4
REG=1, 0xCD, 0x0C3D 	// MCU_DATA_5
REG=1, 0xCE, 0xC301 	// MCU_DATA_6
REG=1, 0xCF, 0xDD8F 	// MCU_DATA_7
REG=1, 0xC6, 0x0420 	// MCU_ADDRESS
REG=1, 0xC8, 0xEC04 	// MCU_DATA_0
REG=1, 0xC9, 0x30ED 	// MCU_DATA_1
REG=1, 0xCA, 0x05F6 	// MCU_DATA_2
REG=1, 0xCB, 0x01D0 	// MCU_DATA_3
REG=1, 0xCC, 0x4FED 	// MCU_DATA_4
REG=1, 0xCD, 0x02CC 	// MCU_DATA_5
REG=1, 0xCE, 0x0021 	// MCU_DATA_6
REG=1, 0xCF, 0xA302 	// MCU_DATA_7
REG=1, 0xC6, 0x0430 	// MCU_ADDRESS
REG=1, 0xC8, 0xBDD4 	// MCU_DATA_0
REG=1, 0xC9, 0x3F30 	// MCU_DATA_1
REG=1, 0xCA, 0xED0F 	// MCU_DATA_2
REG=1, 0xCB, 0x1F0F 	// MCU_DATA_3
REG=1, 0xCC, 0x800A 	// MCU_DATA_4
REG=1, 0xCD, 0xEC07 	// MCU_DATA_5
REG=1, 0xCE, 0x04ED 	// MCU_DATA_6
REG=1, 0xCF, 0x07EC 	// MCU_DATA_7
REG=1, 0xC6, 0x0440 	// MCU_ADDRESS
REG=1, 0xC8, 0x0504 	// MCU_DATA_0
REG=1, 0xC9, 0xED05 	// MCU_DATA_1
REG=1, 0xCA, 0xD65A 	// MCU_DATA_2
REG=1, 0xCB, 0xC40F 	// MCU_DATA_3
REG=1, 0xCC, 0xE704 	// MCU_DATA_4
REG=1, 0xCD, 0xEC07 	// MCU_DATA_5
REG=1, 0xCE, 0xED02 	// MCU_DATA_6
REG=1, 0xCF, 0xE604 	// MCU_DATA_7
REG=1, 0xC6, 0x0450 	// MCU_ADDRESS
REG=1, 0xC8, 0x4FED 	// MCU_DATA_0
REG=1, 0xC9, 0x00CC 	// MCU_DATA_1
REG=1, 0xCA, 0x0010 	// MCU_DATA_2
REG=1, 0xCB, 0xBDD3 	// MCU_DATA_3
REG=1, 0xCC, 0x4330 	// MCU_DATA_4
REG=1, 0xCD, 0xEC02 	// MCU_DATA_5
REG=1, 0xCE, 0xED0D 	// MCU_DATA_6
REG=1, 0xCF, 0xD65A 	// MCU_DATA_7
REG=1, 0xC6, 0x0460 	// MCU_ADDRESS
REG=1, 0xC8, 0x5454 	// MCU_DATA_0
REG=1, 0xC9, 0x5454 	// MCU_DATA_1
REG=1, 0xCA, 0xE704 	// MCU_DATA_2
REG=1, 0xCB, 0xEC05 	// MCU_DATA_3
REG=1, 0xCC, 0xED02 	// MCU_DATA_4
REG=1, 0xCD, 0xE604 	// MCU_DATA_5
REG=1, 0xCE, 0x4FED 	// MCU_DATA_6
REG=1, 0xCF, 0x00CC 	// MCU_DATA_7
REG=1, 0xC6, 0x0470 	// MCU_ADDRESS
REG=1, 0xC8, 0x0010 	// MCU_DATA_0
REG=1, 0xC9, 0xBDD3 	// MCU_DATA_1
REG=1, 0xCA, 0x4330 	// MCU_DATA_2
REG=1, 0xCB, 0xEC02 	// MCU_DATA_3
REG=1, 0xCC, 0xED0B 	// MCU_DATA_4
REG=1, 0xCD, 0xD65B 	// MCU_DATA_5
REG=1, 0xCE, 0xC40F 	// MCU_DATA_6
REG=1, 0xCF, 0xCB01 	// MCU_DATA_7
REG=1, 0xC6, 0x0480 	// MCU_ADDRESS
REG=1, 0xC8, 0xE704 	// MCU_DATA_0
REG=1, 0xC9, 0xEC07 	// MCU_DATA_1
REG=1, 0xCA, 0xED02 	// MCU_DATA_2
REG=1, 0xCB, 0xE604 	// MCU_DATA_3
REG=1, 0xCC, 0x4FED 	// MCU_DATA_4
REG=1, 0xCD, 0x00CC 	// MCU_DATA_5
REG=1, 0xCE, 0x0010 	// MCU_DATA_6
REG=1, 0xCF, 0xBDD3 	// MCU_DATA_7
REG=1, 0xC6, 0x0490 	// MCU_ADDRESS
REG=1, 0xC8, 0x4330 	// MCU_DATA_0
REG=1, 0xC9, 0xEC02 	// MCU_DATA_1
REG=1, 0xCA, 0xED07 	// MCU_DATA_2
REG=1, 0xCB, 0xD65B 	// MCU_DATA_3
REG=1, 0xCC, 0x5454 	// MCU_DATA_4
REG=1, 0xCD, 0x5454 	// MCU_DATA_5
REG=1, 0xCE, 0xCB01 	// MCU_DATA_6
REG=1, 0xCF, 0xE704 	// MCU_DATA_7
REG=1, 0xC6, 0x04A0 	// MCU_ADDRESS
REG=1, 0xC8, 0xEC05 	// MCU_DATA_0
REG=1, 0xC9, 0xED02 	// MCU_DATA_1
REG=1, 0xCA, 0xE604 	// MCU_DATA_2
REG=1, 0xCB, 0x4FED 	// MCU_DATA_3
REG=1, 0xCC, 0x00CC 	// MCU_DATA_4
REG=1, 0xCD, 0x0010 	// MCU_DATA_5
REG=1, 0xCE, 0xBDD3 	// MCU_DATA_6
REG=1, 0xCF, 0x4330 	// MCU_DATA_7
REG=1, 0xC6, 0x04B0 	// MCU_ADDRESS
REG=1, 0xC8, 0xEC02 	// MCU_DATA_0
REG=1, 0xC9, 0xED05 	// MCU_DATA_1
REG=1, 0xCA, 0xE30B 	// MCU_DATA_2
REG=1, 0xCB, 0xED09 	// MCU_DATA_3
REG=1, 0xCC, 0xC300 	// MCU_DATA_4
REG=1, 0xCD, 0x0ADD 	// MCU_DATA_5
REG=1, 0xCE, 0x5CEC 	// MCU_DATA_6
REG=1, 0xCF, 0x0DE3 	// MCU_DATA_7
REG=1, 0xC6, 0x04C0 	// MCU_ADDRESS
REG=1, 0xC8, 0x07ED 	// MCU_DATA_0
REG=1, 0xC9, 0x02EC 	// MCU_DATA_1
REG=1, 0xCA, 0x0DED 	// MCU_DATA_2
REG=1, 0xCB, 0x00C6 	// MCU_DATA_3
REG=1, 0xCC, 0x08BD 	// MCU_DATA_4
REG=1, 0xCD, 0xD319 	// MCU_DATA_5
REG=1, 0xCE, 0x30ED 	// MCU_DATA_6
REG=1, 0xCF, 0x0FCC 	// MCU_DATA_7
REG=1, 0xC6, 0x04D0 	// MCU_ADDRESS
REG=1, 0xC8, 0x012D 	// MCU_DATA_0
REG=1, 0xC9, 0xED00 	// MCU_DATA_1
REG=1, 0xCA, 0xEC0F 	// MCU_DATA_2
REG=1, 0xCB, 0xBDD4 	// MCU_DATA_3
REG=1, 0xCC, 0x2B30 	// MCU_DATA_4
REG=1, 0xCD, 0xEC09 	// MCU_DATA_5
REG=1, 0xCE, 0xED02 	// MCU_DATA_6
REG=1, 0xCF, 0xEC0B 	// MCU_DATA_7
REG=1, 0xC6, 0x04E0 	// MCU_ADDRESS
REG=1, 0xC8, 0xED00 	// MCU_DATA_0
REG=1, 0xC9, 0xC608 	// MCU_DATA_1
REG=1, 0xCA, 0xBDD3 	// MCU_DATA_2
REG=1, 0xCB, 0x1930 	// MCU_DATA_3
REG=1, 0xCC, 0xED0F 	// MCU_DATA_4
REG=1, 0xCD, 0xCC01 	// MCU_DATA_5
REG=1, 0xCE, 0x2EED 	// MCU_DATA_6
REG=1, 0xCF, 0x00EC 	// MCU_DATA_7
REG=1, 0xC6, 0x04F0 	// MCU_ADDRESS
REG=1, 0xC8, 0x0FBD 	// MCU_DATA_0
REG=1, 0xC9, 0xD42B 	// MCU_DATA_1
REG=1, 0xCA, 0x30C6 	// MCU_DATA_2
REG=1, 0xCB, 0x113A 	// MCU_DATA_3
REG=1, 0xCC, 0x3539 	// MCU_DATA_4
REG=1, 0xCD, 0x308F 	// MCU_DATA_5
REG=1, 0xCE, 0xC3FF 	// MCU_DATA_6
REG=1, 0xCF, 0xED8F 	// MCU_DATA_7
REG=1, 0xC6, 0x0500 	// MCU_ADDRESS
REG=1, 0xC8, 0x35F6 	// MCU_DATA_0
REG=1, 0xC9, 0x01D0 	// MCU_DATA_1
REG=1, 0xCA, 0x860E 	// MCU_DATA_2
REG=1, 0xCB, 0x3DC3 	// MCU_DATA_3
REG=1, 0xCC, 0x01F5 	// MCU_DATA_4
REG=1, 0xCD, 0x8FEC 	// MCU_DATA_5
REG=1, 0xCE, 0x0030 	// MCU_DATA_6
REG=1, 0xCF, 0xED06 	// MCU_DATA_7
REG=1, 0xC6, 0x0510 	// MCU_ADDRESS
REG=1, 0xC8, 0xF601 	// MCU_DATA_0
REG=1, 0xC9, 0xD086 	// MCU_DATA_1
REG=1, 0xCA, 0x0E3D 	// MCU_DATA_2
REG=1, 0xCB, 0xC301 	// MCU_DATA_3
REG=1, 0xCC, 0xF58F 	// MCU_DATA_4
REG=1, 0xCD, 0xEC04 	// MCU_DATA_5
REG=1, 0xCE, 0x30ED 	// MCU_DATA_6
REG=1, 0xCF, 0x04EC 	// MCU_DATA_7
REG=1, 0xC6, 0x0520 	// MCU_ADDRESS
REG=1, 0xC8, 0x15ED 	// MCU_DATA_0
REG=1, 0xC9, 0x0BEC 	// MCU_DATA_1
REG=1, 0xCA, 0x17ED 	// MCU_DATA_2
REG=1, 0xCB, 0x09D6 	// MCU_DATA_3
REG=1, 0xCC, 0x02C4 	// MCU_DATA_4
REG=1, 0xCD, 0x0FE7 	// MCU_DATA_5
REG=1, 0xCE, 0x08EC 	// MCU_DATA_6
REG=1, 0xCF, 0x0BED 	// MCU_DATA_7
REG=1, 0xC6, 0x0530 	// MCU_ADDRESS
REG=1, 0xC8, 0x02E6 	// MCU_DATA_0
REG=1, 0xC9, 0x084F 	// MCU_DATA_1
REG=1, 0xCA, 0xED00 	// MCU_DATA_2
REG=1, 0xCB, 0xCC00 	// MCU_DATA_3
REG=1, 0xCC, 0x10BD 	// MCU_DATA_4
REG=1, 0xCD, 0xD343 	// MCU_DATA_5
REG=1, 0xCE, 0x30EC 	// MCU_DATA_6
REG=1, 0xCF, 0x02ED 	// MCU_DATA_7
REG=1, 0xC6, 0x0540 	// MCU_ADDRESS
REG=1, 0xC8, 0x0FE3 	// MCU_DATA_0
REG=1, 0xC9, 0x06ED 	// MCU_DATA_1
REG=1, 0xCA, 0x0FD6 	// MCU_DATA_2
REG=1, 0xCB, 0x0254 	// MCU_DATA_3
REG=1, 0xCC, 0x5454 	// MCU_DATA_4
REG=1, 0xCD, 0x54E7 	// MCU_DATA_5
REG=1, 0xCE, 0x08EC 	// MCU_DATA_6
REG=1, 0xCF, 0x09ED 	// MCU_DATA_7
REG=1, 0xC6, 0x0550 	// MCU_ADDRESS
REG=1, 0xC8, 0x02E6 	// MCU_DATA_0
REG=1, 0xC9, 0x084F 	// MCU_DATA_1
REG=1, 0xCA, 0xED00 	// MCU_DATA_2
REG=1, 0xCB, 0xCC00 	// MCU_DATA_3
REG=1, 0xCC, 0x10BD 	// MCU_DATA_4
REG=1, 0xCD, 0xD343 	// MCU_DATA_5
REG=1, 0xCE, 0x30EC 	// MCU_DATA_6
REG=1, 0xCF, 0x02ED 	// MCU_DATA_7
REG=1, 0xC6, 0x0560 	// MCU_ADDRESS
REG=1, 0xC8, 0x0DE3 	// MCU_DATA_0
REG=1, 0xC9, 0x04ED 	// MCU_DATA_1
REG=1, 0xCA, 0x0DD6 	// MCU_DATA_2
REG=1, 0xCB, 0x03C4 	// MCU_DATA_3
REG=1, 0xCC, 0x0FCB 	// MCU_DATA_4
REG=1, 0xCD, 0x01E7 	// MCU_DATA_5
REG=1, 0xCE, 0x08EC 	// MCU_DATA_6
REG=1, 0xCF, 0x0BED 	// MCU_DATA_7
REG=1, 0xC6, 0x0570 	// MCU_ADDRESS
REG=1, 0xC8, 0x02E6 	// MCU_DATA_0
REG=1, 0xC9, 0x084F 	// MCU_DATA_1
REG=1, 0xCA, 0xED00 	// MCU_DATA_2
REG=1, 0xCB, 0xCC00 	// MCU_DATA_3
REG=1, 0xCC, 0x40BD 	// MCU_DATA_4
REG=1, 0xCD, 0xD343 	// MCU_DATA_5
REG=1, 0xCE, 0x30EC 	// MCU_DATA_6
REG=1, 0xCF, 0x02ED 	// MCU_DATA_7
REG=1, 0xC6, 0x0580 	// MCU_ADDRESS
REG=1, 0xC8, 0x0BD6 	// MCU_DATA_0
REG=1, 0xC9, 0x0354 	// MCU_DATA_1
REG=1, 0xCA, 0x5454 	// MCU_DATA_2
REG=1, 0xCB, 0x54CB 	// MCU_DATA_3
REG=1, 0xCC, 0x01E7 	// MCU_DATA_4
REG=1, 0xCD, 0x08EC 	// MCU_DATA_5
REG=1, 0xCE, 0x09ED 	// MCU_DATA_6
REG=1, 0xCF, 0x02E6 	// MCU_DATA_7
REG=1, 0xC6, 0x0590 	// MCU_ADDRESS
REG=1, 0xC8, 0x084F 	// MCU_DATA_0
REG=1, 0xC9, 0xED00 	// MCU_DATA_1
REG=1, 0xCA, 0xCC00 	// MCU_DATA_2
REG=1, 0xCB, 0x40BD 	// MCU_DATA_3
REG=1, 0xCC, 0xD343 	// MCU_DATA_4
REG=1, 0xCD, 0x30EC 	// MCU_DATA_5
REG=1, 0xCE, 0x02ED 	// MCU_DATA_6
REG=1, 0xCF, 0x0905 	// MCU_DATA_7
REG=1, 0xC6, 0x05A0 	// MCU_ADDRESS
REG=1, 0xC8, 0x05E3 	// MCU_DATA_0
REG=1, 0xC9, 0x0DC3 	// MCU_DATA_1
REG=1, 0xCA, 0x000A 	// MCU_DATA_2
REG=1, 0xCB, 0xDD04 	// MCU_DATA_3
REG=1, 0xCC, 0xEC0D 	// MCU_DATA_4
REG=1, 0xCD, 0xED02 	// MCU_DATA_5
REG=1, 0xCE, 0xEC0F 	// MCU_DATA_6
REG=1, 0xCF, 0xED00 	// MCU_DATA_7
REG=1, 0xC6, 0x05B0 	// MCU_ADDRESS
REG=1, 0xC8, 0xC608 	// MCU_DATA_0
REG=1, 0xC9, 0xBDD3 	// MCU_DATA_1
REG=1, 0xCA, 0x1930 	// MCU_DATA_2
REG=1, 0xCB, 0xED11 	// MCU_DATA_3
REG=1, 0xCC, 0xCC02 	// MCU_DATA_4
REG=1, 0xCD, 0xC0ED 	// MCU_DATA_5
REG=1, 0xCE, 0x00EC 	// MCU_DATA_6
REG=1, 0xCF, 0x11BD 	// MCU_DATA_7
REG=1, 0xC6, 0x05C0 	// MCU_ADDRESS
REG=1, 0xC8, 0xD42B 	// MCU_DATA_0
REG=1, 0xC9, 0x30EC 	// MCU_DATA_1
REG=1, 0xCA, 0x09ED 	// MCU_DATA_2
REG=1, 0xCB, 0x02EC 	// MCU_DATA_3
REG=1, 0xCC, 0x0BED 	// MCU_DATA_4
REG=1, 0xCD, 0x00C6 	// MCU_DATA_5
REG=1, 0xCE, 0x02BD 	// MCU_DATA_6
REG=1, 0xCF, 0xD319 	// MCU_DATA_7
REG=1, 0xC6, 0x05D0 	// MCU_ADDRESS
REG=1, 0xC8, 0x30ED 	// MCU_DATA_0
REG=1, 0xC9, 0x11CC 	// MCU_DATA_1
REG=1, 0xCA, 0x02C1 	// MCU_DATA_2
REG=1, 0xCB, 0xED00 	// MCU_DATA_3
REG=1, 0xCC, 0xEC11 	// MCU_DATA_4
REG=1, 0xCD, 0xBDD4 	// MCU_DATA_5
REG=1, 0xCE, 0x2B7F 	// MCU_DATA_6
REG=1, 0xCF, 0x10C4 	// MCU_DATA_7
REG=1, 0xC6, 0x05E0 	// MCU_ADDRESS
REG=1, 0xC8, 0x30EC 	// MCU_DATA_0
REG=1, 0xC9, 0x09C4 	// MCU_DATA_1
REG=1, 0xCA, 0xFEFD 	// MCU_DATA_2
REG=1, 0xCB, 0x10C5 	// MCU_DATA_3
REG=1, 0xCC, 0xEC0B 	// MCU_DATA_4
REG=1, 0xCD, 0xC4FE 	// MCU_DATA_5
REG=1, 0xCE, 0xFD10 	// MCU_DATA_6
REG=1, 0xCF, 0xC701 	// MCU_DATA_7
REG=1, 0xC6, 0x05F0 	// MCU_ADDRESS
REG=1, 0xC8, 0x0101 	// MCU_DATA_0
REG=1, 0xC9, 0xCC02 	// MCU_DATA_1
REG=1, 0xCA, 0xC2ED 	// MCU_DATA_2
REG=1, 0xCB, 0x00FC 	// MCU_DATA_3
REG=1, 0xCC, 0x10C2 	// MCU_DATA_4
REG=1, 0xCD, 0xBDD4 	// MCU_DATA_5
REG=1, 0xCE, 0x2BFC 	// MCU_DATA_6
REG=1, 0xCF, 0x10C0 	// MCU_DATA_7
REG=1, 0xC6, 0x0600 	// MCU_ADDRESS
REG=1, 0xC8, 0xCA06 	// MCU_DATA_0
REG=1, 0xC9, 0x30ED 	// MCU_DATA_1
REG=1, 0xCA, 0x11CC 	// MCU_DATA_2
REG=1, 0xCB, 0x02C3 	// MCU_DATA_3
REG=1, 0xCC, 0xED00 	// MCU_DATA_4
REG=1, 0xCD, 0xEC11 	// MCU_DATA_5
REG=1, 0xCE, 0xBDD4 	// MCU_DATA_6
REG=1, 0xCF, 0x2B30 	// MCU_DATA_7
REG=1, 0xC6, 0x0610 	// MCU_ADDRESS
REG=1, 0xC8, 0xC613 	// MCU_DATA_0
REG=1, 0xC9, 0x3A35 	// MCU_DATA_1
REG=1, 0xCA, 0x393C 	// MCU_DATA_2
REG=1, 0xCB, 0xDC25 	// MCU_DATA_3
REG=1, 0xCC, 0x30ED 	// MCU_DATA_4
REG=1, 0xCD, 0x00BD 	// MCU_DATA_5
REG=1, 0xCE, 0x81BE 	// MCU_DATA_6
REG=1, 0xCF, 0x7D00 	// MCU_DATA_7
REG=1, 0xC6, 0x0620 	// MCU_ADDRESS
REG=1, 0xC8, 0x1E27 	// MCU_DATA_0
REG=1, 0xC9, 0x227F 	// MCU_DATA_1
REG=1, 0xCA, 0x10C4 	// MCU_DATA_2
REG=1, 0xCB, 0xD61E 	// MCU_DATA_3
REG=1, 0xCC, 0x4FFD 	// MCU_DATA_4
REG=1, 0xCD, 0x10C5 	// MCU_DATA_5
REG=1, 0xCE, 0xDC2F 	// MCU_DATA_6
REG=1, 0xCF, 0xFD10 	// MCU_DATA_7
REG=1, 0xC6, 0x0630 	// MCU_ADDRESS
REG=1, 0xC8, 0xC701 	// MCU_DATA_0
REG=1, 0xC9, 0x0101 	// MCU_DATA_1
REG=1, 0xCA, 0xFC10 	// MCU_DATA_2
REG=1, 0xCB, 0xC2DD 	// MCU_DATA_3
REG=1, 0xCC, 0x25D6 	// MCU_DATA_4
REG=1, 0xCD, 0x31C1 	// MCU_DATA_5
REG=1, 0xCE, 0x0224 	// MCU_DATA_6
REG=1, 0xCF, 0x0BC6 	// MCU_DATA_7
REG=1, 0xC6, 0x0640 	// MCU_ADDRESS
REG=1, 0xC8, 0x02D7 	// MCU_DATA_0
REG=1, 0xC9, 0x3120 	// MCU_DATA_1
REG=1, 0xCA, 0x0530 	// MCU_DATA_2
REG=1, 0xCB, 0xEC00 	// MCU_DATA_3
REG=1, 0xCC, 0xDD25 	// MCU_DATA_4
REG=1, 0xCD, 0x3839 	// MCU_DATA_5
REG=1, 0xCE, 0x373C 	// MCU_DATA_6
REG=1, 0xCF, 0x3CD6 	// MCU_DATA_7
REG=1, 0xC6, 0x0650 	// MCU_ADDRESS
REG=1, 0xC8, 0x1E30 	// MCU_DATA_0
REG=1, 0xC9, 0xE701 	// MCU_DATA_1
REG=1, 0xCA, 0xDC25 	// MCU_DATA_2
REG=1, 0xCB, 0xED02 	// MCU_DATA_3
REG=1, 0xCC, 0xE607 	// MCU_DATA_4
REG=1, 0xCD, 0xE700 	// MCU_DATA_5
REG=1, 0xCE, 0xE604 	// MCU_DATA_6
REG=1, 0xCF, 0xBD87 	// MCU_DATA_7
REG=1, 0xC6, 0x0660 	// MCU_ADDRESS
REG=1, 0xC8, 0x01D6 	// MCU_DATA_0
REG=1, 0xC9, 0x1FD1 	// MCU_DATA_1
REG=1, 0xCA, 0x1023 	// MCU_DATA_2
REG=1, 0xCB, 0x04D6 	// MCU_DATA_3
REG=1, 0xCC, 0x10D7 	// MCU_DATA_4
REG=1, 0xCD, 0x1F30 	// MCU_DATA_5
REG=1, 0xCE, 0xE607 	// MCU_DATA_6
REG=1, 0xCF, 0xC101 	// MCU_DATA_7
REG=1, 0xC6, 0x0670 	// MCU_ADDRESS
REG=1, 0xC8, 0x2612 	// MCU_DATA_0
REG=1, 0xC9, 0xD61E 	// MCU_DATA_1
REG=1, 0xCA, 0xE101 	// MCU_DATA_2
REG=1, 0xCB, 0x240C 	// MCU_DATA_3
REG=1, 0xCC, 0xD610 	// MCU_DATA_4
REG=1, 0xCD, 0xD71F 	// MCU_DATA_5
REG=1, 0xCE, 0xE601 	// MCU_DATA_6
REG=1, 0xCF, 0xD71E 	// MCU_DATA_7
REG=1, 0xC6, 0x0680 	// MCU_ADDRESS
REG=1, 0xC8, 0xEC02 	// MCU_DATA_0
REG=1, 0xC9, 0xDD25 	// MCU_DATA_1
REG=1, 0xCA, 0x3838 	// MCU_DATA_2
REG=1, 0xCB, 0x3139 	// MCU_DATA_3
REG=1, 0xCC, 0x3CDE 	// MCU_DATA_4
REG=1, 0xCD, 0x00EE 	// MCU_DATA_5
REG=1, 0xCE, 0x12AD 	// MCU_DATA_6
REG=1, 0xCF, 0x00D6 	// MCU_DATA_7
REG=1, 0xC6, 0x0690 	// MCU_ADDRESS
REG=1, 0xC8, 0x4630 	// MCU_DATA_0
REG=1, 0xC9, 0xE701 	// MCU_DATA_1
REG=1, 0xCA, 0xC601 	// MCU_DATA_2
REG=1, 0xCB, 0xE700 	// MCU_DATA_3
REG=1, 0xCC, 0xE600 	// MCU_DATA_4
REG=1, 0xCD, 0x4F8F 	// MCU_DATA_5
REG=1, 0xCE, 0xE646 	// MCU_DATA_6
REG=1, 0xCF, 0x30EB 	// MCU_DATA_7
REG=1, 0xC6, 0x06A0 	// MCU_ADDRESS
REG=1, 0xC8, 0x01E7 	// MCU_DATA_0
REG=1, 0xC9, 0x016C 	// MCU_DATA_1
REG=1, 0xCA, 0x00E6 	// MCU_DATA_2
REG=1, 0xCB, 0x00C1 	// MCU_DATA_3
REG=1, 0xCC, 0x0525 	// MCU_DATA_4
REG=1, 0xCD, 0xED4F 	// MCU_DATA_5
REG=1, 0xCE, 0xE601 	// MCU_DATA_6
REG=1, 0xCF, 0x2A01 	// MCU_DATA_7
REG=1, 0xC6, 0x06B0 	// MCU_ADDRESS
REG=1, 0xC8, 0x43CE 	// MCU_DATA_0
REG=1, 0xC9, 0x0005 	// MCU_DATA_1
REG=1, 0xCA, 0xBD07 	// MCU_DATA_2
REG=1, 0xCB, 0xD0D7 	// MCU_DATA_3
REG=1, 0xCC, 0x4E30 	// MCU_DATA_4
REG=1, 0xCD, 0x6F01 	// MCU_DATA_5
REG=1, 0xCE, 0x96D5 	// MCU_DATA_6
REG=1, 0xCF, 0x112F 	// MCU_DATA_7
REG=1, 0xC6, 0x06C0 	// MCU_ADDRESS
REG=1, 0xC8, 0x04C6 	// MCU_DATA_0
REG=1, 0xC9, 0x01E7 	// MCU_DATA_1
REG=1, 0xCA, 0x01E6 	// MCU_DATA_2
REG=1, 0xCB, 0x0138 	// MCU_DATA_3
REG=1, 0xCC, 0x393C 	// MCU_DATA_4
REG=1, 0xCD, 0x3C3C 	// MCU_DATA_5
REG=1, 0xCE, 0x3C34 	// MCU_DATA_6
REG=1, 0xCF, 0xC620 	// MCU_DATA_7
REG=1, 0xC6, 0x06D0 	// MCU_ADDRESS
REG=1, 0xC8, 0xF702 	// MCU_DATA_0
REG=1, 0xC9, 0xBD7F 	// MCU_DATA_1
REG=1, 0xCA, 0x02BE 	// MCU_DATA_2
REG=1, 0xCB, 0xF702 	// MCU_DATA_3
REG=1, 0xCC, 0xBFC6 	// MCU_DATA_4
REG=1, 0xCD, 0xF6D7 	// MCU_DATA_5
REG=1, 0xCE, 0xBACC 	// MCU_DATA_6
REG=1, 0xCF, 0x02AB 	// MCU_DATA_7
REG=1, 0xC6, 0x06E0 	// MCU_ADDRESS
REG=1, 0xC8, 0x30ED 	// MCU_DATA_0
REG=1, 0xC9, 0x06FE 	// MCU_DATA_1
REG=1, 0xCA, 0x1050 	// MCU_DATA_2
REG=1, 0xCB, 0xEC06 	// MCU_DATA_3
REG=1, 0xCC, 0xFD02 	// MCU_DATA_4
REG=1, 0xCD, 0xA7FE 	// MCU_DATA_5
REG=1, 0xCE, 0x02A7 	// MCU_DATA_6
REG=1, 0xCF, 0xEC00 	// MCU_DATA_7
REG=1, 0xC6, 0x06F0 	// MCU_ADDRESS
REG=1, 0xC8, 0xFD02 	// MCU_DATA_0
REG=1, 0xC9, 0xA930 	// MCU_DATA_1
REG=1, 0xCA, 0x6F08 	// MCU_DATA_2
REG=1, 0xCB, 0xE608 	// MCU_DATA_3
REG=1, 0xCC, 0x4F05 	// MCU_DATA_4
REG=1, 0xCD, 0xF302 	// MCU_DATA_5
REG=1, 0xCE, 0xA98F 	// MCU_DATA_6
REG=1, 0xCF, 0xEC00 	// MCU_DATA_7
REG=1, 0xC6, 0x0700 	// MCU_ADDRESS
REG=1, 0xC8, 0x30ED 	// MCU_DATA_0
REG=1, 0xC9, 0x00E6 	// MCU_DATA_1
REG=1, 0xCA, 0x084F 	// MCU_DATA_2
REG=1, 0xCB, 0x05E3 	// MCU_DATA_3
REG=1, 0xCC, 0x0618 	// MCU_DATA_4
REG=1, 0xCD, 0x8FEC 	// MCU_DATA_5
REG=1, 0xCE, 0x0018 	// MCU_DATA_6
REG=1, 0xCF, 0xED00 	// MCU_DATA_7
REG=1, 0xC6, 0x0710 	// MCU_ADDRESS
REG=1, 0xC8, 0x6C08 	// MCU_DATA_0
REG=1, 0xC9, 0xE608 	// MCU_DATA_1
REG=1, 0xCA, 0xC109 	// MCU_DATA_2
REG=1, 0xCB, 0x25DE 	// MCU_DATA_3
REG=1, 0xCC, 0xEE06 	// MCU_DATA_4
REG=1, 0xCD, 0xCC03 	// MCU_DATA_5
REG=1, 0xCE, 0x10ED 	// MCU_DATA_6
REG=1, 0xCF, 0x0230 	// MCU_DATA_7
REG=1, 0xC6, 0x0720 	// MCU_ADDRESS
REG=1, 0xC8, 0xEE06 	// MCU_DATA_0
REG=1, 0xC9, 0xCC04 	// MCU_DATA_1
REG=1, 0xCA, 0x00ED 	// MCU_DATA_2
REG=1, 0xCB, 0x04CC 	// MCU_DATA_3
REG=1, 0xCC, 0x02AB 	// MCU_DATA_4
REG=1, 0xCD, 0xDD58 	// MCU_DATA_5
REG=1, 0xCE, 0xCC02 	// MCU_DATA_6
REG=1, 0xCF, 0xC430 	// MCU_DATA_7
REG=1, 0xC6, 0x0730 	// MCU_ADDRESS
REG=1, 0xC8, 0xED04 	// MCU_DATA_0
REG=1, 0xC9, 0xFE10 	// MCU_DATA_1
REG=1, 0xCA, 0x50EC 	// MCU_DATA_2
REG=1, 0xCB, 0x04FD 	// MCU_DATA_3
REG=1, 0xCC, 0x02C0 	// MCU_DATA_4
REG=1, 0xCD, 0xFE02 	// MCU_DATA_5
REG=1, 0xCE, 0xC0EC 	// MCU_DATA_6
REG=1, 0xCF, 0x00FD 	// MCU_DATA_7
REG=1, 0xC6, 0x0740 	// MCU_ADDRESS
REG=1, 0xC8, 0x02C2 	// MCU_DATA_0
REG=1, 0xC9, 0x306F 	// MCU_DATA_1
REG=1, 0xCA, 0x08E6 	// MCU_DATA_2
REG=1, 0xCB, 0x084F 	// MCU_DATA_3
REG=1, 0xCC, 0x05F3 	// MCU_DATA_4
REG=1, 0xCD, 0x02C2 	// MCU_DATA_5
REG=1, 0xCE, 0x8FEC 	// MCU_DATA_6
REG=1, 0xCF, 0x0030 	// MCU_DATA_7
REG=1, 0xC6, 0x0750 	// MCU_ADDRESS
REG=1, 0xC8, 0xED00 	// MCU_DATA_0
REG=1, 0xC9, 0xE608 	// MCU_DATA_1
REG=1, 0xCA, 0x4F05 	// MCU_DATA_2
REG=1, 0xCB, 0xE304 	// MCU_DATA_3
REG=1, 0xCC, 0x188F 	// MCU_DATA_4
REG=1, 0xCD, 0xEC00 	// MCU_DATA_5
REG=1, 0xCE, 0x18ED 	// MCU_DATA_6
REG=1, 0xCF, 0x006C 	// MCU_DATA_7
REG=1, 0xC6, 0x0760 	// MCU_ADDRESS
REG=1, 0xC8, 0x08E6 	// MCU_DATA_0
REG=1, 0xC9, 0x08C1 	// MCU_DATA_1
REG=1, 0xCA, 0x0E25 	// MCU_DATA_2
REG=1, 0xCB, 0xDEEE 	// MCU_DATA_3
REG=1, 0xCC, 0x04CC 	// MCU_DATA_4
REG=1, 0xCD, 0x04FA 	// MCU_DATA_5
REG=1, 0xCE, 0xED04 	// MCU_DATA_6
REG=1, 0xCF, 0x30EE 	// MCU_DATA_7
REG=1, 0xC6, 0x0770 	// MCU_ADDRESS
REG=1, 0xC8, 0x04CC 	// MCU_DATA_0
REG=1, 0xC9, 0x0615 	// MCU_DATA_1
REG=1, 0xCA, 0xED0A 	// MCU_DATA_2
REG=1, 0xCB, 0x30EE 	// MCU_DATA_3
REG=1, 0xCC, 0x04CC 	// MCU_DATA_4
REG=1, 0xCD, 0x064C 	// MCU_DATA_5
REG=1, 0xCE, 0xED0C 	// MCU_DATA_6
REG=1, 0xCF, 0xCC02 	// MCU_DATA_7
REG=1, 0xC6, 0x0780 	// MCU_ADDRESS
REG=1, 0xC8, 0xC4DD 	// MCU_DATA_0
REG=1, 0xC9, 0x00CC 	// MCU_DATA_1
REG=1, 0xCA, 0x02E4 	// MCU_DATA_2
REG=1, 0xCB, 0x30ED 	// MCU_DATA_3
REG=1, 0xCC, 0x02FE 	// MCU_DATA_4
REG=1, 0xCD, 0x1050 	// MCU_DATA_5
REG=1, 0xCE, 0xEC02 	// MCU_DATA_6
REG=1, 0xCF, 0xFD02 	// MCU_DATA_7
REG=1, 0xC6, 0x0790 	// MCU_ADDRESS
REG=1, 0xC8, 0xE0FE 	// MCU_DATA_0
REG=1, 0xC9, 0x02E0 	// MCU_DATA_1
REG=1, 0xCA, 0xEC00 	// MCU_DATA_2
REG=1, 0xCB, 0xFD02 	// MCU_DATA_3
REG=1, 0xCC, 0xE230 	// MCU_DATA_4
REG=1, 0xCD, 0x6F08 	// MCU_DATA_5
REG=1, 0xCE, 0xE608 	// MCU_DATA_6
REG=1, 0xCF, 0x4F05 	// MCU_DATA_7
REG=1, 0xC6, 0x07A0 	// MCU_ADDRESS
REG=1, 0xC8, 0xF302 	// MCU_DATA_0
REG=1, 0xC9, 0xE28F 	// MCU_DATA_1
REG=1, 0xCA, 0xEC00 	// MCU_DATA_2
REG=1, 0xCB, 0x30ED 	// MCU_DATA_3
REG=1, 0xCC, 0x00E6 	// MCU_DATA_4
REG=1, 0xCD, 0x084F 	// MCU_DATA_5
REG=1, 0xCE, 0x05E3 	// MCU_DATA_6
REG=1, 0xCF, 0x0218 	// MCU_DATA_7
REG=1, 0xC6, 0x07B0 	// MCU_ADDRESS
REG=1, 0xC8, 0x8FEC 	// MCU_DATA_0
REG=1, 0xC9, 0x0018 	// MCU_DATA_1
REG=1, 0xCA, 0xED00 	// MCU_DATA_2
REG=1, 0xCB, 0x6C08 	// MCU_DATA_3
REG=1, 0xCC, 0xE608 	// MCU_DATA_4
REG=1, 0xCD, 0xC112 	// MCU_DATA_5
REG=1, 0xCE, 0x25DE 	// MCU_DATA_6
REG=1, 0xCF, 0xEE02 	// MCU_DATA_7
REG=1, 0xC6, 0x07C0 	// MCU_ADDRESS
REG=1, 0xC8, 0xCC06 	// MCU_DATA_0
REG=1, 0xC9, 0x88ED 	// MCU_DATA_1
REG=1, 0xCA, 0x1CCC 	// MCU_DATA_2
REG=1, 0xCB, 0x02E4 	// MCU_DATA_3
REG=1, 0xCC, 0xDDC2 	// MCU_DATA_4
REG=1, 0xCD, 0x30C6 	// MCU_DATA_5
REG=1, 0xCE, 0x093A 	// MCU_DATA_6
REG=1, 0xCF, 0x3539 	// MCU_DATA_7
REG=1, 0xC6, 0x07D0 	// MCU_ADDRESS
REG=1, 0xC8, 0x8F4D 	// MCU_DATA_0
REG=1, 0xC9, 0x2C13 	// MCU_DATA_1
REG=1, 0xCA, 0x4353 	// MCU_DATA_2
REG=1, 0xCB, 0x8F08 	// MCU_DATA_3
REG=1, 0xCC, 0x4D2C 	// MCU_DATA_4
REG=1, 0xCD, 0x0643 	// MCU_DATA_5
REG=1, 0xCE, 0x5302 	// MCU_DATA_6
REG=1, 0xCF, 0x088F 	// MCU_DATA_7
REG=1, 0xC6, 0x07E0 	// MCU_ADDRESS
REG=1, 0xC8, 0x3902 	// MCU_DATA_0
REG=1, 0xC9, 0x098F 	// MCU_DATA_1
REG=1, 0xCA, 0x4353 	// MCU_DATA_2
REG=1, 0xCB, 0x398F 	// MCU_DATA_3
REG=1, 0xCC, 0x4D2C 	// MCU_DATA_4
REG=1, 0xCD, 0x0743 	// MCU_DATA_5
REG=1, 0xCE, 0x5302 	// MCU_DATA_6
REG=1, 0xCF, 0x8F43 	// MCU_DATA_7
REG=1, 0xC6, 0x07F0 	// MCU_ADDRESS
REG=1, 0xC8, 0x5339 	// MCU_DATA_0
REG=1, 0xC9, 0x028F 	// MCU_DATA_1
REG=1, 0xC6, 0x87F4 	// MCU_ADDRESS
REG=1, 0xC8, 0x0039 	// MCU_DATA_0
VAR=0, 0x03, 0x06C9 	// MON_ARG1
VAR8=0, 0x02, 0x0001 	// MON_CMD

[Viewfinder ON]
FIELD_WR = SEQ_CAP_MODE, VIDEO, 0     //capture parameters, VIDEO Off
FIELD_WR = SEQ_CMD, 1          //Back to preview

[Viewfinder OFF]
FIELD_WR = SEQ_CAP_MODE, VIDEO, 1     //capture parameters, VIDEO On
FIELD_WR = SEQ_CMD, 2          //Capture on

[Video Capture ON]
FIELD_WR = SEQ_CAP_MODE, VIDEO, 1     //capture parameters, VIDEO On
FIELD_WR = SEQ_CMD, 2          //Capture on

[Video Capture OFF]
FIELD_WR = SEQ_CMD, 1          //Back to preview

[LED Flash On]
BITFIELD=0, 0x23, 0x100, 1
 
[LED Flash Off]
BITFIELD=0, 0x23, 0x100, 0

[Enable Capture with LED Flash]
VAR8=1, 0x06, 1 // SEQ_SHARED_PARAMS_FLASH_TYPE
VAR8=1, 0x35, 1 // SEQ_PREVIEW_PAR_LEAVE_FLASH
VAR8=1, 0x3C, 1 // SEQ_CAP_PAR_ENTER_FLASH

[Disable Capture with Flash]
VAR8=1, 0x06, 0 // SEQ_SHARED_PARAMS_FLASH_TYPE
VAR8=1, 0x35, 0 // SEQ_PREVIEW_PAR_LEAVE_FLASH
VAR8=1, 0x3C, 0 // SEQ_CAP_PAR_ENTER_FLASH

[Capture - YUV output]
VAR=7, 0x0B, 0x0030 // MODE_CONFIG
VAR8=7, 0x7E, 0x0000 // MODE_OUTPUT_FORMAT_B
VAR=7, 0x74, 0xE5E1 // MODE_FIFO_CONF1_B
VAR8=7, 0x76, 0x00E3 // MODE_FIFO_CONF2_B

[Enable stepper motor AF]
VAR8=6, 0x02, 130 // AFM_TYPE
VAR8=1, 0x2C, 1   // SEQ_PREVIEW_PAR_AF
VAR8=1, 0x03, 5   // SEQ_CMD
DELAY=1000
VAR8=1, 0x2C, 0   // SEQ_PREVIEW_PAR_AF
VAR8=1, 0x3A, 1   // SEQ_CAP_PAR_ENTER_AF

[Enable helimorph AF]
VAR8=6, 0x02, 129 // AFM_TYPE
VAR8=1, 0x2C, 1   // SEQ_PREVIEW_PAR_AF
VAR8=1, 0x03, 5   // SEQ_CMD
DELAY=1000
VAR8=1, 0x2C, 0   // SEQ_PREVIEW_PAR_AF
VAR8=1, 0x3A, 1   // SEQ_CAP_PAR_ENTER_AF

[Disable AF]
VAR8=6, 0x02, 128 // AFM_TYPE
VAR8=1, 0x2C, 0   // SEQ_PREVIEW_PAR_AF
VAR8=1, 0x03, 5   // SEQ_CMD
VAR8=1, 0x3A, 0   // SEQ_CAP_PAR_ENTER_AF
 
[Refocus]
VAR8=1, 0x02, 31  // SEQ_MODE
VAR8=5, 0x04, 1   // AF_MODE

[Enable PLL 24 Mhz Ext/80 Mhz Out]
REG=0, 0x66, 0x1402
REG=0, 0x67, 0x0500
REG=0, 0x65, 0xA000
DELAY=1
REG=0, 0x65, 0x2000
DELAY=100
STATE=Detect Master Clock,1

[Enable PLL 24 Mhz Ext/48 Mhz Out]
REG=0, 0x66, 0x1001
REG=0, 0x67, 0x0501
REG=0, 0x65, 0xA000
DELAY=1
REG=0, 0x65, 0x2000
DELAY=100
STATE=Detect Master Clock,1

[Lens Shading Setup]
REG=1, 0x08, 0x0158 	// COLOR_PIPELINE_CONTROL
VAR8=1, 0x02, 0x0000 	// SEQ_MODE

[Color Tuning Setup]
VAR8=11, 0x04, 0x0000 	// HG_MAX_DLEVEL
VAR8=3, 0x53, 0x0023 	// AWB_MODE
VAR8=1, 0x02, 0x0000 	// SEQ_MODE
REG=1, 0x08, 0x01D8 	// COLOR_PIPELINE_CONTROL
REG=1, 0x08, 0x0158 	// COLOR_PIPELINE_CONTROL
REG=0, 0x2F, 0x0020 	// GLOBAL_GAIN_REG

