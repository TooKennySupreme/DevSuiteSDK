;**************************************************************************************       
; Copyright 2009 Aptina Imaging Corporation. All rights reserved.                             
;                                                                                             
;                                                                                             
; No permission to use, copy, modify, or distribute this software and/or                      
; its documentation for any purpose has been granted by Aptina Imaging Corporation.           
; If any such permission has been granted ( by separate agreement ), it                       
; is required that the above copyright notice appear in all copies and                        
; that both that copyright notice and this permission notice appear in                        
; supporting documentation, and that the name of Aptina Imaging Corporation or any            
; of its trademarks may not be used in advertising or publicity pertaining                    
; to distribution of the software without specific, written prior permission.                 
;                                                                                             
;                                                                                             
;      This software and any associated documentation are provided "AS IS" and                
;      without warranty of any kind.   APTINA IMAGING CORPORATION EXPRESSLY DISCLAIMS         
;      ALL WARRANTIES EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, NONINFRINGEMENT       
;      OF THIRD PARTY RIGHTS, AND ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS        
;      FOR A PARTICULAR PURPOSE.  APTINA DOES NOT WARRANT THAT THE FUNCTIONS CONTAINED        
;      IN THIS SOFTWARE WILL MEET YOUR REQUIREMENTS, OR THAT THE OPERATION OF THIS SOFTWARE   
;      WILL BE UNINTERRUPTED OR ERROR-FREE.  FURTHERMORE, APTINA DOES NOT WARRANT OR          
;      MAKE ANY REPRESENTATIONS REGARDING THE USE OR THE RESULTS OF THE USE OF ANY            
;      ACCOMPANYING DOCUMENTATION IN TERMS OF ITS CORRECTNESS, ACCURACY, RELIABILITY,         
;      OR OTHERWISE.                                                                          
;*************************************************************************************/       
; Default INI file for the A-3120-REV1 (Chip ID 0x1600)
;
; $Revision: 23722 $
; $Date: 2010-03-09 18:06:03 -0800 (Tue, 09 Mar 2010) $ 
;
; This file holds groups of register presets (sections) specific for this sensor. The 
; presets allow you to overwrite the power-on default settings with optimized register 
; settings. 
; The [Demo Initialization] section contains all optimized register settings for running
; the sensor in the demo environment. Other sections include settings optimized for a
; variety of situations like: Running at different master clock speeds, running under
; different lighting situations, running with different lenses, etc.
; Most of the demonstration software (DevWare, SensorDemo, ...) make use of this file
; to load and store the user presets.
;
; Keyname description:
; REG      = assign a new register value
; BITFIELD = do a READ-MODIFY-WRITE to part of a register. The part is defined as a mask.
; FIELD_WR = Write any register, variable or bitfield, specified by its symbol name
; LOAD     = load an alternate section from this section
; STATE    = set non-register state
; DELAY    = delay a certain amount of milliseconds before continuing 
; POLL_REG = Read a register a specified number of times, or until the register
;            value no longer meets a specified condition. You specify the
;            register by its address, and it only works with simple registers.
;            You also specify a delay between each iteration of the loop.
; POLL_FIELD = Like POLL_REG except you specify the register by its symbol name
;            as defined in the sensor data file. POLL_FIELD works with any kind
;            of register or variable.
;
; Keyname format:
; REG      = [<page>,] <address>, <value>             //<comment>
; BITFIELD = [<page>,] <address>, <mask>, <value>
;            Some examples: 
;            BITFIELD=2, 0x05, 0x0020, 1 //for register 5 on page 2, set the 6th bit to 1
;            BITFIELD=0x06, 0x000F, 0    //for register 6, clear the first 4 bits
; FIELD_WR = <registername>, [<bitfieldname>,] <value>
; LOAD     = <section>
; STATE    = <state>, <value>
; DELAY    = <milliseconds>
; POLL_REG = [<page>,]<address>,<mask>,<condition>,DELAY=<milliseconds>,TIMEOUT=<count> //<comment>
;            Example:  Poll every 50ms, stop when value <= 8 or after 5 times (250ms).
;            POLL_REG= 2, 0x3F, 0xFFFF, >8, DELAY=50, TIMEOUT=5
; POLL_FIELD = <registername>, [<bitfieldname>,] <condition>, DELAY=<milliseconds>, TIMEOUT=<count> //<comment>
;            Example:  Poll every 10 ms, stop when the value = 0, or after 500ms.
;            POLL_FIELD= SEQ_CMD, !=0, DELAY=10, TIMEOUT=50
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developer's guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <mask>         is the part of a register value that needs to be updated with a new value
; <registername> Name of a register or variable as defined the sensor data (.sdat) file
; <bitfieldname> Optional name of a bitfield
; <condition>    <  <=  ==  !=  >  or  >=  followed by a numerical value
; <count>        Number of iterations of the polling loop
; <section>      the name of another section to load
; <state>        non-register program state names [do not modify]
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .ini file
;
;*************************************************************************************/

[Reset]
REG=0x103, 1         //SOFTWARE_RESET (clears itself)
REG=0x301A, 0x18cc//  parallel port output
DELAY=300

[Demo Initialization]
REG=0x301A, 0x18cc//  parallel port output
REG=0x0104, 1	// GROUPED_PARAMETER_HOLD
REG=0x202, 0x01B8      // COARSE_INTEGRATION_TIME
REG=0x206, 0x0010      // ANALOGUE_GAIN_CODE_GREENR
REG=0x208, 0x0010      // ANALOGUE_GAIN_CODE_RED
REG=0x20A, 0x001C      // ANALOGUE_GAIN_CODE_BLUE
REG=0x20C, 0x0010      // ANALOGUE_GAIN_CODE_GREENB
REG=0x20E, 0x0100      // DIGITAL_GAIN_GREENR
REG=0x210, 0x0100      // DIGITAL_GAIN_RED
REG=0x212, 0x0100      // DIGITAL_GAIN_BLUE
REG=0x214, 0x0100      // DIGITAL_GAIN_GREENB
REG=0x0104, 0	// GROUPED_PARAMETER_HOLD
//  From Data Sheet Addendum
REG=0x30E8, 0xEFC1
REG=0x30F0, 0x764D
REG=0x30F6, 0xF01A
REG=0x308C, 0x0507
REG=0x309E, 0x1410
REG=0x30FE, 0x9176
REG=0x3100, 0x9176
REG=0x3102, 0xBF9B
REG=0x3104, 0xEEC2

STATE=Gamma,                            9
STATE=Black Correct,                    5
STATE=Contrast,                         25
//STATE=Filter,                           2   //Set demosaic to fast-linear

[Color Processing ON]
REG=0x206, 0x0010      // ANALOGUE_GAIN_CODE_GREENR
REG=0x208, 0x0010      // ANALOGUE_GAIN_CODE_RED
REG=0x20A, 0x0010      // ANALOGUE_GAIN_CODE_BLUE
REG=0x20C, 0x0010      // ANALOGUE_GAIN_CODE_GREENB
REG=0x20E, 0x0100      // DIGITAL_GAIN_GREENR
REG=0x210, 0x0100      // DIGITAL_GAIN_RED
REG=0x212, 0x0100      // DIGITAL_GAIN_BLUE
REG=0x214, 0x0100      // DIGITAL_GAIN_GREENB
STATE=Auto Exposure,                    1
STATE=True Black Enable,                1
STATE=Defect Enable,                    1
STATE=Aperture Enable,                  1
STATE=Color Correction,                 1
STATE=White Balance,                    1

[Color Processing OFF]
STATE=Auto Exposure,                    0
STATE=True Black Enable,                0
STATE=Defect Enable,                    0
STATE=Defect Auto Defect Correction,    0
STATE=Aperture Enable,                  0
STATE=Color Correction,                 0
STATE=White Balance,                    0

[Viewfinder ON]
//REG=0x100, 0x0000 	// MODE_SELECT
//DELAY=300
//BITFIELD=0x306E,7, 2 	// DATAPATH_SELECT
REG=0x104, 0x0001 	// GROUPED_PARAMETER_HOLD
REG=0x344, 0x0004 	// X_ADDR_START
REG=0x346, 0x0004 	// Y_ADDR_START
REG=0x348, 0x0801 	// X_ADDR_END
REG=0x34A, 0x0601 	// Y_ADDR_END
REG=0x382, 0x0003 	// X_ODD_INC
REG=0x386, 0x0003 	// Y_ODD_INC
REG=0x34C, 0x0280 	// X_OUTPUT_SIZE
REG=0x34E, 0x01E0 	// Y_OUTPUT_SIZE
REG=0x400, 0x0002 	// SCALING_MODE
REG=0x404, 0x0019 	// SCALE_M
REG=0x104, 0x0000 	// GROUPED_PARAMETER_HOLD
REG=0x100, 0x0001 	// MODE_SELECT

[Viewfinder OFF]
//REG=0x100, 0x0000 	// MODE_SELECT
//DELAY=300
//BITFIELD=0x306E,7, 2 	// DATAPATH_SELECT
REG=0x104, 0x0001 	// GROUPED_PARAMETER_HOLD
REG=0x3040, 0x0024 	// READ_MODE
REG=0x344, 0x0004 	// X_ADDR_START
REG=0x346, 0x0004 	// Y_ADDR_START
REG=0x348, 0x0803 	// X_ADDR_END
REG=0x34A, 0x0603 	// Y_ADDR_END
REG=0x34C, 0x0800 	// X_OUTPUT_SIZE
REG=0x34E, 0x0600 	// Y_OUTPUT_SIZE
REG=0x400, 0x0000 	// SCALING_MODE
REG=0x404, 0x0010 	// SCALE_M
REG=0x104, 0x0000 	// GROUPED_PARAMETER_HOLD
REG=0x100, 0x0001 	// MODE_SELECT

[Scaling by 1/3 (684x512)]
REG=0x100, 0x0000 	// MODE_SELECT
DELAY=300
BITFIELD=0x301A, 0x0800, 0 // to enable the SMIA clock.
BITFIELD=0x3064, 0x0100, 0
BITFIELD=0x306E,7, 2 	// DATAPATH_SELECT
REG=0x104, 0x0001 	// GROUPED_PARAMETER_HOLD
REG=0x344, 0x0004 	// X_ADDR_START
REG=0x346, 0x0004 	// Y_ADDR_START
REG=0X348, 0x0801 	// X_ADDR_END
REG=0X34A, 0X0601 	// Y_ADDR_END
REG=0x34C, 0x02AC 	// X_OUTPUT_SIZE
REG=0x34E, 0x0200 	// Y_OUTPUT_SIZE
REG=0x382, 0x0001 	// X_ODD_INC
REG=0x386, 0x0001 	// Y_ODD_INC
REG=0x400, 0x0002 	// SCALING_MODE
REG=0x404, 0x0030 	// SCALE_M
REG=0x104, 0x0000 	// GROUPED_PARAMETER_HOLD
REG=0x100, 0x0001 	// MODE_SELECT

[Binning 1024x768]
REG=0x100, 0x0000 // STREAM
REG=0X104, 0X0001    // GROUPED_PARAMETER_HOLD
REG=0X300E, 0X03D8 // SAMPLE_TIME_PCK
REG=0x0200, 0x0408 // FINE_INTEGRATION_TIME
REG=0X3010, 0X0200 // FINE_CORRECTION
REG=0x344, 0x0004  // X_ADDR_START
REG=0x346, 0x0004  // Y_ADDR_START
REG=0X348, 0x0801  // X_ADDDR_END
REG=0X34A, 0X0601 // Y_ADDR_END
REG=0x34C, 0x0400  // X_OUTPUT_SIZE
REG=0x34E, 0x0300  // Y_OUTPUT_SIZE
REG=0X30CA, 0X0001 // BALANCE_CONTROL
REG=0x382, 0x0003 // X_ODD_INC
REG=0X386, 0X0003 // Y_ODD_INC
BITFIELD=0x3040, 0x0400, 1 // XY_BIN_ENABLE
REG=0X104, 0X0000 // GROUPED_PARAMETER_HOLD
REG=0X100, 0X0001    // STREAM

