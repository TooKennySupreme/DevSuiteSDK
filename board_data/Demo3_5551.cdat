// Auto Generated by RegisterDefinitions.pl script.
// REGDEF =                     {ADDR,  TYPE,   MASK,   RW, DEFAULT, DESC, DETAIL}
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}
//  ...
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}

[CHIP_DESCRIPTOR]
CHIPNAME = "Demo3"
I2C_BASE_ADDRESS = 0x64
I2C_REG_SIZE = 16
[END]

[Registers]
ControlReg1            =   {0x00,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 1", ""}
   {Reset,                                   0x0001, RW,         "0: Reset", "1: Reset for entire FPGA"}
   {VideoSource,                             0x000E, RW,         "3-1: Video Source", "0: Parallel, 1: CCP 2: Mipi, 3: HiSpi, 4: Pattern Generator"}
   {BufferMode,                              0x0030, RW,         "5-4: Operation Mode", "0: Disable, 1: Buffer Bypass, 2: reserved, 3: SDRAM Buffer"}
   {FX3InterfaceMode,                        0x0300, RW,         "9-8: FX3 Interface Mode", "0: Disable, 1: Transmit to FX3, 3: Transmit to FX3 with wait for FX3 FIFO"}
   {USBPacketSize,                           0x0800, RW,         "11: USB Packet Size", "0: 512 bytes (USB2), 1: 1024 bytes (USB3)"}
   {DisableVideoLEDs,                        0x1000, RW,         "12: Disable video active LEDs", "1: Disable LEDs"}
   {PLL0Locked,                              0x4000, RO,         "14: HDMI Clock PLL Locked", "1: Locked"}
   {PLL1Locked,                              0x8000, RO,         "15: Core Clock PLL Locked", "1: Locked"}
ControlReg2            =   {0x01,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 2", ""}
   {HdmiEnable,                              0x0001, RW,         "0: HDMI Enable", "1: Enable HDMI output"}
   {HdmiDataFormat,                          0x000E, RW,         "3-1: HDMI Data Format", "0: RGB_24bit, 1: YCbCr422_24bit, 2: YCbCr422_20bit, 3: YCbCr422_16bit"}
   {SOCDataFormat,                           0x00F0, RW,         "7-4: SOC Data Format", "0: YUV 422 8bit, 1: 565 RGB, 2: 555 RGB, 3: 444x RGB, 4: x444 RGB, 5: 888 RGB, 8: YUV 422 16bit"}
   {VideoClkSel,                             0x0100, RW,         "8: HDMI clock rate", "0: 74.25MHz, 1: 148.5MHz"}
   {HdmiDisplayMode,                         0x0200, RW,         "9: HDMI Display Mode", "0: Fill inactive display with black, 2: No fill"}
   {HdmiVsyncPolarity,                       0x0400, RW,         "10: HDMI VSync Polarity", "0: Active High 1: Active Low"}
   {HdmiHsyncPolarity,                       0x0800, RW,         "11: HDMI HSync Polarity", "0: Active High 1: Active Low"}
   {HDMII2CEnable,                           0x8000, RW,         "15: HDMI I2C Enable", "0: Enable I2C to Sensor, 1: Enable I2C to HDMI Controller"}
ControlReg3            =   {0x02,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 3", ""}
   {SDRAMReset,                              0x0001, RW,         "0: Reset", "1: Reset SDRAM controller"}
   {SDRAMOutputStart,                        0x0002, RW,         "1: SDRAM Output Start", "1: Start SDRAM Output"}
   {SDRAMInputStart,                         0x0004, RW,         "2: SDRAM Input Start", "1: Restart SDRAM frame grab"}
   {SDRAMAutoRestart,                        0x0008, RW,         "3: SDRAM Frame Grab Auto Restart", "1: Automatically restart frame grab after output completes"}
   {SDRAMMode,                               0x00F0, RW,         "7-4: SDRAM Operation Mode", "0: Stream HDMI, 1: Grab, 2: Grab then Stream HDMI, 4: One Frame Out HDMI, 5: Grab then One Frame Out HDMI, 6: Ring Buffer, 8: Stream No Format, A: Grab then Stream No Format , C: One Frame Out No Format, D: Grab then One Frame Out No Format, E: Ring Buffer No Format"}
   {SDRAMTripleBuffer,                       0x0100, RW,         "8: SDRAM Triple Buffer Mode", "1: Triple Buffer, 0: Double Buffer"}
   {FixedFrameSize,                          0x0200, RW,         "9: Use SW Defined Frame Buffer Size", "0: Variable frame size from video input, 1: Software defined frame size"}
   {SDRAMOutputReady,                        0x2000, RO,         "13: SDRAM Output Ready", "1: SDRAM ready to send frames"}
   {SDRAMActive,                             0x4000, RO,         "14: SDRAM Frame Buffer running", "1: SDRAM Active"}
   {SDRAMInitDone,                           0x8000, RO,         "15: SDRAM Initialization Complete", "1: SDRAM Initialized"}
TestPatternControls    =   {0x03,     FPGA,  0xFFFF, RW, 0x0000, "TestPatternControls", ""}
   {TestPatternSelect,                       0x000F, RW,         "3-0: Test Pattern select", "0: YCbCr Color Bar,1: March 0, 2: March 1, 3: Horiz Ramp 16bit, 4: Horiz Ramp 8bit, 5: PRBS"}
   {TestPatternResolution,                   0x00F0, RW,         "7-4: Test Pattern resolution", "0: VGA, 1: 720P, 2: 1080P, 3: 1024x768"}
   {TestPatternRate,                         0x0F00, RW,         "11-8: Test Pattern Frame Rate", "0: 15fps, 1: 30fps, 2: 60fps, 3: 120fps"}
CHIP_VERSION_REG       =   {0x05,     FPGA,  0xFFFF, RO, 0x5551, "ID number", "ID number"}
ParallelControls       =   {0x06,     FPGA,  0xFFFF, RW, 0x0000, "Parallel Controls", ""}
   {Reset,                                   0x0001, RW,         "0: Reset", "1: Reset parallel Rx"}
   {BT656Format,                             0x0002, RW,         "1: BT656 Format Enable", "1: Enable BT656 Format Decode"}
   {Interlace,                               0x0004, RW,         "2: Interlace Mode", "1: Interlace mode"}
   {InvertClk,                               0x0008, RW,         "3: Invert Clk", "1: Use inverted sensor clock"}
   {ParallelBitDepth,                        0x00F0, RW,         "7-4: Bit Depth", "0: 8-bit, 1: 10-bit, 2: 12-bit, 3: 14-bit, 4: 16-bit"}
   {LSBDataAlign,                            0x0100, RW,         "8: LSB Align Data", "1: Force data to be LSB aligned"}
CCPControls            =   {0x07,     FPGA,  0xFFFF, RW, 0x0000, "CCP Controls", ""}
   {CCPReset,                                0x0001, RW,         "0: Reset", "Reset the CCP Rx"}
   {CCPClass,                                0x0002, RW,         "1: CCP Class", "0: Class 0, 1: Class 1/2"}
   {CCPBitDepth,                             0x00F0, RW,         "7-4: Bit Depth", "0: 8-bit, 1: 10-bit, 2: 12-bit"}
   {CCPCheckSumError,                        0x8000, RO,         "15: CheckSum Error", "High when error has occurred in CCP transmission"}
CCPFrameCRC            =   {0x08,     FPGA,  0xFFFF, RO, 0x0000, "CCP Frame CRC", "CRC generated from entire frame"}
MipiControls           =   {0x09,     FPGA,  0xFFFF, RW, 0x0000, "Mipi Controls", ""}
   {MipiReset,                               0x0001, RW,         "0: Reset", "Reset the Mipi Rx"}
   {MipiActiveLanes,                         0x0006, RW,         "2-1: Active Lanes", "Select how many lanes are active"}
   {MipiVirtualChannel,                      0x0018, RW,         "4-3: Virtual Channel", "Select the virtual channel to capture"}
   {MipiEmbeddedEnable,                      0x0020, RW,         "5: Embedded Enable", "Enable embedded data"}
   {MipiPacketEnable,                        0x0040, RW,         "6: Packet Enable", "Enable appending packet data to the end of each line"}
   {MipiExtraSettlingEnable,                 0x0080, RW,         "7: Extra Settling Time Enable", "Enable adding extra settling time at start of packet"}
   {MipiCheckSumError,                       0x8000, RO,         "15: CheckSum Error", "High when error has occurred in Mipi transmission"}
MipiFrameCRC           =   {0x0A,     FPGA,  0xFFFF, RO, 0x0000, "Mipi Frame CRC", "CRC generated from entire frame"}
HiSpiControls          =   {0x0B,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Controls", ""}
   {HiSpiReset,                              0x0001, RW,         "0: Reset", "Reset HiSpi Rx"}
   {HiSpiClkFE,                              0x0002, RW,         "1: Clk FE", "Start on falling edge of Clk"}
   {HiSpiMSBFirst,                           0x0004, RW,         "2: MSB First", "Set high when receiving MSB first"}
   {HiSpiCheckSumErrors,                     0xF000, RO,         "15: CheckSum Error", "Detects Transmission errors by lane"}
HiSpiMode              =   {0x0C,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Modes", ""}
   {HiSpiMode,                               0x0003, RW,         "1-0: Mode", "0 - S, 1 – SP Streaming, 2 – ActiveStart-SP8, 3 – SP Packetized"}
   {HiSpiBitDepth,                           0x00F0, RW,         "7-4: Bit Depth", "3 - 8-bit, 4 - 10-bit, 5 - 12-bit, 6 - 14-bit, 7 - 16-bit"}
   {HiSpiActiveLanes,                        0x0F00, RW,         "11-8: Active Lanes", "Select active lanes"}
   {HiSpiMultiLaneMode,                      0xF000, RW,         "15-12: High Dynamic Range MultiLane Modes", "0 - Disable, 1 - 20Bit 4Lane, 2 - 12Bit 3Lane, 3 - 14Bit 3Lane"}
HiSpiLineLength        =   {0x0D,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Line Length", "Select Pix Clocks Per Line Per Lane"}
HiSpiFrameLength       =   {0x0E,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Frame Length", "Select Lines Per Frame"}
HiSpiSyncCode          =   {0x0F,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi SyncCode", ""}
   {HiSpiHSync,                              0x00FF, RW,         "7-0: HSync Value", "Select the horizontal sync code"}
   {HiSpiVSync,                              0xFF00, RW,         "15-8: VSync Value", "Select the vertical sync code"}
VERSION                =   {0x12,     FPGA,  0xFFFF, RO, 0x0000, "FPGA Version", "FPGA Version "}
   {VER_MINOR,                               0x000F, RO,         "3-0: Firmware Minor Version #", ""}
   {VER_MAJOR,                               0x00F0, RO,         "7-4: Firmware Major Version #", ""}
   {SUPER_MAJOR,                             0xFF00, RO,         "15-8: Firmware Super Major Version ", ""}
DATESTAMPREG           =   {0x14,     FPGA,  0xFFFF, RO, 0x0000, "Firmware Build DateStamp", "m/d/y"}
TIMESTAMPREG           =   {0x15,     FPGA,  0xFFFF, RO, 0x0000, "Firmware Build TimeStamp", "h/m/s"}
HDMIFrameLines         =   {0x20,     FPGA,  0xFFFF, RW, 0x0000, "HDMI Frame Lines", "Scan lines per HDMI frame"}
HDMILineLength         =   {0x21,     FPGA,  0xFFFF, RW, 0x0000, "HDMI Line Length", "Samples per HDMI scan line"}
HDMIActiveLines        =   {0x22,     FPGA,  0xFFFF, RW, 0x0000, "HDMI Active Lines", "Active lines per HDMI frame"}
HDMIActivePixels       =   {0x23,     FPGA,  0xFFFF, RW, 0x0000, "HDMI Active Pixels", "Active samples per HDMI scan line"}
HDMIActiveVertOffset   =   {0x24,     FPGA,  0x0FFF, RW, 0x0000, "HDMI Active Vertical Offset", "Offset to first active HDMI scan line"}
HDMIActiveHorizOffset  =   {0x25,     FPGA,  0x0FFF, RW, 0x0000, "HDMI Active Horizontal Offset", "Offset to first active HDMI sample"}
HDMIVSyncOffset        =   {0x26,     FPGA,  0x0FFF, RW, 0x0000, "HDMI VSync Offset", "Offset to first line of HDMI VSync (lines)"}
HDMIVSyncWidth         =   {0x27,     FPGA,  0x0FFF, RW, 0x0000, "HDMI VSync Width", "HDMI VSync Width (lines)"}
HDMIHSyncOffset        =   {0x28,     FPGA,  0x0FFF, RW, 0x0000, "HDMI HSync Offset", "Offset to first sample of HDMI HSync (samples)"}
HDMIHSyncWidth         =   {0x29,     FPGA,  0x0FFF, RW, 0x0000, "HDMI HSync Width", "HDMI HSync Width (samples)"}
FrameCaptureCount      =   {0x2A,     FPGA,  0xFFFF, RW, 0x0000, "Number of frames to capture", "0: Fill SDRAM frame buffer"}
SDRAMRdFrameCount      =   {0x2B,     FPGA,  0xFFFF, RO, 0x0000, "SDRAM Read Frame Count", "Number of Frames available to read in SDRAM"}
ControlReg7            =   {0x2C,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 7", ""}
   {FBTriggerSource,                         0x00FF, RW,         "7-0: Trigger source for ring capture mode", "0x00: Wait for SW Trigger, 0x01: Input frame size change,0x10-0x15: GPIOx rise edge, 0x18-0x1D: GPIOx fall edge, 0xFF: SW Trigger"}
ControlReg8            =   {0x2D,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 8", ""}
   {FBRingBufferFrames,                      0x00FF, RW,         "7-0: Number of frames in ring buffer", ""}
   {FBPostTriggerFrames,                     0xFF00, RW,         "15-8: Number of frames to capture after trigger frame", "0 is illegal"}
SWFrameLines           =   {0x2E,     FPGA,  0xFFFF, RW, 0x0000, "SW Frame Lines", "SW defined scan lines per frame   Note:  SWFrameLines * SWLineSize must be multiple of 16 bytes"}
SWLineLength           =   {0x2F,     FPGA,  0xFFFF, RW, 0x0000, "SW Line Length", "SW defined samples per scan line  Note: must be even"}
InputFrameSize         =   {0x30,     FPGA,  0xFFFF, RO, 0x0000, "Video input lines per frame", ""}
InputLineSize          =   {0x31,     FPGA,  0xFFFF, RO, 0x0000, "Video input samples per scan line", ""}
FrameCount             =   {0x32,     FPGA,  0xFFFF, RO, 0x0000, "Input Frame Counter", ""}
FrameTimeLS            =   {0x33,     FPGA,  0xFFFF, RO, 0x0000, "Input Frame Time 15:0", "1usec resolution"}
FrameTimeMS            =   {0x34,     FPGA,  0xFFFF, RO, 0x0000, "Input Frame Time 32:16", ""}
FX3ByteCountLS         =   {0x35,     FPGA,  0xFFFF, RO, 0x0000, "FX3 Input Byte Count 15:0", ""}
FX3ByteCountMS         =   {0x36,     FPGA,  0xFFFF, RO, 0x0000, "FX3 Input Byte Count 31:16", ""}
HeadboardClockTime     =   {0x37,     FPGA,  0xFFFF, RO, 0x0000, "Headboard Clock Timer", "measures headboard (clock/1024) at 10ns resolution"}
OutputFrameCount       =   {0x38,     FPGA,  0xFFFF, RO, 0x0000, "Output Frame Counter", "Counts frames read from frame buffer"}
ControlReg5            =   {0x40,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 5", ""}
   {FX3PixelPack,                            0x0200, RW,         "9: Enable 10/12bit pixel packing to FX3", "1: 10/12bit pixel packing enabled"}
   {FX3FifoSize,                             0xF000, RW,         "15-12: FX3 Slave Interface FIFO Size", "0: 512, 1: 1024, 2: 4096, 3: 16384 (all sizes in bytes)"}
ControlReg6            =   {0x41,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 6", ""}
   {HeadboardReset,                          0x0001, RW,         "0: Headboard Reset", "1: Headboard Reset"}
   {HeadboardPower,                          0x0002, RW,         "1: Headboard Power Disable", "1: Headboard Power Disable"}
   {HeadboardEnableSPI,                      0x0004, RW,         "2: Headboard SPI Enable", "1: Headboard SPI Enable"}
   {BoardRevision,                           0x3000, RO,         "13-12: Board revision", "0: No headboard SPI support"}
   {LegacyHeadboard,                         0x4000, RO,         "14: Legacy Headboard Installed", "1: Legacy Headboard"}
   {SDRAMSize,                               0x8000, RO,         "15: Installed SDRAM size", "0: 128MB, 1: 512MB"}
SensorGPIOControl      =   {0x42,     FPGA,  0xFFFF, RW, 0x0000, "Sensor GPIO", ""}
   {SensorGPIO,                              0x003F, RW,         "", "5-0: Sensor GPIO"}
   {SensorGPIOEnable,                        0x3F00, RW,         "", "13-8: Enable GPIO output to sensor"}
DiagnosticControls     =   {0x50,     FPGA,  0xFFFF, RW, 0x0000, "DiagnosticControls", ""}
   {Logic Analyzer Control,                  0x00FF, RW,         "7-0: Logic Analyzer select", ""}
   {Diag Reg Select,                         0x0F00, RW,         "11-8: SDRAM Diag Register select", ""}
SDRAMDiagReg           =   {0x51,     FPGA,  0xFFFF, RO, 0x0000, "SDRAM Diagnostic Register", "SDRAM Diagnostics"}
[END]