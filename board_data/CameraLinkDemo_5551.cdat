// Auto Generated by RegisterDefinitions.pl script.
// REGDEF =                     {ADDR,  TYPE,   MASK,   RW, DEFAULT, DESC, DETAIL}
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}
//  ...
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}

[CHIP_DESCRIPTOR]
CHIPNAME = "CameraLinkDemo"
I2C_BASE_ADDRESS = 0xCE
I2C_REG_SIZE = 16
[END]

[Registers]
ControlReg1            =   {0x00,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 1", ""}
   {Reset,                                   0x0001, RW,         "0: Reset", "1: Reset for entire FPGA"}
   {VideoSource,                             0x000E, RW,         "3-1: Video Source", "0: Parallel, 1: reserved, 2: Mipi, 3: HiSpi, 4: Pattern Generator, 5:reserved, 6: Mipi 4Phy, 7: HiSpi 6Phy"}
   {BufferMode,                              0x0030, RW,         "5-4: Operation Mode", "0: Disable, 1: Buffer Bypass, 2: reserved, 3: SDRAM Buffer"}
   {OutputSelect,                            0x0040, RW,         "6: Output port", "0: Demo3, 1: CameraLink"}
   {JPEGMode,                                0x0080, RW,         "7: JPEG Capture Mode", "0: Preserve line formatting, 1: One line per frame (JPEG)"}
   {OutputFrameRate,                         0x0700, RW,         "10-8: Output Frame Rate", "0: Self-Timed,1:7.5fps,2: 15fps,3: 30fps,4: 60fps  (Used for SDRAM modes 0x1 - 0x7)"}
   {DisableVideoLEDs,                        0x4000, RW,         "14: Disable video active LEDs", "1: Disable LEDs"}
   {PLL0Locked,                              0x8000, RO,         "15: Core Clock PLL Locked", "1: Locked"}
ControlReg3            =   {0x02,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 3", ""}
   {SDRAMReset,                              0x0001, RW,         "0: Reset", "1: Reset SDRAM controller"}
   {SDRAMOutputStart,                        0x0002, RW,         "1: SDRAM Output Start", "1: Start SDRAM Output"}
   {SDRAMInputStart,                         0x0004, RW,         "2: SDRAM Input Start", "1: Restart SDRAM frame grab"}
   {SDRAMAutoRestart,                        0x0008, RW,         "3: SDRAM Frame Grab Auto Restart", "1: Automatically restart frame grab after output completes"}
   {SDRAMMode,                               0x00F0, RW,         "7-4: SDRAM Operation Mode", "0: Stream HDMI, 1: Grab, 2: Grab then Stream HDMI, 4: One Frame Out HDMI, 5: Grab then One Frame Out HDMI, 6: Ring Buffer, 8: Stream No Format, A: Grab then Stream No Format , C: One Frame Out No Format, D: Grab then One Frame Out No Format, E: Ring Buffer No Format"}
   {SDRAMTripleBuffer,                       0x0100, RW,         "8: SDRAM Triple Buffer Mode", "1: Triple Buffer, 0: Double Buffer"}
   {FixedFrameSize,                          0x0200, RW,         "9: Use SW Defined Frame Buffer Size", "0: Variable frame size from video input, 1: Software defined frame size"}
   {SDRAMOutputReady,                        0x2000, RO,         "13: SDRAM Output Ready", "1: SDRAM ready to send frames"}
   {SDRAMActive,                             0x4000, RO,         "14: SDRAM Frame Buffer running", "1: SDRAM Active"}
   {SDRAMInitDone,                           0x8000, RO,         "15: SDRAM Initialization Complete", "1: SDRAM Initialized"}
TestPatternControls    =   {0x03,     FPGA,  0xFFFF, RW, 0x0000, "TestPatternControls", ""}
   {TestPatternSelect,                       0x000F, RW,         "3-0: Test Pattern select", "0: YCbCr Color Bar,1: March 0, 2: March 1, 3: Horiz Ramp 16bit, 4: Horiz Ramp 8bit, 5: PRBS"}
   {TestPatternResolution,                   0x00F0, RW,         "7-4: Test Pattern resolution", "0: VGA, 1: 720P, 2: 1080P, 3: 1024x768"}
   {TestPatternRate,                         0x0F00, RW,         "11-8: Test Pattern Frame Rate", "0: 15fps, 1: 30fps, 2: 60fps, 3: 120fps"}
ParallelControls       =   {0x06,     FPGA,  0xFFFF, RW, 0x0000, "Parallel Controls", ""}
   {Reset,                                   0x0001, RW,         "0: Reset", "1: Reset parallel Rx"}
   {BT656Format,                             0x0002, RW,         "1: BT656 Format Enable", "1: Enable BT656 Format Decode"}
   {Interlace,                               0x0004, RW,         "2: Interlace Mode", "1: Interlace mode"}
   {InvertClk,                               0x0008, RW,         "3: Invert Clk", "1: Use inverted sensor clock"}
   {ParallelBitDepth,                        0x00F0, RW,         "7-4: Bit Depth", "0: 8-bit, 1: 10-bit, 2: 12-bit, 3: 14-bit, 4: 16-bit"}
MipiControls           =   {0x09,     FPGA,  0xFFFF, RW, 0x0000, "Mipi Controls", ""}
   {MipiReset,                               0x0001, RW,         "0: Reset", "Reset the Mipi Rx"}
   {MipiActiveLanes,                         0x0006, RW,         "2-1: Active Lanes", "Select how many lanes are active"}
   {MipiVirtualChannel,                      0x0018, RW,         "4-3: Virtual Channel", "Select the virtual channel to capture"}
   {MipiEmbeddedEnable,                      0x0020, RW,         "5: Embedded Enable", "Enable embedded data"}
   {MipiPacketEnable,                        0x0040, RW,         "6: Packet Enable", "Enable appending packet data to the end of each line"}
   {MipiExtraSettlingEnable,                 0x0080, RW,         "7: Extra Settling Time Enable", "Enable adding extra settling time at start of packet"}
   {Mipi4ActivePhys,                         0x0F00, RW,         "11-8: Select Active Phys", "Select Active Phys"}
   {MipiCheckSumError,                       0x8000, RO,         "CheckSum Error", "High when error has occurred in Mipi transmission"}
MipiFrameCRC           =   {0x0A,     FPGA,  0xFFFF, RO, 0x0000, "Mipi Frame CRC", "CRC generated from entire frame"}
HiSpiControls          =   {0x0B,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Controls", ""}
   {HiSpiReset,                              0x0001, RW,         "0: Reset", "Reset HiSpi Rx"}
   {HiSpiClkFE,                              0x0002, RW,         "1: Clk FE", "Start on falling edge of Clk"}
   {HiSpiMSBFirst,                           0x0004, RW,         "2: MSB First", "Set high when receiving MSB first"}
   {HiSpiLanesPerClock,                      0x0008, RW,         "3: Data Lanes per Clock", "0: 4 Lanes, 1: 8 Lanes"}
   {HiSpiInterlaceDisable,                   0x0010, RW,         "4: Interlace Disable", "Disable interlacing of output data"}
   {HiSpiC1FDHDMode,                         0x0040, RW,         "6: C1FD HD Mode", ""}
   {HiSpiAR1820Rev0,                         0x0080, RW,         "7: AR1820HS Rev0 Headboard", ""}
   {HiSpiCheckSumErrors,                     0xF000, RO,         "15-12: CheckSum Error", "Detects Transmission errors by lane"}
HiSpiMode              =   {0x0C,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Modes", ""}
   {HiSpiMode,                               0x0003, RW,         "1-0: Mode", "0 - S, 1 – SP Streaming, 2 – ActiveStart-SP8, 3 – SP Packetized"}
   {HiSpiBitDepth,                           0x00F0, RW,         "7-4: Bit Depth", "3 - 8-bit, 4 - 10-bit, 5 - 12-bit, 6 - 14-bit, 7 - 16-bit"}
   {HiSpiActiveLanes,                        0x0F00, RW,         "11-8: Active Lanes", "Select active lanes"}
   {HiSpiMultiLaneMode,                      0xF000, RW,         "15-12: High Dynamic Range MultiLane Modes", "0 - Disable, 1 - 20Bit 4Lane, 2 - 12Bit 3Lane, 3 - 14Bit 3Lane"}
HiSpiActiveGroups      =   {0x0D,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Active Groups", "Select active PHYs for HiSpi"}
HiSpiLineLength        =   {0x0E,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Line Length", "Select Pix Clocks Per Line Per Lane"}
HiSpiFrameLength       =   {0x0F,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Frame Length", "Select Lines Per Frame"}
HiSpiSyncCode          =   {0x10,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi SyncCode", ""}
   {HiSpiHSync,                              0x00FF, RW,         "7-0: HSync Value", "Select the horizontal sync code"}
   {HiSpiVSync,                              0xFF00, RW,         "15-8: VSync Value", "Select the vertical sync code"}
VERSION                =   {0x12,     FPGA,  0xFFFF, RO, 0x0000, "FPGA Version", "FPGA Version "}
   {VER_MINOR,                               0x000F, RO,         "3-0: Firmware Minor Version #", ""}
   {VER_MAJOR,                               0x00F0, RO,         "7-4: Firmware Major Version #", ""}
   {SUPER_MAJOR,                             0xFF00, RO,         "15-8: Firmware Super Major Version ", ""}
CHIP_VERSION_REG       =   {0x13,     FPGA,  0xFFFF, RO, 0x5551, "ID number", "ID number"}
DATESTAMPREG           =   {0x14,     FPGA,  0xFFFF, RO, 0x0000, "Firmware Build DateStamp", "m/d/y"}
TIMESTAMPREG           =   {0x15,     FPGA,  0xFFFF, RO, 0x0000, "Firmware Build TimeStamp", "h/m/s"}
FrameCaptureCount      =   {0x30,     FPGA,  0xFFFF, RW, 0x0000, "Number of frames to capture", "0: Fill SDRAM frame buffer"}
SDRAMRdFrameCount      =   {0x31,     FPGA,  0xFFFF, RO, 0x0000, "SDRAM Read Frame Count", "Number of Frames available to read in SDRAM"}
ControlReg7            =   {0x32,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 7", ""}
   {FBTriggerSource,                         0x00FF, RW,         "7-0: Trigger source for ring capture mode", "0x00: Wait for SW Trigger, 0x01: Input frame size change,0x10-0x15: GPIOx rise edge, 0x18-0x1D: GPIOx fall edge, 0xFF: SW Trigger"}
ControlReg8            =   {0x33,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 8", ""}
   {FBRingBufferFrames,                      0x00FF, RW,         "7-0: Number of frames in ring buffer", ""}
   {FBPostTriggerFrames,                     0xFF00, RW,         "15-8: Number of frames to capture after trigger frame", "0 is illegal"}
SWFrameLines           =   {0x34,     FPGA,  0xFFFF, RW, 0x0000, "SW defined lines per frame", "SWFrameLines * SWLineSize must be multiple of 16 bytes"}
SWLineLength           =   {0x35,     FPGA,  0xFFFF, RW, 0x0000, "SW defined samples per line", "must be even"}
InputFrameSize         =   {0x36,     FPGA,  0xFFFF, RO, 0x0000, "Video input lines per frame", ""}
InputLineSize          =   {0x37,     FPGA,  0xFFFF, RO, 0x0000, "Video input samples per scan line", ""}
FrameCount             =   {0x38,     FPGA,  0xFFFF, RO, 0x0000, "Input Frame Counter", ""}
FrameTimeLS            =   {0x39,     FPGA,  0xFFFF, RO, 0x0000, "Input Frame Time 15:0", "1usec resolution"}
FrameTimeMS            =   {0x3A,     FPGA,  0xFFFF, RO, 0x0000, "Input Frame Time 31:16", ""}
LineTimeLS             =   {0x3B,     FPGA,  0xFFFF, RO, 0x0000, "Input Line Time 15:0", "5nsec resolution"}
LineTimeMS             =   {0x3C,     FPGA,  0xFFFF, RO, 0x0000, "Input Line Time 31:16", ""}
OutputFrameCount       =   {0x3D,     FPGA,  0xFFFF, RO, 0x0000, "Output Frame Counter", ""}
HeadClockTime          =   {0x3E,     FPGA,  0xFFFF, RO, 0x0000, "Headboard Clock Timer", "Measures headboard clock divided by 1024 with 100MHz clock"}
ControlReg6            =   {0x40,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 6", ""}
   {HeadboardPower,                          0x0002, RW,         "1: Headboard Power Disable", "1: Headboard Power Disable"}
   {LegacyHeadboard,                         0x4000, RO,         "14: Legacy Headboard Installed", "1: Legacy Headboard"}
SensorGPIOControl      =   {0x41,     FPGA,  0xFFFF, RW, 0x0000, "Sensor GPIO", ""}
   {SensorGPIODirection,                     0x003F, RW,         "5-0: Sensor GPIO direction", "0: Output to sensor, 1: Input from sensor"}
SensorTriggerControl   =   {0x42,     FPGA,  0xFFFF, RW, 0x0000, "Sensor Trigger Control", ""}
   {SensorTriggerEnableControls,             0x0001, RW,         "0: Enables sensor trigger controls", "1: Enable.  Overrides SensorGPIODirection[4]"}
   {SensorTriggerEnable,                     0x0002, RW,         "1: Enables repetitive trigger", "1: Enable"}
   {SensorTriggerRunBurst,                   0x0004, RW,         "2: Enables trigger burst sequence ", "1: Enable"}
   {SensorTriggerClockSel,                   0x0008, RW,         "3: Selects clock to use to create trigger", "0: Sensor Feedback Clk, 1: internal 50MHz (required to be 1 for Rev0 C1CA Headboard)"}
   {SensorTriggerBurstCount,                 0xFF00, RW,         "15-8: Number of trigger pulses to create", "0 is illegal"}
SensorTriggerCountHigh0 =   {0x43,     FPGA,  0xFFFF, RW, 0x0000, "Sensor Trigger High Count 15:0", "Number of clocks sensor trigger is to be high"}
SensorTriggerCountHigh1 =   {0x44,     FPGA,  0xFFFF, RW, 0x0000, "Sensor Trigger High Count 31:16", ""}
SensorTriggerCountLow0 =   {0x45,     FPGA,  0xFFFF, RW, 0x0000, "Sensor Trigger Low Count 15:0", "Number of clocks sensor trigger is to be low"}
SensorTriggerCountLow1 =   {0x46,     FPGA,  0xFFFF, RW, 0x0000, "Sensor Trigger Low Count 31:16", ""}
DiagnosticControls     =   {0x50,     FPGA,  0xFFFF, RW, 0x0000, "DiagnosticControls", ""}
   {Logic Analyzer Control,                  0x00FF, RW,         "7-0: Logic Analyzer select", ""}
   {Diag Reg Select,                         0x0F00, RW,         "11-8: SDRAM Diagnostic Register select", ""}
SDRAMDiagReg           =   {0x51,     FPGA,  0xFFFF, RO, 0x0000, "SDRAM Diagnostic Register", ""}
[END]