// Auto Generated by RegisterDefinitions.pl script.
// REGDEF =                     {ADDR,  TYPE,   MASK,   RW, DEFAULT, DESC, DETAIL}
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}
//  ...
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}

[CHIP_DESCRIPTOR]
CHIPNAME = "HDMI Demo"
I2C_BASE_ADDRESS = 0xCE
I2C_REG_SIZE = 16
[END]

[Registers]
ControlReg1            =   {0x00,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 1", ""}
   {Reset,                                   0x0001, RW,         "0: Reset", "1: Reset for entire FPGA"}
   {VideoSource,                             0x000E, RW,         "3-1: Video Source", "0: Parallel, 1: CCP, 2: Mipi, 3: HiSpi, 4: Pattern Generator"}
   {BufferMode,                              0x0030, RW,         "5-4: Operation Mode", "0: Disable, 1: Buffer Bypass, 2: SRAM Buffer, 3: SDRAM Buffer"}
   {VideoClkSel,                             0x0040, RW,         "6: Video clock rate", "0: 74.25MHz, 1: 148.5MHz"}
   {PattGenMode,                             0x0080, RW,         "7: Pattern Generator Mode", "0: 720P, 1:1080P"}
   {SOCDataFormat,                           0x0F00, RW,         "11-8: SOC Data Format", "0: YUV 422 8bit, 1: 565 RGB, 2: 555RGB, 3: 444x RGB, 4: x444RGB"}
   {DCM0Locked,                              0x1000, RO,         "12: Video Clock DLL Locked", "1: Locked"}
   {DCM1Locked,                              0x2000, RO,         "13: 96MHz DLL Locked", "1: Locked"}
   {PLL0Locked,                              0x4000, RO,         "14: Video Clock PLL Locked", "1: Locked"}
   {PLL1Locked,                              0x8000, RO,         "15: SDRAM PLL Locked", "1: Locked"}
ControlReg2            =   {0x01,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 2", ""}
   {HdmiEnable,                              0x0001, RW,         "0: HDMI Enable", "1: Enable HDMI output"}
   {HdmiDataFormat,                          0x000E, RW,         "3-1: HDMI Data Format", "0: RGB_24bit, 1: YCbCr422_24bit, 2: YCbCr422_20bit, 3: YCbCr422_16bit, 4: RGB_30bit"}
   {HdmiDisplayMode,                         0x0010, RW,         "4: HDMI Display Mode", "0: Fill inactive display with black, 2: No fill"}
   {HdmiVsyncPolarity,                       0x0040, RW,         "6: HDMI VSync Polarity", "0: Active High 1: Active Low"}
   {HdmiHsyncPolarity,                       0x0080, RW,         "7: HDMI HSync Polarity", "0: Active High 1: Active Low"}
   {ForceDemo2Source,                        0x0100, RW,         "8: Force Demo2 Source", "0: Frame Buffer, 1: Video Input"}
   {EISEnable,                               0x0200, RW,         "9: Enable EIS operation", "1: Uses EIS offsets from ICP-HD"}
   {Demo2OutputFrameRate,                    0x0C00, RW,         "11-10: Demo2 frame rate control", "0: Frame rate, 1: Frame rate/2, 2: Frame rate/4, 3: Frame rate/8"}
   {Demo2CropMode,                           0x3000, RW,         "13-12: Demo2 Line Crop Mode", "0: No Crop, 1: Display center half of line, 2: Display left half of line, 3: Display right half of line"}
   {ForceEISZero,                            0x8000, RW,         "15: Force EIS Offset to zero", "1: Force to zero"}
ControlReg3            =   {0x02,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 3", ""}
   {SDRAMReset,                              0x0001, RW,         "0: Reset", "1: Reset SDRAM controller"}
   {SDRAMOutputStart,                        0x0002, RW,         "1: SDRAM Output Start", "1: Start SDRAM Output to Demo2"}
   {SDRAMInputStart,                         0x0004, RW,         "2: SDRAM Input Start", "1: Restart SDRAM frame grab"}
   {SDRAMMode,                               0x00F0, RW,         "7-4: SDRAM Operation Mode", "0: Stream, 1: Grab Frames, 2: Grab Frames then Stream Output, 3: Stream Output, 4: One Frame Output, 5: Grab Frames then One Frame Output"}
   {SDRAMOutputReady,                        0x2000, RO,         "13: SDRAM Output Ready", "1: SDRAM ready to send frames to Demo2"}
   {SDRAMActive,                             0x4000, RO,         "14: SDRAM Frame Buffer running", "1: SDRAM Active"}
   {SDRAMInitDone,                           0x8000, RO,         "15: SDRAM Initialization Complete", "1: SDRAM Initialized"}
ControlReg4            =   {0x03,     FPGA,  0xFFFF, RW, 0x0000, "Control Reg 4", ""}
   {Logic Analyzer Control,                  0x00FF, RW,         "7-0: Logic Analyzer select", ""}
   {Diag Reg Select,                         0x0F00, RW,         "11-8: SDRAM Diagnostic Register select", ""}
ParallelControls       =   {0x04,     FPGA,  0xFFFF, RW, 0x0000, "Parallel Controls", ""}
   {Reset,                                   0x0001, RW,         "Reset", "1: Reset parallel Rx"}
   {BT656Format,                             0x0002, RW,         "BT656 Format Enable", "1: Enable BT656 Format Decode"}
   {ParallelBitDepth,                        0x00F0, RW,         "Bit Depth", "0: 8-bit, 1: 10-bit, 2: 12-bit, 3: 14-bit, 4: 16-bit"}
CCPControls            =   {0x05,     FPGA,  0xFFFF, RW, 0x0000, "CCP Controls", ""}
   {CCPReset,                                0x0001, RW,         "Reset", "Reset the CCP Rx"}
   {CCPClass,                                0x0002, RW,         "CCP Class", "0: Class 0, 1: Class 1/2"}
   {CCPBitDepth,                             0x00F0, RW,         "Bit Depth", "0: 8-bit, 1: 10-bit, 2: 12-bit"}
   {CCPCheckSumError,                        0x8000, RO,         "CheckSum Error", "High when error has occurred in CCP transmission"}
CCPFrameCRC            =   {0x06,     FPGA,  0xFFFF, RO, 0x0000, "CCP Frame CRC", "CRC generated from entire frame"}
MipiControls           =   {0x07,     FPGA,  0xFFFF, RW, 0x0000, "Mipi Controls", ""}
   {MipiReset,                               0x0001, RW,         "Reset", "Reset the Mipi Rx"}
   {MipiActiveLanes,                         0x0006, RW,         "Active Lanes", "Select how many lanes are active"}
   {MipiVirtualChannel,                      0x0018, RW,         "Virtual Channel", "Select the virtual channel to capture"}
   {MipiEmbeddedEnable,                      0x0020, RW,         "Embedded Enable", "Enable embedded data"}
   {MipiPacketEnable,                        0x0040, RW,         "Packet Enable", "Enable appending packet data to the end of each line"}
   {MipiExtraSettlingEnable,                 0x0080, RW,         "Extra Settling Time Enable", "Enable adding extra settling time at start of packet"}
   {MipiCheckSumError,                       0x8000, RO,         "CheckSum Error", "High when error has occurred in Mipi transmission"}
MipiFrameCRC           =   {0x08,     FPGA,  0xFFFF, RO, 0x0000, "Mipi Frame CRC", "CRC generated from entire frame"}
HiSpiControls          =   {0x09,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Controls", ""}
   {HiSpiReset,                              0x0001, RW,         "Reset", "Reset HiSpi Rx"}
   {HiSpiClkFE,                              0x0002, RW,         "Clk FE", "Start on falling edge of Clk"}
   {HiSpiMSBFirst,                           0x0004, RW,         "MSB First", "Set high when receiving MSB first"}
   {HiSpiEmbeddedEnable,                     0x0008, RW,         "Embedded Enable", "Enable embedded data"}
   {HiSpiInterlaceDisable,                   0x0010, RW,         "Interlace Disable", "Disable interlacing of output data"}
   {HiSpiLaneSwap,                           0x0020, RW,         "Lane Swap", "Enable Lane swapping"}
   {HiSpiCheckSumErrorEnable,                0x4000, RW,         "CheckSum Error Enable", "Enable Error checking"}
   {HiSpiCheckSumError,                      0x8000, RO,         "CheckSum Error", "High when error has occurred in any HiSpi PHY transmission"}
HiSpiMode              =   {0x0A,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Modes", ""}
   {HiSpiMode,                               0x0003, RW,         "Mode", "0 - S, 1 – SP Streaming, 2 – DSLR, 3 – SP Packetized"}
   {HiSpiBitDepth,                           0x00F0, RW,         "Bit Depth", "3 - 8-bit, 4 - 10-bit, 5 - 12-bit, 6 - 14-bit, 7 - 16-bit"}
   {HiSpiActiveLanes,                        0x0F00, RW,         "Active Lanes", "Select active lanes within each PHY"}
   {HiSpiMultiLaneMode,                      0xF000, RW,         "High Dynamic Range MultiLane Modes", "0 - Disable, 1 - 20Bit 4Lane, 2 - 12Bit 3Lane, 3 - 14Bit 3Lane"}
HiSpiActiveGroups      =   {0x0B,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Active Groups", "Select active PHYs for HiSpi"}
HiSpiLineLength        =   {0x0C,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Line Length", "Select Pix Clocks Per Line Per Lane"}
HiSpiFrameLength       =   {0x0D,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi Frame Length", "Select Lines Per Frame"}
HiSpiSyncCode          =   {0x0E,     FPGA,  0xFFFF, RW, 0x0000, "HiSpi SyncCode", ""}
   {HiSpiHSync,                              0x00FF, RW,         "HSync Value", "Select the horizontal sync code"}
   {HiSpiVSync,                              0xFF00, RW,         "VSync Value", "Select the vertical sync code"}
HiSpiCheckSums0        =   {0x0F,     FPGA,  0xFFFF, RO, 0x0000, "HiSpi CheckSums0", "Detects Transmission errors by lane"}
VERSION                =   {0x12,     FPGA,  0xFFFF, RO, 0x0000, "FPGA Version", "FPGA Version "}
   {VER_MINOR,                               0x000F, RO,         "3-0: Firmware Minor Version #", ""}
   {VER_MAJOR,                               0x00F0, RO,         "7-4: Firmware Major Version #", ""}
   {SUPER_MAJOR,                             0xFF00, RO,         "15-8: Firmware Super Major Version ", ""}
CHIP_VERSION_REG       =   {0x13,     FPGA,  0xFFFF, RO, 0xC0CE, "ID number", "ID number"}
DATESTAMPREG           =   {0x14,     FPGA,  0xFFFF, RO, 0x0000, "Firmware Build DateStamp", "m/d/y"}
TIMESTAMPREG           =   {0x15,     FPGA,  0xFFFF, RO, 0x0000, "Firmware Build TimeStamp", "h/m/s"}
SRAMBistControl        =   {0x16,     FPGA,  0xFFFF, RW, 0x0000, "FB Bist Control", ""}
   {BistEn,                                  0x0001, RW,         "0: BIST Enable", "1: Enable BIST"}
   {BistMode,                                0x0006, RW,         "2-1: BIST Mode", "0: Single Test, 1: Continuous Test, 2: Single Test - Stop On Error, 3: Continuous Test - Stop On Error"}
   {BistWriteOnly,                           0x0008, RW,         "3: BIST Write Only", "1: Write test only"}
   {BistReadOnly,                            0x0010, RW,         "4: BIST Read Only", "1: Read test only"}
   {BistZeroData,                            0x0020, RW,         "5: BIST Zero Data", "1: Force BIST data to zero"}
   {SRAM0BistComp,                           0x0040, RO,         "6: SRAM0 BIST Complete", "1: Test complete"}
   {SRAM1BistComp,                           0x0080, RO,         "7: SRAM1 BIST Complete", "1: Test complete"}
SRAM0BistErrCnt        =   {0x17,     FPGA,  0xFFFF, RO, 0x0000, "SRAM0 BIST Error Count", ""}
SRAM0BistRunCntLS      =   {0x18,     FPGA,  0xFFFF, RO, 0x0000, "SRAM0 BIST Run Count 15-0", ""}
SRAM0BistRunCntMS      =   {0x19,     FPGA,  0xFFFF, RO, 0x0000, "SRAM0 BIST Run Count 31-16", ""}
SRAM1BistErrCnt        =   {0x1A,     FPGA,  0xFFFF, RO, 0x0000, "SRAM1 BIST Error Count", ""}
SRAM1BistRunCntLS      =   {0x1B,     FPGA,  0xFFFF, RO, 0x0000, "SRAM1 BIST Run Count 15-0", ""}
SRAM1BistRunCntMS      =   {0x1C,     FPGA,  0xFFFF, RO, 0x0000, "SRAM1 BIST Run Count 31-16", ""}
FrameLines             =   {0x20,     FPGA,  0xFFFF, RW, 0x0000, "Frame Lines", ""}
   {FrameLines,                              0xFFFF, RW,         "15-0: Scan lines per frame", ""}
LineLength             =   {0x21,     FPGA,  0xFFFF, RW, 0x0000, "Line Length", ""}
   {LineLength,                              0xFFFF, RW,         "15-0: Samples per scan line", ""}
ActiveLines            =   {0x22,     FPGA,  0xFFFF, RW, 0x0000, "Active Lines", ""}
   {ActiveLines,                             0xFFFF, RW,         "15-0: Active lines per frame", ""}
ActivePixels           =   {0x23,     FPGA,  0xFFFF, RW, 0x0000, "Active Pixels", ""}
   {ActivePixels,                            0xFFFF, RW,         "15-0: Active samples per line", ""}
ActiveVertOffset       =   {0x24,     FPGA,  0x0FFF, RW, 0x0000, "Active Vertical Offset", ""}
   {ActiveVertOffset,                        0x0FFF, RW,         "11-0: Offset to first active line", ""}
ActiveHorizOffset      =   {0x25,     FPGA,  0x0FFF, RW, 0x0000, "Active Horizontal Offset", ""}
   {ActiveHorizOffset,                       0x0FFF, RW,         "11-0: Offset to first active sample", ""}
VSyncOffset            =   {0x26,     FPGA,  0x0FFF, RW, 0x0000, "VSync Offset", ""}
   {VSyncOffset,                             0x0FFF, RW,         "11-0: Offset to first line of VSync", ""}
VSyncWidth             =   {0x27,     FPGA,  0x0FFF, RW, 0x0000, "VSync Width", ""}
   {VSyncWidth,                              0x0FFF, RW,         "11-0: VSync Width (lines)", ""}
HSyncOffset            =   {0x28,     FPGA,  0x0FFF, RW, 0x0000, "HSync Offset", ""}
   {HSyncOffset,                             0x0FFF, RW,         "11-0: Offset to first sample of HSync", ""}
HSyncWidth             =   {0x29,     FPGA,  0x0FFF, RW, 0x0000, "HSync Width", ""}
   {HSyncWidth,                              0x0FFF, RW,         "11-0: HSync Width (samples)", ""}
InputFrameSize         =   {0x30,     FPGA,  0xFFFF, RO, 0x0000, "Video input lines per frame", ""}
   {InputFrameSize,                          0xFFFF, RO,         "15-0: lines", ""}
InputLineSize          =   {0x31,     FPGA,  0xFFFF, RO, 0x0000, "Video input samples per scan line", ""}
   {InputLineSize,                           0xFFFF, RO,         "15-0: Samples", ""}
FrameCaptureCount      =   {0x32,     FPGA,  0xFFFF, RW, 0x0000, "Number of frames to capture", ""}
   {FrameCaptureCount,                       0xFFFF, RW,         "0: Fill SDRAM frame buffer", ""}
SDRAMRdFrameCount      =   {0x33,     FPGA,  0xFFFF, RO, 0x0000, "SDRAM Read Frame Count", ""}
   {SDRAMRdFrameCount,                       0xFFFF, RO,         "15-0: Number of Frames available to read in SDRAM", ""}
SDRAMDiagReg           =   {0x34,     FPGA,  0xFFFF, RO, 0x0000, "SDRAM Diagnostic Register", ""}
   {SDRAMDiagReg,                            0xFFFF, RO,         "SDRAM Diagnostics", ""}
InputLineTime          =   {0x35,     FPGA,  0xFFFF, RO, 0x0000, "Input Video Line Time", ""}
   {InputLineTime,                           0xFFFF, RO,         "15-0: Input Video Line Time", "Video input line time counted at 96MHz"}
[END]