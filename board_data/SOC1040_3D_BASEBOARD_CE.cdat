
// Auto Generated by regfilegen.py script.
// REGDEF =                     {ADDR,  TYPE,   MASK,   RW, DEFAULT, DESC, DETAIL}
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}
//  ...
//  {BITDEF,                                   MASK,   RW,          DESC, DETAIL}

[CHIP_DESCRIPTOR]
CHIPNAME = "SOC1040_3D_BASEBOARD"
SERIAL_BASE_ADDRESS = 0xC8
SERIAL_DATA_SIZE = 16
[END]

[Registers]

CCP_ControlReg         =   {0x00,     FPGA,  0x2003, RW, 0x2400, "CCP Control Reg", ""}
   {CCP_RESET,                               0x0001, RW,         "0: Reset the CCP decoder", "While set to high, decoder is reset."}
   {DAC_Reset,                               0x0004, RW,         "2: DAC reset", "1 - Reset DAC, 0 - Normal Operation"}
   {Dac_Mode,                                0x0008, RW,         "3: ADC Trigger Selection", "1 = DUT triggered; 0 = synthetic trigger"}
   {TestPatEn,                               0x4000, RW,         "14: Enable Test Pattern", "While set to high TP enabled."}
OutputReg              =   {0x01,     FPGA,  0x8003, RW, 0x0000, "Control Register", ""}
   {OutputSel,                               0x0003, RW,         "Output Select", "0 - Stereo, 1 - Test Pattern, 2 -Sensor 1 bypass, 3 - Sensor 2 bypass"}
   {ColorDepth,                              0x0070, RW,         "Sensor Pixel Depth", "0=8-bit,1=10-bit,2=12-bit,3=14-bit,4=16-bit"}
   {FVLVSel,                                 0x1000, RW,         "Alternate FV/LV", "0 - Straight Through, 1 - DIO4 and 7"}
   {InvertPix,                               0x2000, RW,         "Invert PixClk", "1 - will latch on Falling Edge"}
   {Duplicate,                               0x4000, RW,         "duplicate pixel data", "1 -duplicate pixel data,0 - two pixel data"}
SwitchReg              =   {0x03,     FPGA,  0xFFFF, RW, 0x0000, "Switch Controls", "Controlled by Analog Form"}
   {HS_BUFF_EN,                              0x0040, RW,         "HS Buffer Enable", "0 - disabled, 1 - enabled"}
   {Enable3_3V,                              0x0080, RW,         "Enable 3_3V", "0 - disabled, 1 - enabled"}
I2CReg                 =   {0x04,     FPGA,  0x0FC1, RW, 0x0001, "I2C Register", "I2C Controls"}
   {SlaveEnable,                             0x0003, RW,         "I2C Slave Enable", "Enables the I2C Slave"}
   {SClkEnable,                              0x0030, RW,         "SClk Enable", "Enable Driving of SClk (for Scan Chain)"}
   {SDataEnable,                             0x00C0, RW,         "SData Enable", "Enable Driving of SData (for Scan Chain)"}
   {SClkValue,                               0x0300, RW,         "SClk Value", "Value of SClk (for Scan Chain)"}
   {SDataValue,                              0x0C00, RW,         "SData Value", "Value of SData (for Scan Chain)"}
   {SClkRead,                                0x1000, RW,         "SClk Readback", ""}
   {SDataRead,                               0x2000, RW,         "SData Value", ""}
DirReg0                =   {0x05,     FPGA,  0xFFFF, RW, 0x00C3, "I/O Direction Control 0", "Set Drive or High Z"}
   {S0_RESET,                                0x0001, RW,         "Drive S0_RESET", ""}
   {S1_RESET,                                0x0002, RW,         "Drive S1_RESET", ""}
   {S0_FLASH,                                0x0004, RW,         "Drive S0_FLASH", ""}
   {S1_FLASH,                                0x0008, RW,         "Drive S1_FLASH", ""}
   {S0_SHUTTER,                              0x0010, RW,         "Drive S0_SHUTTER", ""}
   {S1_SHUTTER,                              0x0020, RW,         "Drive S1_SHUTTER", ""}
   {S0_TEST,                                 0x0040, RW,         "Drive S0_TEST", ""}
   {S1_TEST,                                 0x0080, RW,         "Drive S1_TEST", ""}
   {S0_SADDR,                                0x0100, RW,         "Drive S0_SADDR", ""}
   {S1_SADDR,                                0x0200, RW,         "Drive S1_SADDR", ""}
   {S0_CLKIN,                                0x0400, RW,         "Drive S0_CLKIN", ""}
   {S1_CLKIN,                                0x0800, RW,         "Drive S0_CLKIN", ""}
   {S0_LINE_VALID,                           0x1000, RW,         "Drive S0_LINE_VALID", ""}
   {S1_LINE_VALID,                           0x2000, RW,         "Drive S1_LINE_VALID", ""}
   {S0_FRAME_VALID,                          0x4000, RW,         "Drive S0_FRAME_VALID", ""}
   {S1_FRAME_VALID,                          0x8000, RW,         "Drive S1_FRAME_VALID", ""}
DirReg1                =   {0x06,     FPGA,  0xFFF8, RW, 0x0000, "DOUT Direction Control", "0: DOUT is input; 1: DOUT is output"}
DirReg2                =   {0x07,     FPGA,  0x0FF8, RW, 0x0000, "DOUT Direction Control", "0: DOUT is input; 1: DOUT is output"}
DOUTForce1             =   {0x08,     FPGA,  0x0FFF, RW, 0x0000, "DOUT forced value", "0: DOUT is input; 1: DOUT is output"}
DOUTForce2             =   {0x09,     FPGA,  0x0FFF, RW, 0x0000, "DOUT forced value", "0: DOUT is input; 1: DOUT is output"}
HardwareReg            =   {0x11,     FPGA,  0xFFFF, RO, 0x0000, "Hardware Type and Revision", ""}
   {TYPE,                                    0x000F, RO,         "0 - Probe, 1 - Buffered Dut, 2 - UnBuffered Dut", ""}
   {REV,                                     0x00F0, RO,         "Hardware Revision Number", ""}
DUT_VERSION            =   {0x12,     FPGA,  0xFFFF, RO, 0x0000, "FPGA Version", "FPGA Version "}
   {VER_MINOR,                               0x000F, RO,         "3-0: Firmware Minor Version #", ""}
   {VER_MAJOR,                               0x00F0, RO,         "7-4: Firmware Major Version #", ""}
   {SUPER_MAJOR,                             0xFF00, RO,         "15-8: Firmware Super Major Version ", ""}
CHIP_VERSION_REG       =   {0x13,     FPGA,  0xFFFF, RO, 0x00CE, "ID number", "ID number"}
DUT_DATESTAMPREG       =   {0x14,     FPGA,  0xFFFF, RO, 0x0000, "Firmware Build DateStamp", "m/d/y"}
DUT_TIMESTAMPREG       =   {0x15,     FPGA,  0xFFFF, RO, 0x0000, "Firmware Build TimeStamp", "h/m/s"}
StereoCamera           =   {0x16,     FPGA,  0xFFFF, RW, 0x0000, "Stereo Camera Control/Status", ""}
   {Left_First,                              0x0001, RW,         "Left Eye Arrival First", "Left Eye Arrival First"}
   {Right_First,                             0x0002, RW,         "Right Eye Arrival First", "Right Eye Arrival First"}
   {Eye_First,                               0x0004, RO,         "0: Right Eye First", "1: Left Eye First"}
   {EightBitMode,                            0x0008, RW,         "Pack 2 8-bit data to 16-bit data", "1: 8-bit mode"}
   {StereoSelect,                            0x0030, RW,         "Stereo Output Select", "0: pack 2 lines, 1: left red right cyan"}
   {RgbFormat,                               0x00C0, RW,         "RGB Format", "0: RGB565, 1: RGB555, 2: RGB444x, 3: RGBx444"}
LineWidth              =   {0x17,     FPGA,  0xFFFF, RW, 0x0500, "Stereo Camera Line Width", ""}
LogicAnalyzer          =   {0x20,     FPGA,  0xFFFF, RW, 0x0000, "Logic Analyzer Selection", "See LogicAssignment File"}
MigMate_3D_DIGIO       =   {0x21,     FPGA,  0xFFFF, RW, 0x00C3, "MigMate_3D Digital IO pins (out)", "SET MigMate_3D DIGIO pins"}
   {S0_RESET,                                0x0001, RW,         "S0_RESET", ""}
   {S1_RESET,                                0x0002, RW,         "S1_RESET", ""}
   {S0_FLASH,                                0x0004, RW,         "S0_FLASH", ""}
   {S1_FLASH,                                0x0008, RW,         "S1_FLASH", ""}
   {S0_SHUTTER,                              0x0010, RW,         "S0_SHUTTER", ""}
   {S1_SHUTTER,                              0x0020, RW,         "S1_SHUTTER", ""}
   {S0_TEST,                                 0x0040, RW,         "S0_TEST", ""}
   {S1_TEST,                                 0x0080, RW,         "S1_TEST", ""}
   {S0_SADDR,                                0x0100, RW,         "S0_SADDR", ""}
   {S1_SADDR,                                0x0200, RW,         "S1_SADDR", ""}
   {S0_CLKIN,                                0x0400, RW,         "S0_CLKIN", ""}
   {S1_CLKIN,                                0x0800, RW,         "S0_CLKIN", ""}
   {S0_LINE_VALID,                           0x1000, RW,         "S0_LINE_VALID", ""}
   {S1_LINE_VALID,                           0x2000, RW,         "S1_LINE_VALID", ""}
   {S0_FRAME_VALID,                          0x4000, RW,         "S0_FRAME_VALID", ""}
   {S1_FRAME_VALID,                          0x8000, RW,         "S1_FRAME_VALID", ""}
MigMate_3D_DIGIO_Rback =   {0x22,     FPGA,  0xFFFF, RO, 0x0000, "MigMate_3D Digital IO pins (in)", "READ MigMate_3D DIGIO pins"}
PassThruEn             =   {0x23,     FPGA,  0xFFFF, RW, 0x0000, "Pass Through Enable", "1 - Driven by Demo2X 0: Driven by local register"}
MigMate_3D_SIG_MON_G0  =   {0xA0,     FPGA,  0xFFFF, RO, 0x0000, "Signal Monitor Group0", "Toggle State"}
MigMate_3D_SIG_MON_G1  =   {0xA1,     FPGA,  0xFFFF, RO, 0x0000, "Signal Monitor Group1", "Toggle State"}
MigMate_3D_SIG_MON_G2  =   {0xA2,     FPGA,  0xFFFF, RO, 0x0000, "Signal Monitor Group2", "Toggle State"}
MigMate_3D_SIG_MON_G3  =   {0xA3,     FPGA,  0xFFFF, RO, 0x0000, "Signal Monitor Group3", "Toggle State"}
MigMate_3D_SIG_MON_G4  =   {0xA4,     FPGA,  0xFFFF, RO, 0x0000, "Signal Monitor Group4", "Toggle State"}
[END]